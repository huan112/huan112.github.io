<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue</title>
      <link href="/vue-1.html"/>
      <url>/vue-1.html</url>
      
        <content type="html"><![CDATA[<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><h2 id="UI组件"><a href="#UI组件" class="headerlink" title="UI组件"></a>UI组件</h2><ul><li><a href="https://github.com/ElemeFE/element" target="_blank" rel="noopener">element</a> ★13489 - 饿了么出品的Vue2的web UI工具套件</li><li><a href="https://github.com/airyland/vux" target="_blank" rel="noopener">Vux</a> ★8133 - 基于Vue和WeUI的组件库</li><li><a href="https://github.com/iview/iview" target="_blank" rel="noopener">iview</a> ★6634 - 基于 Vuejs 的开源 UI 组件库</li><li><a href="https://github.com/ElemeFE/mint-ui" target="_blank" rel="noopener">mint-ui</a> ★6253 - Vue 2的移动UI元素</li><li><a href="https://github.com/museui/muse-ui" target="_blank" rel="noopener">muse-ui</a> ★3705 - 三端样式一致的响应式 UI 库</li><li><a href="https://github.com/marcosmoura/vue-material" target="_blank" rel="noopener">vue-material</a> ★3328 - 通过Vue Material和Vue 2建立精美的app应用</li><li><a href="https://github.com/vuetifyjs/vuetify" target="_blank" rel="noopener">vuetify</a> ★2925 - 为移动而生的Vue JS 2组件框架</li><li><a href="https://github.com/JosephusPaye/Keen-UI" target="_blank" rel="noopener">Keen-UI</a> ★2749 - 轻量级的基本UI组件合集</li><li><a href="https://github.com/wangdahoo/vonic" target="_blank" rel="noopener">vonic</a> ★1913 - 快速构建移动端单页应用</li><li><a href="https://github.com/monterail/vue-multiselect" target="_blank" rel="noopener">vue-multiselect</a> ★1539 - Vue.js选择框解决方案</li><li><a href="https://github.com/egoist/eme" target="_blank" rel="noopener">eme</a> ★1529 - 优雅的Markdown编辑器</li><li><a href="https://github.com/taylorchen709/vueAdmin" target="_blank" rel="noopener">vueAdmin</a> ★1455 - 基于vuejs2和element的简单的管理员模板</li><li><a href="https://github.com/pi0/bootstrap-vue" target="_blank" rel="noopener">bootstrap-vue</a> ★1267 - 应用于Vuejs2的Twitter的Bootstrap 4组件</li><li><a href="https://github.com/David-Desmaisons/Vue.Draggable" target="_blank" rel="noopener">Vue.Draggable</a> ★1191 - 实现拖放和视图模型数组同步</li><li><a href="https://github.com/Zulko/eagle.js" target="_blank" rel="noopener">eagle.js</a> ★1128 - hacker的幻灯片演示框架</li><li><a href="https://github.com/surmon-china/vue-awesome-swiper" target="_blank" rel="noopener">vue-awesome-swiper</a> ★1012 - vue.js触摸滑动组件</li><li><a href="https://github.com/ratiw/vue-table" target="_blank" rel="noopener">vue-table</a> ★1009 - 简化数据表格</li><li><a href="https://github.com/Coffcer/vue-chat" target="_blank" rel="noopener">vue-chat</a> ★859 - vuejs和vuex及webpack的聊天示例</li><li><a href="https://github.com/chenz24/vue-blu" target="_blank" rel="noopener">vue-blu</a> ★850 - 帮助你轻松创建web应用</li><li><a href="https://github.com/hilongjw/vue-recyclerview" target="_blank" rel="noopener">vue-recyclerview</a> ★849 - 管理大列表的vue-recyclerview</li><li><a href="https://github.com/OYsun/VueCircleMenu" target="_blank" rel="noopener">VueCircleMenu</a> ★838 - 漂亮的vue圆环菜单</li><li><a href="https://github.com/ElemeFE/vue-infinite-scroll" target="_blank" rel="noopener">vue-infinite-scroll</a> ★779 - VueJS的无限滚动指令</li><li><a href="https://github.com/rafaelpimpa/buefy" target="_blank" rel="noopener">buefy</a> ★755 - 响应式UI组件轻量级库</li><li><a href="https://github.com/FE-Driver/vue-beauty" target="_blank" rel="noopener">vue-beauty</a> ★749 - 由vue和ant design创建的优美UI组件</li><li><a href="https://github.com/MopTym/vue-waterfall" target="_blank" rel="noopener">vue-waterfall</a> ★737 - Vue.js的瀑布布局组件</li><li><a href="https://github.com/luojilab/radon-ui" target="_blank" rel="noopener">radon-ui</a> ★715 - 快速开发产品的Vue组件库</li><li><a href="https://github.com/lookstudios/vue-loop" target="_blank" rel="noopener">vue-loop</a> ★701 - 无限的内容循环</li><li><a href="https://github.com/apertureless/vue-chartjs" target="_blank" rel="noopener">vue-chartjs</a> ★694 - vue中的Chartjs的封装</li><li><a href="https://github.com/myronliu347/vue-carbon" target="_blank" rel="noopener">vue-carbon</a> ★684 - 基于 vue 开发MD风格的移动端</li><li><a href="https://github.com/vuejs/vue-syntax-highlight" target="_blank" rel="noopener">vue-syntax-highlight</a> ★655 - Sublime Text语法高亮</li><li><a href="https://github.com/Justineo/vue-echarts" target="_blank" rel="noopener">vue-echarts</a> ★649 - VueJS的ECharts组件</li><li><a href="https://github.com/surmon-china/vue-quill-editor" target="_blank" rel="noopener">vue-quill-editor</a> ★615 - 基于Quill适用于Vue2的富文本编辑器</li><li><a href="https://github.com/ElemeFE/vue-amap" target="_blank" rel="noopener">vue-amap</a> ★571 - 基于Vue 2和高德地图的地图组件</li><li><a href="https://github.com/jinzhe/vue-calendar" target="_blank" rel="noopener">vue-calendar</a> ★536 - 日期选择插件</li><li><a href="https://github.com/PeachScript/vue-infinite-loading" target="_blank" rel="noopener">vue-infinite-loading</a> ★501 - VueJS的无限滚动插件</li><li><a href="https://github.com/ElemeFE/vue-swipe" target="_blank" rel="noopener">vue-swipe</a> ★481 - VueJS触摸滑块</li><li><a href="https://github.com/microzz/vue-music-player" target="_blank" rel="noopener">vue-music-player</a> ★451 - Vuejs写一个音乐播放器</li><li><a href="https://github.com/wangdahoo/vue-scroller" target="_blank" rel="noopener">vue-scroller</a> ★444 - Vonic UI的功能性组件</li><li><a href="https://github.com/hilongjw/vue-datepicker" target="_blank" rel="noopener">vue-datepicker</a> ★436 - 日历和日期选择组件</li><li><a href="https://github.com/Vanthink-UED/vue-core-image-upload" target="_blank" rel="noopener">vue-core-image-upload</a> ★393 - 轻量级的vue上传插件</li><li><a href="https://github.com/hilongjw/vue-progressbar" target="_blank" rel="noopener">vue-progressbar</a> ★379 - vue轻量级进度条</li><li><a href="https://github.com/Zhangdroid/Gokotta" target="_blank" rel="noopener">Gokotta</a> ★375 - 简单的音乐播放器</li><li><a href="https://github.com/sagalbot/vue-sortable" target="_blank" rel="noopener">vue-sortable</a> ★373 - 轻松添加拖拽排序</li><li><a href="https://github.com/alessiomaffeis/vue-picture-input" target="_blank" rel="noopener">vue-picture-input</a> ★352 - 移动友好的图片文件输入组件</li><li><a href="https://github.com/xlsdg/vue-echarts-v3" target="_blank" rel="noopener">vue-echarts-v3</a> ★351 - VueJS组件封装</li><li><a href="https://github.com/jrainlau/markcook" target="_blank" rel="noopener">markcook</a> ★343 - 好看的markdown编辑器</li><li><a href="https://github.com/surmon-china/vue-video-player" target="_blank" rel="noopener">vue-video-player</a> ★336 - VueJS视频及直播播放器</li><li><a href="https://github.com/GuillaumeLeclerc/vue-google-maps" target="_blank" rel="noopener">vue-google-maps</a> ★334 - 带有双向数据绑定Google地图组件</li><li><a href="https://github.com/QingWei-Li/vue-trend" target="_blank" rel="noopener">vue-trend</a> ★332 - 简单优雅的星光线条</li><li><a href="https://github.com/charliekassel/vuejs-datepicker" target="_blank" rel="noopener">vuejs-datepicker</a> ★314 - vue日期选择器组件</li><li><a href="https://github.com/Wanderxx/vue-fullcalendar" target="_blank" rel="noopener">vue-fullcalendar</a> ★313 - 基于vue.js的全日历组件</li><li><a href="https://github.com/PeakTai/vue-html5-editor" target="_blank" rel="noopener">vue-html5-editor</a> ★303 - html5所见即所得编辑器</li><li><a href="https://github.com/lian-yue/vue-upload-component" target="_blank" rel="noopener">vue-upload-component</a> ★298 - Vuejs文件上传组件</li><li><a href="https://github.com/SimonZhangITer/DataVisualization" target="_blank" rel="noopener">DataVisualization</a> ★298 - 数据可视化</li><li><a href="https://github.com/matfish2/vue-tables-2" target="_blank" rel="noopener">vue-tables-2</a> ★291 - 显示数据的bootstrap样式网格</li><li><a href="https://github.com/OYsun/VueStar" target="_blank" rel="noopener">VueStar</a> ★270 - 带星星动画的vue点赞按钮</li><li><a href="https://github.com/njleonzhang/vue-data-tables" target="_blank" rel="noopener">vue-data-tables</a> ★266 - VueJS2数据表格</li><li><a href="https://github.com/TahaSh/vue-paginate" target="_blank" rel="noopener">vue-paginate</a> ★261 - 分页数据的简约VueJS插件</li><li><a href="https://github.com/ydcss/vue-ydui" target="_blank" rel="noopener">vue-ydui</a> ★247 - 基于Vue2的移动端和微信UI</li><li><a href="https://github.com/egoist/vue-mugen-scroll" target="_blank" rel="noopener">vue-mugen-scroll</a> ★239 - 无限滚动组件</li><li><a href="https://github.com/Akryum/vue-virtual-scroller" target="_blank" rel="noopener">vue-virtual-scroller</a> ★238 - 带任意数目数据的顺畅的滚动</li><li><a href="https://github.com/icai/vue2-calendar" target="_blank" rel="noopener">vue2-calendar</a> ★236 - 支持lunar和日期事件的日期选择器</li><li><a href="https://github.com/rowanwins/vue-dropzone" target="_blank" rel="noopener">vue-dropzone</a> ★233 - 用于文件上传的Vue组件</li><li><a href="https://github.com/Awheat/vue2-douban-market" target="_blank" rel="noopener">vue2-douban-market</a> ★233 - 仿豆瓣市集webapp项目</li><li><a href="https://github.com/euvl/vue-js-modal" target="_blank" rel="noopener">vue-js-modal</a> ★228 - 移动友好的Vuejs2的modal</li><li><a href="https://github.com/warpcgd/vue-slider" target="_blank" rel="noopener">vue-slider</a> ★224 - vue 滑动组件</li><li><a href="https://github.com/Haixing-Hu/vue-datetime-picker" target="_blank" rel="noopener">vue-datetime-picker</a> ★224 - 日期时间选择控件</li><li><a href="https://github.com/ccforward/rubik" target="_blank" rel="noopener">rubik</a> ★217 - 基于Vuejs2的开源 UI 组件库</li><li><a href="https://github.com/coderdiaz/vue-datasource" target="_blank" rel="noopener">vue-datasource</a> ★210 - 创建VueJS动态表格</li><li><a href="https://github.com/dai-siki/vue-image-crop-upload" target="_blank" rel="noopener">vue-image-crop-upload</a> ★205 - vue图片剪裁上传组件</li><li><a href="https://github.com/hifarer/Vueditor" target="_blank" rel="noopener">Vueditor</a> ★204 - 所见即所得的编辑器</li><li><a href="https://github.com/mint-ui/mint-loadmore" target="_blank" rel="noopener">mint-loadmore</a> ★203 - VueJS的双向下拉刷新组件</li><li><a href="https://github.com/NightCatSama/vue-slider-component" target="_blank" rel="noopener">vue-slider-component</a> ★202 - 在vue1和vue2中使用滑块</li><li><a href="https://github.com/microzz/vue-chat" target="_blank" rel="noopener">vue-chat</a> ★200 - Vue全家桶+Socket.io+Express/Koa2打造一个智能聊天室</li><li><a href="https://github.com/hinesboy/mavonEditor" target="_blank" rel="noopener">mavonEditor</a> ★179 - 基于Vue的markdown编辑器</li><li><a href="https://github.com/Wlada/vue-carousel-3d" target="_blank" rel="noopener">vue-carousel-3d</a> ★173 - VueJS的3D轮播组件</li><li><a href="https://github.com/Dafrok/vue-baidu-map" target="_blank" rel="noopener">vue-baidu-map</a> ★170 - 基于 Vue 2的百度地图组件库</li><li><a href="https://github.com/adeptoas/sweet-modal-vue" target="_blank" rel="noopener">sweet-modal-vue</a> ★170 - 精美的点击提示对话框</li><li><a href="https://github.com/creotip/vue-particles" target="_blank" rel="noopener">vue-particles</a> ★168 - 粒子背景的vue组件</li><li><a href="https://github.com/weilao/vue-swiper" target="_blank" rel="noopener">vue-swiper</a> ★167 - 易于使用的滑块组件</li><li><a href="https://github.com/F-loat/vue-simplemde" target="_blank" rel="noopener">vue-simplemde</a> ★166 - VueJS的Markdown编辑器组件</li><li><a href="https://github.com/hilongjw/vue-slide" target="_blank" rel="noopener">vue-slide</a> ★161 - vue轻量级滑动组件</li><li><a href="https://github.com/Astray-git/vue-dragula" target="_blank" rel="noopener">vue-dragula</a> ★157 - 使拖放变得简单</li><li><a href="https://github.com/Alex-fun/vue-drag-and-drop-list" target="_blank" rel="noopener">vue-drag-and-drop-list</a> ★156 - 创建排序列表的Vue指令</li><li><a href="https://github.com/davidroyer/vue2-editor" target="_blank" rel="noopener">vue2-editor</a> ★155 - HTML编辑器</li><li><a href="https://github.com/hchstera/vue-charts" target="_blank" rel="noopener">vue-charts</a> ★152 - 轻松渲染一个图表</li><li><a href="https://github.com/LucienLee/vue-data-grid" target="_blank" rel="noopener">vue-data-grid</a> ★151 - VueJS复杂桌面交互示例</li><li><a href="https://github.com/vuwe/vuwe" target="_blank" rel="noopener">vuwe</a> ★150 - 基于微信WeUI所开发的专用于Vue2的组件库</li><li><a href="https://github.com/MatteoGabriele/vue-progressive-image" target="_blank" rel="noopener">vue-progressive-image</a> ★148 - Vue的渐进图像加载插件</li><li><a href="https://github.com/ElemeFE/vue-msgbox" target="_blank" rel="noopener">vue-msgbox</a> ★148 - vuejs的消息框</li><li><a href="https://github.com/JALBAA/vue-lazyload-img" target="_blank" rel="noopener">vue-lazyload-img</a> ★147 - 移动优化的vue图片懒加载插件</li><li><a href="https://github.com/hilongjw/vue-dragging" target="_blank" rel="noopener">vue-dragging</a> ★146 - 使元素可以拖拽</li><li><a href="https://github.com/santiblanko/vue-instant" target="_blank" rel="noopener">vue-instant</a> ★143 - 轻松创建自动提示的自定义搜索控件</li><li><a href="https://github.com/nicolasbeauvais/vue-social-sharing" target="_blank" rel="noopener">vue-social-sharing</a> ★142 - 社交分享组件</li><li><a href="https://github.com/littlewin-wang/vue-images" target="_blank" rel="noopener">vue-images</a> ★139 - 显示一组图片的lightbox组件</li><li><a href="https://github.com/NewDadaFE/vue-impression" target="_blank" rel="noopener">vue-impression</a> ★134 - 移动Vuejs2 UI元素</li><li><a href="https://github.com/ovenslove/vue-mdEditor" target="_blank" rel="noopener">vue-mdEditor</a> ★131 - 基于VUE的markdown文本编辑器</li><li><a href="https://github.com/cngu/vue-typer" target="_blank" rel="noopener">vue-typer</a> ★130 - 模拟用户输入选择和删除文本的Vue组件</li><li><a href="https://github.com/weizhenye/vue-highcharts" target="_blank" rel="noopener">vue-highcharts</a> ★130 - HighCharts组件</li><li><a href="https://github.com/Akryum/vue-tooltip" target="_blank" rel="noopener">vue-tooltip</a> ★129 - 带绑定信息提示的提示工具</li><li><a href="https://github.com/MMF-FE/vue-svgicon" target="_blank" rel="noopener">vue-svgicon</a> ★127 - 创建svg图标组件的工具</li><li><a href="https://github.com/wdfe/wdui" target="_blank" rel="noopener">wdui</a> ★124 - 基于Vue2的UI组件库</li><li><a href="https://github.com/BosNaufal/vue2-loading-bar" target="_blank" rel="noopener">vue2-loading-bar</a> ★118 - 最简单的仿Youtube加载条视图</li><li><a href="https://github.com/spatie/vue-tabs-component" target="_blank" rel="noopener">vue-tabs-component</a> ★116 - 渲染tabs的Vue组件</li><li><a href="https://github.com/hzzly/MagicMusic" target="_blank" rel="noopener">MagicMusic</a> ★113 - 不一样的音乐</li><li><a href="https://github.com/QingWei-Li/vue-region-picker" target="_blank" rel="noopener">vue-region-picker</a> ★111 - 选择中国的省份市和地区</li><li><a href="https://github.com/galenyuan/vue-datatable" target="_blank" rel="noopener">vue-datatable</a> ★102 - 使用Vuejs创建的DataTableView</li><li><a href="https://github.com/Coffcer/vue-loading" target="_blank" rel="noopener">vue-loading</a> ★102 - 元素中加载block的Vue指令</li><li><a href="https://github.com/chenjiahan/vodal" target="_blank" rel="noopener">vodal</a> ★99 - 动画的vue模态</li><li><a href="https://github.com/waynecz/vue-img-inputer" target="_blank" rel="noopener">vue-img-inputer</a> ★97 - 基于Vue2的图片输入框</li><li><a href="https://github.com/hilongjw/vue-video" target="_blank" rel="noopener">vue-video</a> ★96 - Vue.js的HTML5视频播放器</li><li><a href="https://github.com/surmon-china/vue-touch-ripple" target="_blank" rel="noopener">vue-touch-ripple</a> ★95 - vuejs的触摸ripple组件</li><li><a href="https://github.com/GeoffZhu/vue-event-calendar" target="_blank" rel="noopener">vue-event-calendar</a> ★91 - 简单小巧的事件日历组件</li><li><a href="https://github.com/luiguild/v-bar" target="_blank" rel="noopener">v-bar</a> ★91 - 虚拟响应跨浏览器滚动条</li><li><a href="https://github.com/phoenixwong/vue2-timepicker" target="_blank" rel="noopener">vue2-timepicker</a> ★84 - 下拉时间选择器</li><li><a href="https://github.com/lokyoung/vuejs-paginate" target="_blank" rel="noopener">vuejs-paginate</a> ★80 - 分页VueJS组件</li><li><a href="https://github.com/ElemeFE/vue-toast-mobile" target="_blank" rel="noopener">vue-toast-mobile</a> ★79 - VueJS的toast插件</li><li><a href="https://github.com/weifeiyue/vue-datepicker" target="_blank" rel="noopener">vue-datepicker</a> ★78 - 漂亮的Vue日期选择器组件</li><li><a href="https://github.com/shhdgit/vue-easy-slider" target="_blank" rel="noopener">vue-easy-slider</a> ★77 - Vue 2.x的滑块组件</li><li><a href="https://github.com/bkzl/vue-float-label" target="_blank" rel="noopener">vue-float-label</a> ★76 - VueJS浮动标签模式</li><li><a href="https://github.com/BosNaufal/vue-scrollbar" target="_blank" rel="noopener">vue-scrollbar</a> ★76 - 最简单的滚动区域组件</li><li><a href="https://github.com/youzan/vant" target="_blank" rel="noopener">vant</a> ★74 - 有赞出品的Vue2.0移动UI</li><li><a href="https://github.com/arvidkahl/vue-json-tree-view" target="_blank" rel="noopener">vue-json-tree-view</a> ★74 - Vue的JSON树视图</li><li><a href="https://github.com/staskjs/vue-slick" target="_blank" rel="noopener">vue-slick</a> ★73 - 实现流畅轮播框的vue组件</li><li><a href="https://github.com/znck/vue-keynote" target="_blank" rel="noopener">vue-keynote</a> ★73 - 实现声明性代码幻灯片</li><li><a href="https://github.com/phanan/vue-google-signin-button" target="_blank" rel="noopener">vue-google-signin-button</a> ★73 - 导入谷歌登录按钮</li><li><a href="https://github.com/SinanMtl/vue-rate" target="_blank" rel="noopener">vue-rate</a> ★68 - Vue评分组件</li><li><a href="https://github.com/moip/awesome-mask" target="_blank" rel="noopener">awesome-mask</a> ★67 - 拥有独一无二mask的表单</li><li><a href="https://github.com/wyzant-dev/vue-radial-progress" target="_blank" rel="noopener">vue-radial-progress</a> ★65 - Vue.js放射性进度条组件</li><li><a href="https://github.com/CroudSupport/vue-quill" target="_blank" rel="noopener">vue-quill</a> ★65 - vue组件构建quill编辑器</li><li><a href="https://github.com/Bubblings/vue-date-picker" target="_blank" rel="noopener">vue-date-picker</a> ★63 - VueJS日期选择器组件</li><li><a href="https://github.com/Kocisov/coffeebreak" target="_blank" rel="noopener">coffeebreak</a> ★62 - 实时编辑CSS组件工具</li><li><a href="https://github.com/xaksis/vue-good-wizard" target="_blank" rel="noopener">vue-good-wizard</a> ★61 - VueJS 2.x wizard plugin</li><li><a href="https://github.com/jkchao/vue-loading" target="_blank" rel="noopener">vue-loading</a> ★60 - 使用SVG加载</li><li><a href="https://github.com/vue-bulma/datepicker" target="_blank" rel="noopener">datepicker</a> ★59 - 基于flatpickr的时间选择组件</li><li><a href="https://github.com/lithiumjake/vue-placeholders" target="_blank" rel="noopener">vue-placeholders</a> ★58 - 处理占位符图片和乱码</li><li><a href="https://github.com/tianyong90/we-vue" target="_blank" rel="noopener">we-vue</a> ★55 - Vue2及weui1开发的组件</li><li><a href="https://github.com/CroudSupport/vue-fullcalendar" target="_blank" rel="noopener">vue-fullcalendar</a> ★55 - vue FullCalendar封装</li><li><a href="https://github.com/ankane/vue-chartkick" target="_blank" rel="noopener">vue-chartkick</a> ★53 - VueJS一行代码实现优美图表</li><li><a href="https://github.com/chengxulvtu/cxlt-vue2-toastr" target="_blank" rel="noopener">cxlt-vue2-toastr</a> ★52 - 弹出提示的Vue2组件</li><li><a href="https://github.com/formly-js/vue-formly" target="_blank" rel="noopener">vue-formly</a> ★51 - VueJS的JS表单</li><li><a href="https://github.com/BosNaufal/vue2-autocomplete" target="_blank" rel="noopener">vue2-autocomplete</a> ★51 - vue2的自动完成组件</li><li><a href="https://github.com/bbonnin/vue-morris" target="_blank" rel="noopener">vue-morris</a> ★50 - Vuejs组件封装Morrisjs库</li><li><a href="https://github.com/ecomfe/veui" target="_blank" rel="noopener">veui</a> ★50 - VueJS百度企业UI</li><li><a href="https://github.com/yunfeihuang/vue-components" target="_blank" rel="noopener">vue-components</a> ★49 - 移动端UI组件库</li><li><a href="https://github.com/craigh411/vue-star-rating" target="_blank" rel="noopener">vue-star-rating</a> ★49 - 简单高度自定义的星星评级组件</li><li><a href="https://github.com/Ginhing/vue-tagsinput" target="_blank" rel="noopener">vue-tagsinput</a> ★48 - 基于VueJS的标签组件</li><li><a href="https://github.com/alexqdjay/vue-tabs" target="_blank" rel="noopener">vue-tabs</a> ★47 - 多tab页轻型框架</li><li><a href="https://github.com/myronliu347/vue-popup-mixin" target="_blank" rel="noopener">vue-popup-mixin</a> ★47 - 用于管理弹出框的遮盖层</li><li><a href="https://github.com/PygmySlowLoris/vue-ripple-directive" target="_blank" rel="noopener">vue-ripple-directive</a> ★45 - 使用Vue指令的Material波纹效果</li><li><a href="https://github.com/xyxiao001/vue-cropper" target="_blank" rel="noopener">vue-cropper</a> ★42 - 一个简单的vue 的图片裁剪插件</li><li><a href="https://github.com/lisiyizu/vue-ztree" target="_blank" rel="noopener">vue-ztree</a> ★41 - 用 vue 写的树层级组件</li><li><a href="https://github.com/icebob/vue-touch-keyboard" target="_blank" rel="noopener">vue-touch-keyboard</a> ★41 - VueJS虚拟键盘组件</li><li><a href="https://github.com/fangyongbao/cubeex" target="_blank" rel="noopener">cubeex</a> ★40 - 包含一套完整的移动UI</li><li><a href="https://github.com/miaolz123/vue-chart" target="_blank" rel="noopener">vue-chart</a> ★40 - 强大的高速的vue图表解析</li><li><a href="https://github.com/yunyi1895/vue-music-master" target="_blank" rel="noopener">vue-music-master</a> ★40 - vue手机端网页音乐播放器</li><li><a href="https://github.com/jbaysolutions/vue-bootstrap-table" target="_blank" rel="noopener">vue-bootstrap-table</a> ★39 - 可排序可检索的表格</li><li><a href="https://github.com/jkchao/vue-emoji" target="_blank" rel="noopener">vue-emoji</a> ★39 - 好用的emoji插件</li><li><a href="https://github.com/vue-bulma/handsontable" target="_blank" rel="noopener">handsontable</a> ★39 - 网页表格组件</li><li><a href="https://github.com/matfish2/vue-form-2" target="_blank" rel="noopener">vue-form-2</a> ★37 - 全面的HTML表单管理的解决方案</li><li><a href="https://github.com/blue0728/vue-area" target="_blank" rel="noopener">vue-area</a> ★37 - 省市区三级联动插件</li><li><a href="https://github.com/vue-comps/vue-side-nav" target="_blank" rel="noopener">vue-side-nav</a> ★37 - 响应式的侧边导航</li><li><a href="https://github.com/ShanaMaid/vue-image-scroll" target="_blank" rel="noopener">vue-image-scroll</a> ★36 - 仿网易云音乐的vue图片滚动插件</li><li><a href="https://github.com/bajian/vue-pull-to-refresh" target="_blank" rel="noopener">vue-pull-to-refresh</a> ★35 - Vue2的上拉下拉</li><li><a href="https://github.com/mint-ui/mint-indicator" target="_blank" rel="noopener">mint-indicator</a> ★35 - VueJS移动加载指示器插件</li><li><a href="https://github.com/legeneek/vue-image-clip" target="_blank" rel="noopener">vue-image-clip</a> ★34 - 基于vue的图像剪辑组件</li><li><a href="https://github.com/loujiayu/vue-material-design" target="_blank" rel="noopener">vue-material-design</a> ★34 - Vue MD风格组件</li><li><a href="https://github.com/saivarunk/vue-simple-upload" target="_blank" rel="noopener">vue-simple-upload</a> ★31 - 简单的VueJS上传组件</li><li><a href="https://github.com/vue-bulma/chartjs" target="_blank" rel="noopener">chartjs</a> ★29 - Vue Bulma的chartjs组件</li><li><a href="https://github.com/darrynten/vue-lazy-background-images" target="_blank" rel="noopener">vue-lazy-background-images</a> ★29 - 懒加载背景组件的Vue组件</li><li><a href="https://github.com/BosNaufal/vue-ripple" target="_blank" rel="noopener">vue-ripple</a> ★29 - 制作谷歌MD风格涟漪效果的Vue组件</li><li><a href="https://github.com/suguangwen/vue-scroll" target="_blank" rel="noopener">vue-scroll</a> ★27 - vue滚动</li><li><a href="https://github.com/gilbitron/laravel-vue-pagination" target="_blank" rel="noopener">laravel-vue-pagination</a> ★26 - VueJS分页组件</li><li><a href="https://github.com/dai-siki/vue-datepicker-simple" target="_blank" rel="noopener">vue-datepicker-simple</a> ★26 - 基于vue的日期选择器</li><li><a href="https://github.com/shiye515/vue-m-carousel" target="_blank" rel="noopener">vue-m-carousel</a> ★26 - vue 移动端轮播组件</li><li><a href="https://github.com/vue-comps/vue-parallax" target="_blank" rel="noopener">vue-parallax</a> ★23 - 整洁的视觉效果</li><li><a href="https://github.com/JackGit/vue-img-loader" target="_blank" rel="noopener">vue-img-loader</a> ★22 - 图片加载UI组件</li><li><a href="https://github.com/weibangtuo/vue-tree" target="_blank" rel="noopener">vue-tree</a> ★22 - vue树视图组件</li><li><a href="https://github.com/aweiu/vue-verify-pop" target="_blank" rel="noopener">vue-verify-pop</a> ★22 - 带气泡提示的vue校验插件</li><li><a href="https://github.com/Teddy-Zhu/vue-waves" target="_blank" rel="noopener">vue-waves</a> ★22 - waves的VueJS版本</li><li><a href="https://github.com/Teddy-Zhu/vue-smoothscroll" target="_blank" rel="noopener">vue-smoothscroll</a> ★20 - smoothscroll的VueJS版本</li><li><a href="https://github.com/xinxingyu/vue-city" target="_blank" rel="noopener">vue-city</a> ★19 - 城市选择器</li><li><a href="https://github.com/sinchang/vue-laypage" target="_blank" rel="noopener">vue-laypage</a> ★17 - 简单的VueJS分页组件</li><li><a href="https://github.com/eduardostuart/vue-typewriter" target="_blank" rel="noopener">vue-typewriter</a> ★15 - vue组件类型</li><li><a href="https://github.com/Treri/vue-ios-alertview" target="_blank" rel="noopener">vue-ios-alertview</a> ★14 - iOS7+ 风格的alertview服务</li><li><a href="https://github.com/doodlewind/vue-cmap" target="_blank" rel="noopener">vue-cmap</a> ★14 - Vue China map可视化组件</li><li><a href="https://github.com/yeseason/paco-ui-vue" target="_blank" rel="noopener">paco-ui-vue</a> ★12 - PACOUI的vue组件</li><li><a href="https://github.com/savokiss/vue-cascading-address" target="_blank" rel="noopener">vue-cascading-address</a> ★9 - vue地区选择器</li><li><a href="https://github.com/ibufu/dd-vue-component" target="_blank" rel="noopener">dd-vue-component</a> ★7 - 订单来了的公共组件库</li><li><a href="https://github.com/steven5538/vue-button" target="_blank" rel="noopener">vue-button</a> ★5 - Vue按钮组件</li></ul><h2 id="开发框架"><a href="#开发框架" class="headerlink" title="开发框架"></a>开发框架</h2><ul><li><a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">vue.js</a> ★56380 - 流行的轻量高效的前端组件化方案</li><li><a href="https://github.com/fundon/vue-admin" target="_blank" rel="noopener">vue-admin</a> ★4612 - Vue管理面板框架</li><li><a href="https://github.com/quasarframework/quasar" target="_blank" rel="noopener">quasar</a> ★2353 - 响应式网站和混合移动应用程序</li><li><a href="https://github.com/SimulatedGREG/electron-vue" target="_blank" rel="noopener">electron-vue</a> ★2085 - Electron及VueJS快速启动样板</li><li><a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a> ★1986 - vue2管理系统模板</li><li><a href="https://github.com/egoist/vuepack" target="_blank" rel="noopener">vuepack</a> ★1618 - 现代VueJS启动器</li><li><a href="https://github.com/N3-components/N3-components" target="_blank" rel="noopener">N3-components</a> ★656 - 快速构建页面和应用</li><li><a href="https://github.com/honraytech/VueThink" target="_blank" rel="noopener">VueThink</a> ★373 - 前后端分离框架</li><li><a href="https://github.com/petervmeijgaard/vue-2.0-boilerplate" target="_blank" rel="noopener">vue-2.0-boilerplate</a> ★358 - Vue2单页应用样板</li><li><a href="https://github.com/hanan198501/vue-spa-template" target="_blank" rel="noopener">vue-spa-template</a> ★344 - 前后端分离后的单页应用开发</li><li><a href="https://github.com/nolimits4web/Framework7-Vue" target="_blank" rel="noopener">Framework7-Vue</a> ★283 - VueJS与Framework7结合</li><li><a href="https://github.com/wangxg2016/vue-bulma" target="_blank" rel="noopener">vue-bulma</a> ★215 - 轻量级高性能MVVM Admin UI框架</li><li><a href="https://github.com/andrewcourtice/vuetiful" target="_blank" rel="noopener">vuetiful</a> ★189 - 创建业务及管理应用程序</li><li><a href="https://github.com/cklmercer/vue-stack-2.0" target="_blank" rel="noopener">vue-stack-2.0</a> ★155 - Vue2项目样板</li><li><a href="https://github.com/devjin0617/vue2-admin-lte" target="_blank" rel="noopener">vue2-admin-lte</a> ★154 - vue2版本的adminLTE</li><li><a href="https://github.com/shenghy/jspangAdmin" target="_blank" rel="noopener">jspangAdmin</a> ★140 - 基于Vue2的后台管理系统</li><li><a href="https://github.com/erguotou520/vue-fullstack" target="_blank" rel="noopener">vue-fullstack</a> ★140 - 实时的用户友好的后台系统</li><li><a href="https://github.com/cristijora/vue-paper-dashboard" target="_blank" rel="noopener">vue-paper-dashboard</a> ★120 - Vue的Tim Paper 仪表盘</li><li><a href="https://github.com/rodzzlessa24/vue-webgulp" target="_blank" rel="noopener">vue-webgulp</a> ★113 - 仿VueJS Vue loader示例</li><li><a href="https://github.com/Metnew/vue-element-starter" target="_blank" rel="noopener">vue-element-starter</a> ★83 - vue启动页</li><li><a href="https://github.com/yangjiewu/vuemin" target="_blank" rel="noopener">vuemin</a> ★17 - 基于Vue的企业级前端开发框架</li><li><a href="https://github.com/woleicom/vue-team-template" target="_blank" rel="noopener">vue-team-template</a> ★12 - 一种构建vue项目的选择方案</li></ul><h2 id="实用库"><a href="#实用库" class="headerlink" title="实用库"></a>实用库</h2><ul><li><a href="https://github.com/vuejs/vuex" target="_blank" rel="noopener">vuex</a> ★8043 - 专为 Vue.js 应用程序开发的状态管理模式</li><li><a href="https://github.com/vuejs/vue-loader" target="_blank" rel="noopener">vue-loader</a> ★1847 - Vue.js 针对Webpack的组件装载插件</li><li><a href="https://github.com/vuejs/vue-validator" target="_blank" rel="noopener">vue-validator</a> ★1807 - vue的验证器插件</li><li><a href="https://github.com/hilongjw/vue-lazyload" target="_blank" rel="noopener">vue-lazyload</a> ★1224 - 用于懒加载的Vue模块</li><li><a href="https://github.com/monterail/vuelidate" target="_blank" rel="noopener">vuelidate</a> ★1075 - 简单轻量级的基于模块的Vue.js验证</li><li><a href="https://github.com/kazupon/vue-i18n" target="_blank" rel="noopener">vue-i18n</a> ★1053 - VueJS的多语言切换插件</li><li><a href="https://github.com/zerqu/qingcheng" target="_blank" rel="noopener">qingcheng</a> ★736 - qingcheng主题</li><li><a href="https://github.com/MetinSeylan/Vue-Socket.io" target="_blank" rel="noopener">Vue-Socketio</a> ★533 - VueJS的socketio实现</li><li><a href="https://github.com/Justineo/vue-awesome" target="_blank" rel="noopener">vue-awesome</a> ★532 - VueJS字体Awesome组件</li><li><a href="https://github.com/ElemeFE/vue-desktop" target="_blank" rel="noopener">vue-desktop</a> ★496 - 创建管理面板网站的UI库</li><li><a href="https://github.com/imcvampire/vue-axios" target="_blank" rel="noopener">vue-axios</a> ★491 - 将axios整合到VueJS的封装</li><li><a href="https://github.com/declandewet/vue-meta" target="_blank" rel="noopener">vue-meta</a> ★467 - 管理app的meta信息</li><li><a href="https://github.com/ktquez/vue-head" target="_blank" rel="noopener">vue-head</a> ★396 - head标签的meta信息操作</li><li><a href="https://github.com/Akryum/meteor-vue-component" target="_blank" rel="noopener">meteor-vue-component</a> ★382 - vue和meteor整合</li><li><a href="https://github.com/eddyerburgh/avoriaz" target="_blank" rel="noopener">avoriaz</a> ★338 - VueJS测试实用工具库</li><li><a href="https://github.com/LinusBorg/portal-vue" target="_blank" rel="noopener">portal-vue</a> ★239 - 在组件外部渲染DOM</li><li><a href="https://github.com/jrainlau/vue-flatpickr" target="_blank" rel="noopener">vue-flatpickr</a> ★228 - 封装Flatpickr的Vue组件</li><li><a href="https://github.com/egoist/vue-timeago" target="_blank" rel="noopener">vue-timeago</a> ★195 - VueJS的时间前组件</li><li><a href="https://github.com/lyonlai/blessed-vue" target="_blank" rel="noopener">blessed-vue</a> ★181 - 编写命令行UI的VueJS运行时</li><li><a href="https://github.com/wrseward/vue-unit" target="_blank" rel="noopener">vue-unit</a> ★179 - 创建单元测试组件</li><li><a href="https://github.com/dgrubelic/vue-authenticate" target="_blank" rel="noopener">vue-authenticate</a> ★177 - 简单的VueJS身份认证库</li><li><a href="https://github.com/rigor789/vue-scrollTo" target="_blank" rel="noopener">vue-scrollTo</a> ★174 - 滚动到元素的VueJS指令</li><li><a href="https://github.com/cenkai88/vue-svg-icon" target="_blank" rel="noopener">vue-svg-icon</a> ★157 - vue2的可变彩色svg图标方案</li><li><a href="https://github.com/simplesmiler/vue-focus" target="_blank" rel="noopener">vue-focus</a> ★148 - 可重用VueJS组件的焦点指令</li><li><a href="https://github.com/zhouzhuojie/meteor-vue" target="_blank" rel="noopener">meteor-vue</a> ★134 - VueJS和Meteor的桥接</li><li><a href="https://github.com/lynzz/element-admin" target="_blank" rel="noopener">element-admin</a> ★130 - 支持 vuecli 的 Element UI 的后台模板</li><li><a href="https://github.com/QingWei-Li/vuep" target="_blank" rel="noopener">vuep</a> ★118 - 用实时编辑和预览来渲染Vue组件</li><li><a href="https://github.com/medevicex/vuet" target="_blank" rel="noopener">vuet</a> ★116 - 一个跨页面、跨组件的状态管理插件</li><li><a href="https://github.com/Coffcer/vue-bootstrap-modal" target="_blank" rel="noopener">vue-bootstrap-modal</a> ★112 - vue的Bootstrap样式组件</li><li><a href="https://github.com/haydenbbickerton/vue-animate" target="_blank" rel="noopener">vue-animate</a> ★106 - 跨浏览器CSS3动画库</li><li><a href="https://github.com/kaorun343/vue-property-decorator" target="_blank" rel="noopener">vue-property-decorator</a> ★104 - VueJS和属性Decorator</li><li><a href="https://github.com/SevenOutman/vue-aplayer" target="_blank" rel="noopener">vue-aplayer</a> ★100 - 便于配置的音乐播放器vue2组件</li><li><a href="https://github.com/apertureless/vue-password-strength-meter" target="_blank" rel="noopener">vue-password-strength-meter</a> ★97 - 交互式密码强度计</li><li><a href="https://github.com/icebob/vue-websocket" target="_blank" rel="noopener">vue-websocket</a> ★91 - VueJS的Websocket插件</li><li><a href="https://github.com/pinguinjkeke/vue-local-storage" target="_blank" rel="noopener">vue-local-storage</a> ★88 - 具有类型支持的Vuejs本地储存插件</li><li><a href="https://github.com/xtongs/vue-recyclist" target="_blank" rel="noopener">vue-recyclist</a> ★88 - vuejs无限滚动列表</li><li><a href="https://github.com/yeyuqiudeng/vue-lazy-render" target="_blank" rel="noopener">vue-lazy-render</a> ★87 - 用于Vue组件的延迟渲染</li><li><a href="https://github.com/superman66/vue-qart" target="_blank" rel="noopener">vue-qart</a> ★86 - 用于qartjs的Vue2指令</li><li><a href="https://github.com/lmk123/vue-framework7" target="_blank" rel="noopener">vue-framework7</a> ★85 - 结合VueJS使用的Framework7组件</li><li><a href="https://github.com/kartsims/vue-cordova" target="_blank" rel="noopener">vue-cordova</a> ★85 - Cordova的VueJS插件</li><li><a href="https://github.com/FranckFreiburger/http-vue-loader" target="_blank" rel="noopener">http-vue-loader</a> ★84 - 从html及js环境加载vue文件</li><li><a href="https://github.com/apertureless/vue-parallax" target="_blank" rel="noopener">vue-parallax</a> ★84 - 快速60fps视差滚动效果组件</li><li><a href="https://github.com/xiaokaike/vue-clipboard" target="_blank" rel="noopener">vue-clipboard</a> ★84 - VueJS的剪贴板</li><li><a href="https://github.com/JiriChara/vue-kindergarten" target="_blank" rel="noopener">vue-kindergarten</a> ★83 - 将kindergarten集成到VueJS应用</li><li><a href="https://github.com/cklmercer/vue-events" target="_blank" rel="noopener">vue-events</a> ★83 - 简化事件的VueJS插件</li><li><a href="https://github.com/se-panfilov/vue-notifications" target="_blank" rel="noopener">vue-notifications</a> ★80 - 非阻塞通知库</li><li><a href="https://github.com/Sopamo/vue-online" target="_blank" rel="noopener">vue-online</a> ★77 - reactive的在线和离线组件</li><li><a href="https://github.com/iFgR/vue-shortkey" target="_blank" rel="noopener">vue-shortkey</a> ★74 - 应用于Vue.js的Vue-ShortKey 插件</li><li><a href="https://github.com/yangmingshan/vue-bus" target="_blank" rel="noopener">vue-bus</a> ★71 - VueJS的事件总线</li><li><a href="https://github.com/dkfbasel/vuex-i18n" target="_blank" rel="noopener">vuex-i18n</a> ★71 - 定位插件</li><li><a href="https://github.com/wxsms/uiv" target="_blank" rel="noopener">uiv</a> ★70 - Vue实现的Bootstrap组件</li><li><a href="https://github.com/weinot/vue-router-transition" target="_blank" rel="noopener">vue-router-transition</a> ★69 - 页面过渡插件</li><li><a href="https://github.com/mlyknown/vue-gesture" target="_blank" rel="noopener">vue-gesture</a> ★69 - VueJS的手势事件插件</li><li><a href="https://github.com/thetutlage/vue-clip" target="_blank" rel="noopener">vue-clip</a> ★67 - 简约的破解文件上传器</li><li><a href="https://github.com/SimulatedGREG/vue-electron" target="_blank" rel="noopener">vue-electron</a> ★66 - 将选择的API封装到Vue对象中的插件</li><li><a href="https://github.com/vue-bulma/cleave" target="_blank" rel="noopener">cleave</a> ★64 - 基于cleave.js的Cleave组件</li><li><a href="https://github.com/gocanto/vuemit" target="_blank" rel="noopener">vuemit</a> ★63 - 处理VueJS事件</li><li><a href="https://github.com/israelss/vue-worker" target="_blank" rel="noopener">vue-worker</a> ★56 - 使用webworkers的Vue插件</li><li><a href="https://github.com/leonardovilarinho/vue-acl" target="_blank" rel="noopener">vue-acl</a> ★54 - VueJS访问控制列表插件</li><li><a href="https://github.com/HerringtonDarkholme/vue-ts-loader" target="_blank" rel="noopener">vue-ts-loader</a> ★54 - 在Vue装载机检查脚本</li><li><a href="https://github.com/David-Desmaisons/Vue.resize" target="_blank" rel="noopener">Vue.resize</a> ★51 - 检测HTML调整大小事件的vue指令</li><li><a href="https://github.com/Vuedeux/vuedeux" target="_blank" rel="noopener">vuedeux</a> ★50 - 轻量级开源实用用层</li><li><a href="https://github.com/RobinCK/vue-ls" target="_blank" rel="noopener">vue-ls</a> ★49 - 适配Vuecontext中LocalStorage的Vue插件</li><li><a href="https://github.com/gocanto/lazy-vue" target="_blank" rel="noopener">lazy-vue</a> ★48 - 懒加载图片</li><li><a href="https://github.com/matfish2/vue-pagination-2" target="_blank" rel="noopener">vue-pagination-2</a> ★46 - 简单通用的分页组件</li><li><a href="https://github.com/AStaroverov/v-media-query" target="_blank" rel="noopener">v-media-query</a> ★44 - vue中添加用于配合媒体查询的方法</li><li><a href="https://github.com/Akryum/vue-observe-visibility" target="_blank" rel="noopener">vue-observe-visibility</a> ★42 - 当元素在页面上可见或隐藏时检测</li><li><a href="https://github.com/Coffcer/vue-lazy-component" target="_blank" rel="noopener">vue-lazy-component</a> ★38 - 懒加载组件或者元素的Vue指令</li><li><a href="https://github.com/ropbla9/vue-reactive-storage" target="_blank" rel="noopener">vue-reactive-storage</a> ★37 - vue插件的Reactive层</li><li><a href="https://github.com/miaolz123/vue-helmet" target="_blank" rel="noopener">vue-helmet</a> ★37 - HTML标题管理器</li><li><a href="https://github.com/richardanaya/voir" target="_blank" rel="noopener">voir</a> ★35 - 保持mutation与视图组件的分离</li><li><a href="https://github.com/xanf/vuex-shared-mutations" target="_blank" rel="noopener">vuex-shared-mutations</a> ★34 - 分享某种Vuex mutations</li><li><a href="https://github.com/surmon-china/vue-drag-zone" target="_blank" rel="noopener">vue-drag-zone</a> ★28 - 适用于Vue2的dom拖动组件</li><li><a href="https://github.com/mysticatea/vue-eslint-parser" target="_blank" rel="noopener">vue-eslint-parser</a> ★27 - ESLint自定义解析</li><li><a href="https://github.com/vue-bulma/modal" target="_blank" rel="noopener">modal</a> ★26 - Vue Bulma的modal组件</li><li><a href="https://github.com/wakeupmypig/vue-plan" target="_blank" rel="noopener">vue-plan</a> ★25 - Vuex-状态管理</li><li><a href="https://github.com/BosNaufal/vue-file-base64" target="_blank" rel="noopener">vue-file-base64</a> ★22 - 将文件转换为Base64的vue组件</li><li><a href="https://github.com/lzxb/vue-methods-promise" target="_blank" rel="noopener">vue-methods-promise</a> ★21 - 使vue方法支持promise</li><li><a href="https://github.com/David-Desmaisons/Vue.ImagesLoaded" target="_blank" rel="noopener">Vue.ImagesLoaded</a> ★20 - 检测图片加载的VueJS指令</li><li><a href="https://github.com/irwansyahwii/Famous-Vue" target="_blank" rel="noopener">Famous-Vue</a> ★16 - Famous库的vue组件</li><li><a href="https://github.com/LeoHuiyi/leo-vue-validator" target="_blank" rel="noopener">leo-vue-validator</a> ★15 - 异步的表单验证组件</li><li><a href="https://github.com/Haixing-Hu/vue-titlecase" target="_blank" rel="noopener">vue-titlecase</a> ★13 - 用于字符串titlecased的VueJS过滤器</li><li><a href="https://github.com/MetinSeylan/Vue-Easy-Validator" target="_blank" rel="noopener">Vue-Easy-Validator</a> ★12 - 简单的表单验证</li><li><a href="https://github.com/vue-comps/vue-zoombox" target="_blank" rel="noopener">vue-zoombox</a> ★12 - 一个高级zoombox</li><li><a href="https://github.com/imcvampire/vue-truncate-filter" target="_blank" rel="noopener">vue-truncate-filter</a> ★10 - 截断字符串的VueJS过滤器</li><li><a href="https://github.com/ElderJames/vue-router-storage" target="_blank" rel="noopener">vue-router-storage</a> ★9 - vue历史路由持久化的解决方案</li><li><a href="https://github.com/syropian/vue-input-autosize" target="_blank" rel="noopener">vue-input-autosize</a> ★9 - 基于内容自动调整文本输入的大小</li><li><a href="https://github.com/phphe/vue-data-validator" target="_blank" rel="noopener">vue-data-validator</a> ★4 - Vuejs2的数据验证插件</li><li><a href="https://github.com/yodfz/vue-lazyloadImg" target="_blank" rel="noopener">vue-lazyloadImg</a> ★4 - 图片懒加载插件</li></ul><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><ul><li><a href="https://github.com/nuxt/nuxt.js" target="_blank" rel="noopener">nuxt.js</a> ★4564 - 用于服务器渲染Vue app的最小化框架</li><li><a href="https://github.com/egoist/unvue" target="_blank" rel="noopener">unvue</a> ★310 - 使用简单的通用VueJS应用</li><li><a href="https://github.com/danmademe/express-vue" target="_blank" rel="noopener">express-vue</a> ★302 - 简单的使用服务器端渲染vue.js</li><li><a href="https://github.com/ccforward/vue-ssr" target="_blank" rel="noopener">vue-ssr</a> ★92 - 非常简单的VueJS服务器端渲染模板</li><li><a href="https://github.com/monkeyWangs/doubanMovie-SSR" target="_blank" rel="noopener">doubanMovie-SSR</a> ★85 - Vue豆瓣电影服务端渲染</li><li><a href="https://github.com/hilongjw/vue-ssr" target="_blank" rel="noopener">vue-ssr</a> ★80 - 结合Express使用Vue2服务端渲染</li><li><a href="https://github.com/leaves4j/vue-easy-renderer" target="_blank" rel="noopener">vue-easy-renderer</a> ★44 - Nodejs服务端渲染</li></ul><h2 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h2><ul><li><a href="https://github.com/vue-play/vue-play" target="_blank" rel="noopener">vue-play</a> ★641 - 展示Vue组件的最小化框架</li><li><a href="https://github.com/MiCottOn/DejaVue" target="_blank" rel="noopener">DejaVue</a> ★635 - Vuejs可视化及压力测试</li><li><a href="https://github.com/OYsun/vscode-VueHelper" target="_blank" rel="noopener">vscode-VueHelper</a> ★228 - 目前vscode最好的vue代码提示插件</li><li><a href="https://github.com/NetanelBasal/vue-generate-component" target="_blank" rel="noopener">vue-generate-component</a> ★56 - 轻松生成Vue js组件的CLI工具</li><li><a href="https://github.com/xwpongithub/vue-multipage-cli" target="_blank" rel="noopener">vue-multipage-cli</a> ★40 - 简单的多页CLI</li><li><a href="https://github.com/MetinSeylan/VuejsStarterKit" target="_blank" rel="noopener">VuejsStarterKit</a> ★29 - vuejs starter套件</li></ul><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li><a href="https://github.com/phanan/koel" target="_blank" rel="noopener">koel</a> ★7773 - 基于网络的个人音频流媒体服务</li><li><a href="https://github.com/pagekit/pagekit" target="_blank" rel="noopener">pagekit</a> ★4225 - 轻量级的CMS建站系统</li><li><a href="https://github.com/lin-xin/vue-manage-system" target="_blank" rel="noopener">vue-manage-system</a> ★2057 - 后台管理系统解决方案</li><li><a href="https://github.com/Vuedo/vuedo" target="_blank" rel="noopener">vuedo</a> ★1265 - 博客平台</li><li><a href="https://github.com/jackhutu/jackblog-vue" target="_blank" rel="noopener">jackblog-vue</a> ★1120 - 个人博客系统</li><li><a href="https://github.com/jcc/blog" target="_blank" rel="noopener">PJ Blog</a> ★1018 - 开源博客</li><li><a href="https://github.com/lzxb/vue-cnode" target="_blank" rel="noopener">vue-cnode</a> ★787 - 重写vue版cnode社区</li><li><a href="https://github.com/ericjjj/vms" target="_blank" rel="noopener">vms</a> ★629 - vuejs2管理系统</li><li><a href="https://github.com/ycwalker/CMS-of-Blog" target="_blank" rel="noopener">CMS-of-Blog</a> ★541 - 博客内容管理器</li><li><a href="https://github.com/Caiyeon/goldfish" target="_blank" rel="noopener">goldfish</a> ★518 - 用于HashiCorp Vault的Admin UI</li><li><a href="https://github.com/mrgodhani/rss-reader" target="_blank" rel="noopener">rss-reader</a> ★368 - 简单的rss阅读器</li><li><a href="https://github.com/viko16/vue-ghpages-blog" target="_blank" rel="noopener">vue-ghpages-blog</a> ★254 - 依赖GitHub Pages无需本地生成的静态博客</li><li><a href="https://github.com/surmon-china/vue-blog" target="_blank" rel="noopener">vue-blog</a> ★143 - 使用Vue2.0 和Vuex的vue-blog</li><li><a href="https://github.com/wh469012917/swoole-vue-webim" target="_blank" rel="noopener">swoole-vue-webim</a> ★137 - Web版的聊天应用</li><li><a href="https://github.com/zhangxin840/tomato5" target="_blank" rel="noopener">tomato5</a> ★134 - 实时的协作工具</li><li><a href="https://github.com/Angarsk8/Loopa-News" target="_blank" rel="noopener">Loopa-News</a> ★133 - 开源社会新闻应用</li><li><a href="https://github.com/reg21st/vue2-management-platform" target="_blank" rel="noopener">vue2-management-platform</a> ★74 - vue2.0+ elementUI 后台管理平台</li><li><a href="https://github.com/thelinuxlich/vue-dashing-js" target="_blank" rel="noopener">vue-dashing-js</a> ★70 - nuvo-dashing-js的fork</li><li><a href="https://github.com/sapjax/fewords" target="_blank" rel="noopener">fewords</a> ★63 - 功能极其简单的笔记本</li><li><a href="https://github.com/wxs77577/adminify" target="_blank" rel="noopener">adminify</a> ★46 - 一个基于Vuetify material的Admin面板</li></ul><h2 id="Demo示例"><a href="#Demo示例" class="headerlink" title="Demo示例"></a>Demo示例</h2><ul><li><a href="https://github.com/bailicangdu/vue2-elm" target="_blank" rel="noopener">vue2-elm</a> ★8036 - 重写饿了么webapp</li><li><a href="https://github.com/shinygang/Vue-cnodejs" target="_blank" rel="noopener">Vue-cnodejs</a> ★2491 - 基于vue重写Cnodejs.org的webapp</li><li><a href="https://github.com/javaSwing/NeteaseCloudWebApp" target="_blank" rel="noopener">NeteaseCloudWebApp</a> ★1549 - 高仿网易云音乐的webapp</li><li><a href="https://github.com/bailicangdu/vue2-happyfri" target="_blank" rel="noopener">vue2-happyfri</a> ★1535 - vue2及vuex的入门练习项目</li><li><a href="https://github.com/hilongjw/vue-zhihu-daily" target="_blank" rel="noopener">vue-zhihu-daily</a> ★1010 - 知乎日报 with Vuejs</li><li><a href="https://github.com/lzxb/vue2-demo" target="_blank" rel="noopener">vue2-demo</a> ★994 - 从零构建vue2 + vue-router + vuex 开发环境</li><li><a href="https://github.com/useryangtao/vue-wechat" target="_blank" rel="noopener">vue-wechat</a> ★939 - vue.js开发微信app界面</li><li><a href="https://github.com/liangxiaojuan/eleme" target="_blank" rel="noopener">eleme</a> ★882 - 高仿饿了么app商家详情</li><li><a href="https://github.com/kenberkeley/vue-demo" target="_blank" rel="noopener">vue-demo</a> ★755 - vue简易留言板</li><li><a href="https://github.com/lybenson/bilibili-vue" target="_blank" rel="noopener">bilibili-vue</a> ★694 - 全栈式开发bilibili首页</li><li><a href="https://github.com/codecasts/spa-starter-kit" target="_blank" rel="noopener">spa-starter-kit</a> ★646 - 单页应用启动套件</li><li><a href="https://github.com/SimonZhangITer/VueDemo_Sell_Eleme" target="_blank" rel="noopener">VueDemo_Sell_Eleme</a> ★636 - Vue2高仿饿了么外卖平台</li><li><a href="https://github.com/Sioxas/vue-music" target="_blank" rel="noopener">vue-music</a> ★621 - Vue 音乐搜索播放</li><li><a href="https://github.com/jeneser/douban" target="_blank" rel="noopener">douban</a> ★606 - 基于vue全家桶的精致豆瓣DEMO</li><li><a href="https://github.com/liangxiaojuan/vue-Meizi" target="_blank" rel="noopener">vue-Meizi</a> ★604 - vue最新实战项目</li><li><a href="https://github.com/zhengguorong/maizuo" target="_blank" rel="noopener">maizuo</a> ★603 - vue/vuex/redux仿卖座网</li><li><a href="https://github.com/zhaohaodang/vue-WeChat" target="_blank" rel="noopener">vue-WeChat</a> ★558 - 基于Vue2高仿微信App的单页应用</li><li><a href="https://github.com/lavyun/vue-demo-kugou" target="_blank" rel="noopener">vue-demo-kugou</a> ★500 - vuejs仿写酷狗音乐webapp</li><li><a href="https://github.com/bailicangdu/vue2-manage" target="_blank" rel="noopener">vue2-manage</a> ★457 - 基于 vue + element-ui 的后台管理系统</li><li><a href="https://github.com/yatessss/zhihudaily-vue" target="_blank" rel="noopener">zhihudaily-vue</a> ★455 - 知乎日报web版</li><li><a href="https://github.com/ShanaMaid/vue-163-music" target="_blank" rel="noopener">vue-163-music</a> ★448 - vue仿网易云音乐客户端版</li><li><a href="https://github.com/superman66/vue-axios-github" target="_blank" rel="noopener">vue-axios-github</a> ★448 - 登录拦截登出功能</li><li><a href="https://github.com/jiakeqi/douban" target="_blank" rel="noopener">douban</a> ★440 - 模仿豆瓣前端</li><li><a href="https://github.com/andylei18/vue-shopping" target="_blank" rel="noopener">vue-shopping</a> ★404 - 蘑菇街移动端</li><li><a href="https://github.com/canfoo/vue2.0-taopiaopiao" target="_blank" rel="noopener">vue2.0-taopiaopiao</a> ★402 - vue2.0与express构建淘票票页面</li><li><a href="https://github.com/hzzly/xyy-vue" target="_blank" rel="noopener">xyy-vue</a> ★396 - 大学生交流平台</li><li><a href="https://github.com/TIGERB/easy-vue" target="_blank" rel="noopener">easy-vue</a> ★370 - 使用Vue实现简易web</li><li><a href="https://github.com/superman66/vue2.x-douban" target="_blank" rel="noopener">vue2.x-douban</a> ★360 - Vue2实现简易豆瓣电影webApp</li><li><a href="https://github.com/jiangqizheng/vue2-MiniQQ" target="_blank" rel="noopener">vue2-MiniQQ</a> ★351 - 基于Vue2实现的仿手机QQ单页面应用</li><li><a href="https://github.com/wendaosanshou/mi-by-vue" target="_blank" rel="noopener">mi-by-vue</a> ★291 - VueJS仿小米官网</li><li><a href="https://github.com/walleeeee/daily-zhihu" target="_blank" rel="noopener">daily-zhihu</a> ★275 - 基于Vue2的知乎日报单页应用</li><li><a href="https://github.com/jiangjiu/vue-leancloud-blog" target="_blank" rel="noopener">vue-leancloud-blog</a> ★268 - 一个前后端完全分离的单页应用</li><li><a href="https://github.com/Reusjs/VueMusic-PC" target="_blank" rel="noopener">VueMusic-PC</a> ★260 - Vue.js高还原网易云音乐系列</li><li><a href="https://github.com/yjj5855/node-vue-server-webpack" target="_blank" rel="noopener">node-vue-server-webpack</a> ★253 - Node.js+Vue.js+webpack快速开发框架</li><li><a href="https://github.com/beauty-enjoy/beauty" target="_blank" rel="noopener">beauty</a> ★245 - 豆瓣美女clone</li><li><a href="https://github.com/liujians/vue-adminLte-vue-router" target="_blank" rel="noopener">vue-adminLte-vue-router</a> ★243 - vue和adminLte整合应用</li><li><a href="https://github.com/okoala/vue-fis3" target="_blank" rel="noopener">vue-fis3</a> ★217 - 流行开源工具集成demo</li><li><a href="https://github.com/lin-xin/notepad" target="_blank" rel="noopener">notepad</a> ★216 - 本地存储的记事本</li><li><a href="https://github.com/ChuckCZC/vue-demo-maizuo" target="_blank" rel="noopener">vue-demo-maizuo</a> ★210 - 使用Vue2全家桶仿制卖座电影</li><li><a href="https://github.com/Werb/Pixel-Web" target="_blank" rel="noopener">Pixel-Web</a> ★198 - 一个 Vue 微博客户端</li><li><a href="https://github.com/MengZhaoFly/netease_yanxuan" target="_blank" rel="noopener">netease_yanxuan</a> ★198 - vue版网易严选</li><li><a href="https://github.com/dmtrbrl/tmdb-app" target="_blank" rel="noopener">tmdb-app</a> ★194 - TMDbVueJS应用</li><li><a href="https://github.com/xrr2016/vue-express-mongodb" target="_blank" rel="noopener">vue-express-mongodb</a> ★189 - 简单的前后端分离案例</li><li><a href="https://github.com/iHaPBoy/vue-zhihudaily" target="_blank" rel="noopener">vue-zhihudaily</a> ★187 - 知乎日报 Web 版本</li><li><a href="https://github.com/RalfZhang/Vdo" target="_blank" rel="noopener">Vdo</a> ★179 - VueJS与MD重构豆瓣</li><li><a href="https://github.com/BUPT-HJM/vue-blog" target="_blank" rel="noopener">vue-blog</a> ★171 - 单用户博客</li><li><a href="https://github.com/xiaobinwu/Wuji" target="_blank" rel="noopener">Wuji</a> ★168 - 吾记网页版</li><li><a href="https://github.com/rokups/hello-vue-django" target="_blank" rel="noopener">hello-vue-django</a> ★160 - 使用带有Django的vuejs的样板项目</li><li><a href="https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js" target="_blank" rel="noopener">Zhihu-Daily-Vue.js</a> ★157 - Vuejs单页网页应用</li><li><a href="https://github.com/renjie1996/tencent-sports" target="_blank" rel="noopener">tencent-sports</a> ★154 - Vue全家桶仿腾讯体育</li><li><a href="https://github.com/zhixuanziben/gouyan-movie-vue" target="_blank" rel="noopener">gouyan-movie-vue</a> ★151 - 基于vue的在线电影影讯网站</li><li><a href="https://github.com/CommanderXL/x-blog" target="_blank" rel="noopener">x-blog</a> ★145 - 开源的个人blog项目</li><li><a href="https://github.com/lxyisme/vue-musicApp" target="_blank" rel="noopener">vue-musicApp</a> ★132 - 使用vue全家桶制作的音乐播放器</li><li><a href="https://github.com/wszgxa/vue-cnode" target="_blank" rel="noopener">vue-cnode</a> ★131 - vue单页应用demo</li><li><a href="https://github.com/193Eric/webpack-vue-vueRouter" target="_blank" rel="noopener">webpack-vue-vueRouter</a> ★130 - webpack及vue开发的简单项目实例</li><li><a href="https://github.com/Molunerfinn/vue-koa-demo" target="_blank" rel="noopener">vue-koa-demo</a> ★128 - 使用Vue2和Koa1的全栈demo</li><li><a href="https://github.com/elva2596/vueBlog" target="_blank" rel="noopener">vueBlog</a> ★127 - 前后端分离博客</li><li><a href="https://github.com/secreter/websocket_chat" target="_blank" rel="noopener">websocket_chat</a> ★127 - 基于vue和websocket的多人在线聊天室</li><li><a href="https://github.com/peng1992/houtai" target="_blank" rel="noopener">houtai</a> ★125 - 基于vue和Element的后台管理系统</li><li><a href="https://github.com/hcy1996/vue-toutiao" target="_blank" rel="noopener">vue-toutiao</a> ★121 - vuejs高仿今日头条移动端</li><li><a href="https://github.com/microzz/vue-cnode" target="_blank" rel="noopener">vue-cnode</a> ★121 - 开源的CNode社区</li><li><a href="https://github.com/BosNaufal/vue-mini-shop" target="_blank" rel="noopener">vue-mini-shop</a> ★121 - VueJS在线商店</li><li><a href="https://github.com/beidan/photoShare" target="_blank" rel="noopener">photoShare</a> ★120 - 基于图片分享的社交平台</li><li><a href="https://github.com/vanishcode/iview2-management-system" target="_blank" rel="noopener">iview2-management-system</a> ★119 - 后台管理系统解决方案简单示例</li><li><a href="https://github.com/monkeyWangs/doubanMovie" target="_blank" rel="noopener">doubanMovie</a> ★119 - 豆瓣电影展示</li><li><a href="https://github.com/hbxywdk/eleme-vue2" target="_blank" rel="noopener">eleme-vue2</a> ★112 - 仿饿了么H5纯前端Vue版</li><li><a href="https://github.com/cccyb/vue-zhihu-daily" target="_blank" rel="noopener">vue-zhihu-daily</a> ★111 - 基于Vue全家桶开发的知乎日报</li><li><a href="https://github.com/biaodigit/Vue-News" target="_blank" rel="noopener">Vue-News</a> ★107 - 基于vue全家桶的仿知乎日报单页应用</li><li><a href="https://github.com/xingbofeng/douban-movie" target="_blank" rel="noopener">douban-movie</a> ★107 - 仿豆瓣电影wap端</li><li><a href="https://github.com/qxl1231/generator-loopback-vue" target="_blank" rel="noopener">generator-loopback-vue</a> ★104 - 典型前后端分离项目模板</li><li><a href="https://github.com/odranoelBR/vue-quasar-admin-example" target="_blank" rel="noopener">vue-quasar-admin-example</a> ★99 - 将Quasar和VueJS应用于SPA项目</li><li><a href="https://github.com/cs1707/vue-zhihudaily-2.0" target="_blank" rel="noopener">vue-zhihudaily-2.0</a> ★97 - 使用Vue2.0+vue-router+vuex创建的zhihudaily</li><li><a href="https://github.com/liangxiaojuan/vue-todos" target="_blank" rel="noopener">vue-todos</a> ★95 - vue最新实战项目教程</li><li><a href="https://github.com/ddqre12345/vue-music" target="_blank" rel="noopener">vue-music</a> ★91 - 网易云音乐Demo</li><li><a href="https://github.com/Panda-Hope/vue-qqmusic" target="_blank" rel="noopener">vue-qqmusic</a> ★90 - Vue全家桶+Mint-Ui打造高仿QQMusic</li><li><a href="https://github.com/vincentSea/vue2.x-Cnode" target="_blank" rel="noopener">vue2.x-Cnode</a> ★88 - 基于vue全家桶的Cnode社区</li><li><a href="https://github.com/hql123/vue-ruby-china" target="_blank" rel="noopener">vue-ruby-china</a> ★86 - VueJS框架搭建的rubychina平台</li><li><a href="https://github.com/monkeyWangs/doubanMovie-SSR" target="_blank" rel="noopener">doubanMovie-SSR</a> ★85 - Vue豆瓣电影服务端渲染</li><li><a href="https://github.com/huangche007/vue-jd" target="_blank" rel="noopener">vue-jd</a> ★76 - 京东移动web商城</li><li><a href="https://github.com/zimplexing/vue-nReader" target="_blank" rel="noopener">vue-nReader</a> ★73 - 使用vue2.0 + vue-router + vuex 的一个多页面小说阅读webapp</li><li><a href="https://github.com/FatDong1/VueBlog" target="_blank" rel="noopener">VueBlog</a> ★73 - 前后端分离的个人博客</li><li><a href="https://github.com/littlewin-wang/Zhihu_Daily" target="_blank" rel="noopener">Zhihu_Daily</a> ★73 - 基于Vue和Nodejs的Web单页应用</li><li><a href="https://github.com/sinner77/vue-koa2-login" target="_blank" rel="noopener">vue-koa2-login</a> ★67 - 使用 VueJS &amp; NodeJS 实现的登录注册</li><li><a href="https://github.com/houbx/webApp" target="_blank" rel="noopener">webApp</a> ★64 - Vue2的移动端webApp音乐播放器</li><li><a href="https://github.com/wenye123/vue-trip" target="_blank" rel="noopener">vue-trip</a> ★64 - vue2做的出行webapp</li><li><a href="https://github.com/Alex-xd/seeMusic" target="_blank" rel="noopener">seeMusic</a> ★63 - 跨平台云音乐播放器</li><li><a href="https://github.com/SidKwok/github-explorer" target="_blank" rel="noopener">github-explorer</a> ★63 - 寻找最有趣的GitHub库</li><li><a href="https://github.com/zhoou/vue-cli-multipage-bootstrap" target="_blank" rel="noopener">vue-cli-multipage-bootstrap</a> ★60 - 将vue官方在线示例整合到组件中</li><li><a href="https://github.com/beautifulBoys/vue-XiaoMi-Shop" target="_blank" rel="noopener">vue-XiaoMi-Shop</a> ★59 - 高仿小米商城的项目</li><li><a href="https://github.com/leehomeok/Vue-NetEaseCloudMusic" target="_blank" rel="noopener">Vue-NetEaseCloudMusic</a> ★59 - 模仿IOS版网易云音乐的手机网站</li><li><a href="https://github.com/shaqihe/life-app-vue" target="_blank" rel="noopener">life-app-vue</a> ★59 - 使用vue2完成多功能集合到小webapp</li><li><a href="https://github.com/MrMoveon/doubanApp" target="_blank" rel="noopener">doubanApp</a> ★55 - 用vue2实现仿豆瓣app</li><li><a href="https://github.com/QRL909109/ios7-vue" target="_blank" rel="noopener">ios7-vue</a> ★52 - 使用vue2.0 vue-router vuex模拟ios7</li><li><a href="https://github.com/hzzly/canvas-vue" target="_blank" rel="noopener">canvas-vue</a> ★50 - 一个Vue+Cnavas酷炫后台管理</li><li><a href="https://github.com/nswbmw/vue-bushishiren" target="_blank" rel="noopener">vue-bushishiren</a> ★49 - 不是诗人应用</li><li><a href="https://github.com/albertchan/vue-ssr-boilerplate" target="_blank" rel="noopener">vue-ssr-boilerplate</a> ★48 - 精简版的ofvue-hackernews-2</li><li><a href="https://github.com/gaohongwei11/vuecommunity" target="_blank" rel="noopener">vuecommunity</a> ★47 - vue.js中文社区</li><li><a href="https://github.com/pluto1114/vue-music163" target="_blank" rel="noopener">vue-music163</a> ★47 - 音乐VueJS项目</li><li><a href="https://github.com/safaring/Vue2-MV" target="_blank" rel="noopener">Vue2-MV</a> ★45 - 仿网易云音乐MV的webapp</li><li><a href="https://github.com/hua1995116/musiccloudWebapp" target="_blank" rel="noopener">musiccloudWebapp</a> ★44 - 用vuejs仿网易云音乐</li><li><a href="https://github.com/BubblyPoker/cnode-vue" target="_blank" rel="noopener">cnode-vue</a> ★40 - 基于vue和vue-router构建的cnodejs web网站SPA</li><li><a href="https://github.com/tyllo/Framework7-VueJS" target="_blank" rel="noopener">Framework7-VueJS</a> ★38 - 使用移动框架的示例</li><li><a href="https://github.com/JerryYgh/m-eleme" target="_blank" rel="noopener">m-eleme</a> ★37 - 基于Vue全家桶仿饿了么移动端webapp</li><li><a href="https://github.com/sailengsi/sls-vuex2-demo" target="_blank" rel="noopener">sls-vuex2-demo</a> ★37 - vuex2商城购物车demo</li><li><a href="https://github.com/silianpan/eagles" target="_blank" rel="noopener">eagles</a> ★36 - 各种组件封装</li><li><a href="https://github.com/fishenal/Todos_Vuejs" target="_blank" rel="noopener">Todos_Vuejs</a> ★35 - vuejs2搭建的极简的todolist</li><li><a href="https://github.com/jiananle/vue-cnode" target="_blank" rel="noopener">vue-cnode</a> ★35 - 用 Vue 做的 CNode 官网</li><li><a href="https://github.com/GitaiQAQ/HyaReader" target="_blank" rel="noopener">HyaReader</a> ★35 - 移动友好的阅读器</li><li><a href="https://github.com/lanux/Vue-Admin" target="_blank" rel="noopener">Vue-Admin</a> ★33 - 基于Vue2的Admin系统</li><li><a href="https://github.com/liupeijun/vue2-hybridapp-haoshiqi" target="_blank" rel="noopener">vue2-hybridapp-haoshiqi</a> ★32 - 实现单页面webapp以及hybridapp</li><li><a href="https://github.com/xrr2016/zhihu-daily" target="_blank" rel="noopener">zhihu-daily</a> ★32 - 轻松查看知乎日报内容</li><li><a href="https://github.com/xandeer/gank" target="_blank" rel="noopener">gank</a> ★32 - gankio资源的阅读应用</li><li><a href="https://github.com/NewsNIng/vue-h5plus" target="_blank" rel="noopener">vue-h5plus</a> ★31 - 前卫的vue及html5plus跨平台demo</li><li><a href="https://github.com/soulcm/vue-cnode-mobile" target="_blank" rel="noopener">vue-cnode-mobile</a> ★29 - 搭建cnode社区</li><li><a href="https://github.com/alanWongsGithub/vue-weather" target="_blank" rel="noopener">vue-weather</a> ★26 - 基于vue.js 2.0的百度天气应用</li><li><a href="https://github.com/doterlin/vue-user-center" target="_blank" rel="noopener">vue-user-center</a> ★26 - vuejs直播类应用web端个人中心</li><li><a href="https://github.com/moonou/zhihu-daily-vue" target="_blank" rel="noopener">zhihu-daily-vue</a> ★22 - 知乎日报</li><li><a href="https://github.com/Damonlw/vue-cnode" target="_blank" rel="noopener">vue-cnode</a> ★22 - 使用cNode社区提供的接口</li><li><a href="https://github.com/BosNaufal/vue-starter" target="_blank" rel="noopener">vue-starter</a> ★22 - VueJs项目的简单启动页</li><li><a href="https://github.com/wx1993/node-vue-fabaocn" target="_blank" rel="noopener">node-vue-fabaocn</a> ★21 - 基于 node 和 vue 实现的移动官网</li><li><a href="https://github.com/youknowznm/vue-memo" target="_blank" rel="noopener">vue-memo</a> ★20 - 用 vue写的记事本应用</li><li><a href="https://github.com/Halfeld/v-notes" target="_blank" rel="noopener">v-notes</a> ★20 - 简单美观的记事本</li><li><a href="https://github.com/momopig/vue-flexible-app" target="_blank" rel="noopener">vue-flexible-app</a> ★19 - vue开发的一个简易app</li><li><a href="https://github.com/CaiYiLiang/simply-calculator-vuejs" target="_blank" rel="noopener">simply-calculator-vuejs</a> ★19 - 用VueJS实现简易计算器</li><li><a href="https://github.com/ITCNZ/vue-dropload" target="_blank" rel="noopener">vue-dropload</a> ★19 - 用以测试下拉加载与简单路由</li><li><a href="https://github.com/fishenal/Vuejs-SalePlatform" target="_blank" rel="noopener">Vuejs-SalePlatform</a> ★19 - vuejs搭建的售卖平台demo</li><li><a href="https://github.com/hj624608494/vue-shopping-mall" target="_blank" rel="noopener">vue-shopping-mall</a> ★16 - 基于Vue.js 2.x系列 + vue2-router + axios + iview 商城</li><li><a href="https://github.com/yangbo5207/qqmusic" target="_blank" rel="noopener">qqmusic</a> ★13 - QQ音乐vue</li><li><a href="https://github.com/deshes/vue-weather" target="_blank" rel="noopener">vue-weather</a> ★12 - VueJS天气demo</li></ul><h1 id="一、前端核心分析"><a href="#一、前端核心分析" class="headerlink" title="一、前端核心分析"></a><strong>一、前端核心分析</strong></h1><h2 id="1-1、概述"><a href="#1-1、概述" class="headerlink" title="*1.1、概述"></a><strong>*1.1、概述</strong></h2><p>Soc原则：关注点分离原则*</p><p>Vue 的核心库只关注视图层，方便与第三方库或既有项目整合。</p><p>HTML + CSS + JS : 视图 ： 给用户看，刷新后台给的数据</p><p>网络通信 ： axios</p><p>页面跳转 ： vue-router</p><p>状态管理：vuex</p><p>Vue-UI : ICE , Element UI</p><h2 id="1-2、前端三要素"><a href="#1-2、前端三要素" class="headerlink" title="1.2、前端三要素"></a><strong>1.2、前端三要素</strong></h2><ul><li>HTML（结构）：超文本标记语言（Hyper Text Markup Language），决定网页的结构和内容</li><li>CSS（表现）：层叠样式表（Cascading Style Sheets），设定网页的表现样式。</li><li>JavaScript（行为）：是一种弱类型脚本语言，其源码不需经过编译，而是由浏览器解释运行，用于控制网页的行为</li></ul><h2 id="1-3、结构层（HTML）"><a href="#1-3、结构层（HTML）" class="headerlink" title="1.3、结构层（HTML）"></a><strong>1.3、结构层（HTML）</strong></h2><p>太简单，略</p><h2 id="1-4、表现层（CSS）"><a href="#1-4、表现层（CSS）" class="headerlink" title="1.4、表现层（CSS）"></a><strong>1.4、表现层（CSS）</strong></h2><p>CSS层叠样式表是一门标记语言，并不是编程语言，因此不可以自定义变量，不可以引用等，换句话说就是不具备任何语法支持，它主要缺陷如下：</p><ul><li>语法不够强大，比如<strong>无法嵌套书写</strong>，导致模块化开发中需要书写很多重复的选择器；</li><li><strong>没有变量和合理的样式复用机制</strong>，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致<strong>难以维护</strong>；这就导致了我们在工作中无端增加了许多工作量。为了解决这个问题，前端开发人员会使用一种称之为【CSS预处理器】的工具,提供CSS缺失的样式层复用机制、减少冗余代码，提高样式代码的可维护性。大大的提高了前端在样式上的开发效率。</li></ul><p>什么是CSS预处理器:</p><p>CSS预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为CSS增加了一些编程的特性，将CSS作为目标生成文件，然后开发者就只需要使用这种语言进行CSS的编码工作。转化成通俗易懂的话来说就是“用一种专门的编程语言，进行Web页面样式设计，再通过编译器转化为正常的CSS文件，以供项目使用”。</p><p>常用的CSS预处理器有哪些</p><ul><li>SASS：基于Ruby ，通过服务端处理，功能强大。解析效率高。需要学习Ruby语言，上手难度高于LESS。</li><li>LESS：基于NodeJS，通过客户端处理，使用简单。功能比SASS简单，解析效率也低于SASS，但在实际开发中足够了，所以如果我们后台人员如果需要的话，建议使用LESS。</li></ul><h2 id="1-5、行为层（JavaScript）"><a href="#1-5、行为层（JavaScript）" class="headerlink" title="1.5、行为层（JavaScript）"></a><strong>1.5、行为层（JavaScript）</strong></h2><p>JavaScript<strong>一门弱类型脚本语言，其源代码在发往客户端运行之前不需要经过编译，而是将文本格式的字符代码发送给浏览器，由浏览器解释运行。</strong></p><h3 id="Native-原生JS开发"><a href="#Native-原生JS开发" class="headerlink" title="Native 原生JS开发"></a>Native 原生JS开发</h3><p>原生JS开发，也就是让我们按照【ECMAScript】标准的开发方式，简称ES，特点是所有浏览器都支持。截至到当前，ES标准以发布如下版本：</p><ul><li>ES3</li><li>ES4（内部，未正式发布）</li><li>ES5（全浏览器支持）</li><li>ES6（常用，当前主流版本：webpack打包成为ES5支持）</li><li>ES7</li><li>ES8</li><li>ES9（草案阶段）</li></ul><p>区别就是逐步增加新特性。<br>TypeScript 微软的标准<br>TypeScript是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个超集， 而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。由安德斯·海尔斯伯格(C#、Delphi、TypeScript之父； .NET创立者) 主导。该语言的特点就是除了具备ES的特性之外还纳入了许多不在标准范围内的新特性，所以会导致很多浏览器不能直接支持TypeScript语法， 需要编译后(编译成JS) 才能被浏览器正确执行。</p><h3 id="JavaScript框架"><a href="#JavaScript框架" class="headerlink" title="JavaScript框架"></a>JavaScript框架</h3><ul><li>JQuery：大家熟知的JavaScript库，优点就是简化了DOM操作，缺点就是DOM操作太频繁，影响前端性能；在前端眼里使用它仅仅是为了兼容IE6，7，8；</li><li>Angular：Google收购的前端框架，由一群Java程序员开发，其特点是将后台的MVC模式搬到了前端并增加了<strong>模块化开发</strong>的理念，与微软合作，采用了TypeScript语法开发；对后台程序员友好，对前端程序员不太友好；最大的缺点是版本迭代不合理（如1代–&gt;2 代，除了名字，基本就是两个东西；截止发表博客时已推出了Angular6）</li><li>React：Facebook 出品，一款高性能的JS前端框架；特点是提出了新概念 【<strong>虚拟DOM</strong>】用于减少真实 DOM 操作，在内存中模拟 DOM操作，有效的提升了前端渲染效率；缺点是使用复杂，因为需要额外学习一门【JSX】语言；</li><li><strong>Vue</strong>：一款渐进式 JavaScript 框架，所谓渐进式就是逐步实现新特性的意思，如实现模块化开发、路由、状态管理等新特性。其特点是综合了 Angular（模块化）和React(虚拟 DOM) 的优点；</li><li><strong>Axios</strong>：前端通信框架；因为 Vue 的边界很明确，就是为了处理 DOM，所以并不具备通信能力，此时就需要额外使用一个通信框架与服务器交互；当然也可以直接选择使用jQuery 提供的AJAX 通信功能；</li></ul><h1 id="二、前端发展史"><a href="#二、前端发展史" class="headerlink" title="二、前端发展史"></a><strong>二、前端发展史</strong></h1><h2 id="2-1、UI框架"><a href="#2-1、UI框架" class="headerlink" title="2.1、UI框架"></a><strong>2.1、UI框架</strong></h2><ul><li>Ant-Design：阿里巴巴出品，基于React的UI框架</li><li>ElementUI、iview、ice：饿了么出品，基于Vue的UI框架</li><li>BootStrap：Teitter推出的一个用于前端开发的开源工具包</li><li>AmazeUI：又叫“妹子UI”，一款HTML5跨屏前端框架</li></ul><h2 id="2-2、JavaScript构建工具"><a href="#2-2、JavaScript构建工具" class="headerlink" title="2.2、JavaScript构建工具"></a><strong>2.2、JavaScript构建工具</strong></h2><ul><li>Babel：JS编译工具，主要用于浏览器不支持的ES新特性，比如用于编译TypeScript</li><li>WebPack：模块打包器，主要作用就是打包、压缩、合并及按序加载</li><li>注：以上知识点已将WebApp开发所需技能全部梳理完毕</li></ul><h2 id="2-3、三端同一"><a href="#2-3、三端同一" class="headerlink" title="2.3、三端同一"></a><strong>2.3、三端同一</strong></h2><p>混合开发（Hybrid App）</p><p>主要目的是实现一套代码三端统一（PC、Android：.apk、iOS：.ipa）并能够调用到设备底层硬件（如：传感器、GPS、摄像头等），打包方式主要有以下两种：</p><ul><li>云打包：HBuild -&gt; HBuildX，DCloud 出品；API Cloud</li><li>本地打包： Cordova（前身是 PhoneGap）</li></ul><p>微信小程序</p><p>详见微信官网，这里就是介绍一个方便微信小程序UI开发的框架：WeUI</p><h2 id="2-4、后端技术"><a href="#2-4、后端技术" class="headerlink" title="2.4、后端技术"></a><strong>2.4、后端技术</strong></h2><p>前端人员为了方便开发也需要掌握一定的后端技术但我们Java后台人员知道后台知识体系极其庞大复杂，所以为了方便前端人员开发后台应用，就出现了Node JS这样的技术。Node JS的作者已经声称放弃Node JS(说是架构做的不好再加上笨重的node modules，可能让作者不爽了吧)开始开发全新架构的De no<br>既然是后台技术，那肯定也需要框架和项目管理工具， Node JS框架及项目管理工具如下：</p><ul><li>Express：Node JS框架</li><li>Koa：Express简化版</li><li>NPM：项目综合管理工具，类似于Maven</li><li>YARN：NPM的替代方案，类似于Maven和Gradle的关系</li></ul><h2 id="2-5、主流前端框架"><a href="#2-5、主流前端框架" class="headerlink" title="2.5、主流前端框架"></a><strong>2.5、主流前端框架</strong></h2><p>==Vue.js==</p><hr><p>iView     </p><p>iview是一个强大的基于Vue的UI库， 有很多实用的基础组件比element ui的组件更丰富， 主要服务于PC界面的中后台产品。使用单文件的Vue组件化开发模式基于npm+webpack+babel开发， 支持ES 2015高质量、功能丰富友好的API， 自由灵活地使用空间。</p><ul><li><a href="https://www.iviewui.com/docs/introduce" target="_blank" rel="noopener">官网地址</a> </li><li><a href="https://github.com/view-design/ViewUI" target="_blank" rel="noopener">Github</a></li><li><a href="https://adminpro.iviewui.com" target="_blank" rel="noopener">iview-admin</a></li><li><a href="https://gitee.com/icarusion/iview-admin" target="_blank" rel="noopener">码云</a></li></ul><p>备注：属于前端主流框架，选型时可考虑使用，主要特点是移动端支持较多</p><hr><p>==Element UI==</p><p>Element是饿了么前端开源维护的Vue UI组件库， 组件齐全， 基本涵盖后台所需的所有组件，文档讲解详细， 例子也很丰富。主要用于开发PC端的页面， 是一个质量比较高的Vue UI组件库。</p><ul><li><p><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">官网地址</a></p></li><li><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/" target="_blank" rel="noopener">vue-element-admin</a>    <a href="https://gitee.com/julywind/vue-element-admin" target="_blank" rel="noopener">码云</a></p></li></ul><p>备注：属于前端主流框架，选型时可考虑使用，主要特点是桌面端支持较多</p><hr><p>ICE</p><p>飞冰是阿里巴巴团队基于React/Angular/Vue的中后台应用解决方案， 在阿里巴巴内部， 已经有270多个来自几乎所有BU的项目在使用。飞冰包含了一条从设计端到开发端的完整链路，帮助用户快速搭建属于自己的中后台应用。</p><ul><li>官网地址。</li><li>Git hub</li></ul><p>备注：主要组件还是以React为主， 截止2019年02月17日更新博客前对Vue的支持还不太完善，目前尚处于观望阶段</p><hr><p>VantUI</p><p>Vant UI是有赞前端团队基于有赞统一的规范实现的Vue组件库， 提供了-整套UI基础组件和业务组件。通过Vant， 可以快速搭建出风格统一的页面，提升开发效率。</p><p>官网地址<br>Github</p><hr><p>AtUI</p><p>at-ui是一款基于Vue 2.x的前端UI组件库， 主要用于快速开发PC网站产品。它提供了一套n pm+web pack+babel前端开发工作流程， CSS样式独立， 即使采用不同的框架实现都能保持统一的UI风格。<br>·官网地址<br>·Git hub</p><hr><p>Cube Ul</p><p>cube-ui是滴滴团队开发的基于Vue js实现的精致移动端组件库。支持按需引入和后编译， 轻量灵活；扩展性强，可以方便地基于现有组件实现二次开发。</p><ul><li>官网地址</li><li>Github</li></ul><p>混合开发</p><hr><p>Flutter</p><p>Flutter是谷歌的移动端UI框架， 可在极短的时间内构建Android和iOS上高质量的原生级应用。Flutter可与现有代码一起工作， 它被世界各地的开发者和组织使用， 并且Flutter是免费和开源的。</p><ul><li>官网地址</li></ul><hr><p>Githu<br>备注：Google出品， 主要特点是快速构建原生APP应用程序， 如做混合应用该框架为必选框架</p><hr><p>loni</p><p>lonic既是一个CSS框架也是一个Javascript UI库， lonic是目前最有潜力的一款HTML 5手机应用开发框架。通过SASS构建应用程序， 它提供了很多UI组件来帮助开发者开发强大的应用。它使用JavaScript MV VM框架和Angular JS/Vue来增强应用。提供数据的双向绑定， 使用它成为Web和移动开发者的共同选择。</p><ul><li>官网地址</li><li>官网文档</li><li>Git hub</li></ul><hr><p>微信小程序</p><p>mpvue</p><p>mpvue是美团开发的一个使用Vue.js开发小程序的前端框架， 目前支持微信小程序、百度智能小程序，头条小程序和支付宝小程序。框架基于Vue.js， 修改了的运行时框架runtime和代码编译器compiler实现， 使其可运行在小程序环境中， 从而为小程序开发引入了Vue.js开发体验。</p><ul><li>官网地址</li><li>Git hub</li></ul><p>​    备注：完备的Vue开发体验， 井且支持多平台的小程序开发， 推荐使用</p><hr><p>WeUI</p><p>WeUI是一套同微信原生视觉体验一致的基础样式库， 由微信官方设计团队为微信内网页和微信小程序量身设计， 令用户的使用感知更加统一。包含button、cell、dialog、toast、article、icon等各式元素。</p><ul><li>官网地址</li><li>Github</li></ul><h1 id="三、了解前后分离的演变史"><a href="#三、了解前后分离的演变史" class="headerlink" title="三、了解前后分离的演变史"></a><strong>三、了解前后分离的演变史</strong></h1><p>为什么需要前后分离</p><h2 id="3-1、后端为主的MVC时代"><a href="#3-1、后端为主的MVC时代" class="headerlink" title="3.1、后端为主的MVC时代"></a><strong>3.1、后端为主的MVC时代</strong></h2><p>为了降低开发的复杂度， 以后端为出发点， 比如：Struts、Spring MVC等框架的使用， 就是后端的MVC时代；<br>以SpringMVC流程为例：</p><img src="Vue.assets/image-20210817172844264.png" alt="image-20210817172844264" style="zoom:150%;"><ul><li>发起请求到前端控制器(Dispatcher Servlet)</li><li>前端控制器请求HandlerMapping查找Handler，可以根据xml配置、注解进行查找</li><li>处理器映射器HandlerMapping向前端控制器返回Handler</li><li>前端控制器调用处理器适配器去执行Handler</li><li>处理器适配器去执行Handler</li><li>Handler执行完成给适配器返回ModelAndView</li><li>处理器适配器向前端控制器返回ModelAndView，ModelAndView是SpringMvc框架的一个底层对象，包括Model和View</li><li>前端控制器请求视图解析器去进行视图解析，根据逻辑视图名解析成真正的视图(JSP)</li><li>视图解析器向前端控制器返回View</li><li>前端控制器进行视图渲染，视图渲染将模型数据(在ModelAndView对象中)填充到request域</li><li>前端控制器向用户响应结果</li></ul><blockquote><p>==优点==<br>MVC是一个非常好的协作模式， 能够有效降低代码的耦合度从架构上能够让开发者明白代码应该写在哪里。为了让View更纯粹， 还可以使用Thyme leaf、Frree marker等模板引擎， 使模板里无法写入Java代码， 让前后端分工更加清晰。</p></blockquote><blockquote><p>缺点</p></blockquote><ul><li>前端开发重度依赖开发环境，开发效率低，这种架构下，前后端协作有两种模式：</li><li>第一种是前端写DEMO， 写好后， 让后端去套模板。好处是DEMO可以本地开发， 很高效。不足是还需要后端套模板，有可能套错，套完后还需要前端确定，来回沟通调整的成本比较大；</li><li>另一种协作模式是前端负责浏览器端的所有开发和服务器端的View层模板开发。好处是UI相关的代码都是前端去写就好，后端不用太关注，不足就是前端开发重度绑定后端环境，环境成为影响前端开发效率的重要因素。</li><li>前后端职责纠缠不清：模板引擎功能强大，依旧可以通过拿到的上下文变量来实现各种业务逻辑。这样，只要前端弱势一点，往往就会被后端要求在模板层写出不少业务代码，还有一个很大的灰色地带是Controller， 页面路由等功能本应该是前端最关注的， 但却是由后端来实现。Controller本身与Model往往也会纠缠不清，看了让人咬牙的业务代码经常会出现在Controller层。这些问题不能全归结于程序员的素养， 否则JSP就够了。</li><li>对前端发挥的局限性：性能优化如果只在前端做空间非常有限，于是我们经常需要后端合作，但由于后端框架限制，我们很难使用[Comet】、【Big Pipe】等技术方案来优化性能。</li></ul><p>注：在这期间(2005年以前) ， 包括早期的JSP、PHP可以称之为Web 1.0时代。在这里想说一句， 如果你是一名Java初学者， 请你不要再把一些陈旧的技术当回事了， 比如JSP， 因为时代在变、技术在变、什么都在变(引用扎克伯格的一句话：唯一不变的是变化本身)；当我们去给大学做实训时，有些同学会认为我们没有讲什么干货，其实不然，只能说是你认知里的干货对于市场来说早就过时了而已</p><h2 id="3-2、基于AJAX带来的SPA时代"><a href="#3-2、基于AJAX带来的SPA时代" class="headerlink" title="3.2、基于AJAX带来的SPA时代"></a><strong>3.2、基于AJAX带来的SPA时代</strong></h2><p>时间回到2005年A OAX(Asynchronous JavaScript And XML， 异步JavaScript和XML，老技术新用法)被正式提出并开始使用CDN作为静态资源存储， 于是出现了JavaScript王者归来(在这之前JS都是用来在网页上贴狗皮膏药广告的) 的SPA(Single Page Application) 单页面应用时代。</p><p>优点<br>这种模式下， <strong>前后端的分工非常清晰， 前后端的关键协作点是AJAX接口。</strong>看起来是如此美妙， 但回过头来看看的话， 这与JSP时代区别不大。复杂度从服务端的JSP里移到了浏览器的JavaScript，浏览器端变得很复杂。类似Spring MVC， 这个时代开始出现浏览器端的分层架构：</p><p>缺点</p><ul><li>前后端接口的约定：如果后端的接口一塌糊涂，如果后端的业务模型不够稳定，那么前端开发会很痛苦；不少团队也有类似尝试，通过接口规则、接口平台等方式来做。有了和后端一起沉淀的接口规则，还可以用来模拟数据，使得前后端可以在约定接口后实现高效并行开发。</li><li>前端开发的复杂度控制：SPA应用大多以功能交互型为主，JavaScript代码过十万行很正常。大量JS代码的组织，与View层的绑定等，都不是容易的事情。</li></ul><h2 id="3-3、前端为主的MV-时代"><a href="#3-3、前端为主的MV-时代" class="headerlink" title="3.3、前端为主的MV*时代"></a><strong>3.3、前端为主的MV*时代</strong></h2><p>此处的MV*模式如下：</p><ul><li>MVC(同步通信为主) ：Model、View、Controller</li><li>MVP(异步通信为主) ：Model、View、Presenter</li><li>MVVM(异步通信为主)：Model、View、View Model为了降低前端开发复杂度，涌现了大量的前端框架，比如：Angular JS、React、Vue.js、Ember JS等， 这些框架总的原则是先按类型分层， 比如Templates、Controllers、Models， 然后再在层内做切分，如下图：</li></ul><p>优点</p><ul><li>前后端职责很清晰：前端工作在浏览器端，后端工作在服务端。清晰的分工，可以让开发并行，测试数据的模拟不难， 前端可以本地开发。后端则可以专注于业务逻辑的处理， 输出RESTful等接口。</li><li>前端开发的复杂度可控：前端代码很重，但合理的分层，让前端代码能各司其职。这一块蛮有意思的，简单如模板特性的选择，就有很多很多讲究。并非越强大越好，限制什么，留下哪些自由，代码应该如何组织，所有这一切设计，得花一本书的厚度去说明。</li><li>部署相对独立：可以快速改进产品体验缺点</li><li>代码不能复用。比如后端依旧需要对数据做各种校验，校验逻辑无法复用浏览器端的代码。如果可以复用，那么后端的数据校验可以相对简单化。</li><li>全异步， 对SEO不利。往往还需要服务端做同步渲染的降级方案。</li><li>性能并非最佳，特别是移动互联网环境下。</li><li>SPA不能满足所有需求， 依旧存在大量多页面应用。URL Design需要后端配合， 前端无法完全掌控。</li></ul><h2 id="3-4、Node-JS带来的全栈时代"><a href="#3-4、Node-JS带来的全栈时代" class="headerlink" title="3.4、Node JS带来的全栈时代"></a><strong>3.4、Node JS带来的全栈时代</strong></h2><p>前端为主的MV*模式解决了很多很多问题， 但如上所述， 依旧存在不少不足之处。随着Node JS的兴起， JavaScript开始有能力运行在服务端。这意味着可以有一种新的研发模式：</p><p>在这种研发模式下，前后端的职责很清晰。对前端来说，两个UI层各司其职：</p><ul><li>Front-end Ul layer处理浏览器层的展现逻辑。通过CSS渲染样式， 通过JavaScript添加交互功能， HTML的生成也可以放在这层， 具体看应用场景。</li><li>Back-end Ul layer处理路由、模板、数据获取、Cookie等。通过路由， 前端终于可以自主把控URL Design， 这样无论是单页面应用还是多页面应用， 前端都可以自由调控。后端也终于可以摆脱对展现的强关注，转而可以专心于业务逻辑层的开发。通过Node， WebServer层也是JavaScript代码， 这意味着部分代码可前后复用， 需要SEO的场景可以在服务端同步渲染，由于异步请求太多导致的性能问题也可以通过服务端来缓解。前一种模式的不足，通过这种模式几乎都能完美解决掉。<em>与JSP模式相比， 全栈模式看起来是一种回归， 也的确是一种向原始开发模式的回归， 不过是一种螺旋上升式的回归。**基于Node JS的全栈模式， 依旧面临很多挑战：</em></li><li>需要前端对服务端编程有更进一步的认识。比如TCP/IP等网络知识的掌握。</li><li>Node JS层与Java层的高效通信。Node JS模式下， 都在服务器端， RESTful HTTP通信未必高效， 通过SOAP等方式通信更高效。一切需要在验证中前行。</li><li>对部著、运维层面的熟练了解，需要更多知识点和实操经验。</li><li>大量历史遗留问题如何过渡。这可能是最大最大的阻力。</li><li><em>注：看到这里，相信很多同学就可以理解，为什么我总在课堂上说：“前端想学后台很难，而我们后端程序员学任何东西都很简单”；就是因为我们后端程序员具备相对完善的知识体系。</em></li></ul><p>全栈!So Easy!<br><strong>3.5、总结</strong><br>综上所述，模式也好，技术也罢，没有好坏优劣之分，只有适合不适合；前后分离的开发思想主要是基于Soc(关注度分离原则)，上面种种模式，都是让前后端的职责更清晰，分工更合理高效。</p><h1 id="四、第一个Vue程序"><a href="#四、第一个Vue程序" class="headerlink" title="四、第一个Vue程序"></a><strong>四、第一个Vue程序</strong></h1><h2 id="4-1、什么是MVVM"><a href="#4-1、什么是MVVM" class="headerlink" title="4.1、什么是MVVM"></a><strong>4.1、什么是MVVM</strong></h2><p>MVVM（Model-View-ViewModel）是一种软件设计模式，由微软WPF（用于替代WinForm，以前就是用这个技术开发桌面应用程序的）和Silverlight（类似于Java Applet，简单点说就是在浏览器上运行WPF）的架构师Ken Cooper和Ted Peters开发，是一种简化用户界面的事件驱动编程方式。由John Gossman（同样也是WPF和Sliverlight的架构师）与2005年在他的博客上发表。</p><p>MVVM源自于经典的MVC（Model-View-Controller）模式。MVVM的核心是ViewModel层，负责转换Model中的数据对象来让数据变得更容易管理和使用。其作用如下：</p><ul><li>该层向上与视图层进行双向数据绑定</li><li>向下与Model层通过接口请求进行数据交互</li></ul><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215931.png" alt="img"></p><p>MVVM已经相当成熟了，主要运用但不仅仅在网络应用程序开发中。当下流行的MVVM框架有Vue.js，Anfular JS</p><h2 id="4-2、为什么要使用MVVM"><a href="#4-2、为什么要使用MVVM" class="headerlink" title="4.2、为什么要使用MVVM"></a><strong>4.2、为什么要使用MVVM</strong></h2><p>MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大好处</p><ul><li>==低耦合==：视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的View上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</li><li>==可复用==：你可以把一些视图逻辑放在一个ViewModel里面，让很多View重用这段视图逻辑。</li><li>==独立开发==：开发人员可以专注于业务逻辑和数据的开发（ViewMode），设计人员可以专注于页面设计。</li><li>==可测试==：界面素来是比较难以测试的，而现在测试可以针对ViewModel来写。</li></ul><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416155415460-511801007.png" alt="img"></p><h3 id="（1）View"><a href="#（1）View" class="headerlink" title="（1）View"></a><strong>（1）View</strong></h3><p>View是视图层， 也就是用户界面。前端主要由HTH L和csS来构建， 为了更方便地展现vi eu to del或者Hodel层的数据， 已经产生了各种各样的前后端模板语言， 比如FreeMarker，Thyme leaf等等， 各大MV VM框架如Vue.js.Angular JS， EJS等也都有自己用来构建用户界面的内置模板语言。</p><h3 id="（2）Model"><a href="#（2）Model" class="headerlink" title="（2）Model"></a><strong>（2）Model</strong></h3><p>Model是指数据模型， 泛指后端进行的各种业务逻辑处理和数据操控， 主要围绕数据库系统展开。这里的难点主要在于需要和前端约定统一的接口规则</p><h3 id="（3）ViewModel"><a href="#（3）ViewModel" class="headerlink" title="（3）ViewModel"></a><strong>（3）ViewModel</strong></h3><p>ViewModel是由前端开发人员组织生成和维护的视图数据层。在这一层， 前端开发者对从后端获取的Model数据进行转换处理， 做二次封装， 以生成符合View层使用预期的视图数据模型。<br>  需要注意的是View Model所封装出来的数据模型包括视图的状态和行为两部分， 而Model层的数据模型是只包含状态的</p><ul><li>比如页面的这一块展示什么，那一块展示什么这些都属于视图状态(展示)</li><li>页面加载进来时发生什么，点击这一块发生什么，这一块滚动时发生什么这些都属于视图行为(交互)</li></ul><p>视图状态和行为都封装在了View Model里。这样的封装使得View Model可以完整地去描述View层。由于实现了双向绑定， View Model的内容会实时展现在View层， 这是激动人心的， 因为前端开发者再也不必低效又麻烦地通过操纵DOM去更新视图。<br>  MVVM框架已经把最脏最累的一块做好了， 我们开发者只需要处理和维护View Model， 更新数据视图就会自动得到相应更新，真正实现事件驱动编程。<br>  <strong>View层展现的不是Model层的数据， 而是ViewModel的数据， 由ViewModel负责与Model层交互，获取和更新数据， 这就完全解耦了View层和Model层， 这个解耦是至关重要的， 它是前后端分离方案实施的重要一环。</strong></p><h2 id="4-3、Vue"><a href="#4-3、Vue" class="headerlink" title="4.3、Vue"></a><strong>4.3、Vue</strong></h2><p>Vue(读音/vju/， 类似于view) 是一套用于构建用户界面的渐进式框架， 发布于2014年2月。与其它大型框架不同的是， Vue被设计为可以自底向上逐层应用。Vue的核心库只关注视图层， 不仅易于上手， 还便于与第三方库(如：vue-router，vue-resource，vue x) 或既有项目整合。</p><h3 id="（1）MVVM模式的实现者"><a href="#（1）MVVM模式的实现者" class="headerlink" title="（1）MVVM模式的实现者"></a>（1）MVVM模式的实现者</h3><ul><li>Model：模型层， <code>在这里表示JavaScript对象</code></li><li>View：视图层， 在这里表示DOM(HTML操作的元素)</li><li>ViewModel：连接视图和数据的中间件， Vue.js就是MVVM中的View Model层的实现者</li></ul><p>在MVVM架构中， 是不允许数据和视图直接通信的， 只能通过ViewModel来通信， 而View Model就是定义了一个Observer观察者</p><ul><li>ViewModel能够观察到数据的变化， 并对视图对应的内容进行更新</li><li>ViewModel能够监听到视图的变化， 并能够通知数据发生改变</li></ul><p>至此， 我们就明白了， Vue.js就是一个MV VM的实现者， 他的核心就是实现了DOM监听与数据绑定</p><h3 id="（2）为什么要使用Vue-js"><a href="#（2）为什么要使用Vue-js" class="headerlink" title="（2）为什么要使用Vue.js"></a>（2）为什么要使用Vue.js</h3><ul><li>==轻量级==， 体积小是一个重要指标。Vue.js压缩后有只有20多kb(Angular压缩后56kb+，React压缩后44kb+)</li><li>移动优先。更适合移动端， 比如移动端的Touch事件</li><li>易上手，学习曲线平稳，文档齐全</li><li>吸取了Angular(模块化) 和React(虚拟DOＭ) 的长处， 并拥有自己独特的功能，如：计算属性</li><li>开源，社区活跃度高</li></ul><h2 id="4-4、第一个Vue程序"><a href="#4-4、第一个Vue程序" class="headerlink" title="4.4、第一个Vue程序"></a>4.4、第一个Vue程序</h2><p>【说明】IDEA可以安装Vue的插件!<br>  注意：Vue不支持IE 8及以下版本， 因为Vue使用了IE 8无法模拟的ECMAScript 5特性。但它支持所有兼容ECMAScript 5的浏览器。</p><h3 id="（1）下载地址"><a href="#（1）下载地址" class="headerlink" title="（1）下载地址"></a>（1）下载地址</h3><p>开发版本</p><ul><li>包含完整的警告和调试模式：https：//yuejs.org/js/vue.js</li><li>删除了警告， 30.96KB min+gzip：https：//vuejs.org/js/vue.min.js</li></ul><p>CDN</p><ul><li><script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script></li><li><script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script></li></ul><h3 id="（2）代码编写"><a href="#（2）代码编写" class="headerlink" title="（2）代码编写"></a>（2）代码编写</h3><p>Vue.js的核心是实现了MVVM模式， 她扮演的角色就是View Model层， 那么所谓的第一个应用程序就是展示她的数据绑定功能，操作流程如下：</p><h4 id="1、创建一个HTML文件"><a href="#1、创建一个HTML文件" class="headerlink" title="1、创建一个HTML文件"></a>1、创建一个HTML文件</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、引入Vue-js"><a href="#2、引入Vue-js" class="headerlink" title="2、引入Vue.js"></a>2、引入Vue.js</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3、创建一个Vue实例"><a href="#3、创建一个Vue实例" class="headerlink" title="3、创建一个Vue实例"></a>3、创建一个Vue实例</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span><span class="token string">"hello,vue!"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ul><li><code>el: &#39;#vue&#39;</code>：绑定元素的ID</li><li><code>data:{message:&#39;Hello Vue!&#39;}</code>：数据对象中有一个名为message的属性，并设置了初始值 Hello Vue！</li></ul><h4 id="4、将数据绑定到页面元素"><a href="#4、将数据绑定到页面元素" class="headerlink" title="4、将数据绑定到页面元素"></a>4、将数据绑定到页面元素</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    {{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（3）完整的HTML"><a href="#（3）完整的HTML" class="headerlink" title="（3）完整的HTML"></a>（3）完整的HTML</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    {{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span><span class="token string">"hello,vue!"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（4）测试"><a href="#（4）测试" class="headerlink" title="（4）测试"></a>（4）测试</h3><p>为了能够更直观的体验Vue带来的数据绑定功能， 我们需要在浏览器测试一番， 操作流程如下：<br>  1、在浏览器上运行第一个Vue应用程序， 进入开发者工具<br>  2、在控制台输入vm.message=‘HelloWorld’， 然后回车， 你会发现浏览器中显示的内容会直接变成HelloWorld<br>  此时就可以在控制台直接输入vm.message来修改值， 中间是可以省略data的， 在这个操作中， 我并没有主动操作DOM， 就让页面的内容发生了变化， 这就是借助了Vue的数据绑定功能实现的； MV VM模式中要求View Model层就是使用观察者模式来实现数据的监听与绑定， 以做到数据与视图的快速响应。</p><h1 id="五、基础语法指令"><a href="#五、基础语法指令" class="headerlink" title="五、基础语法指令"></a><strong>五、基础语法指令</strong></h1><h2 id="5-1、v-bind"><a href="#5-1、v-bind" class="headerlink" title="5.1、v-bind"></a>5.1、v-bind</h2><p>我们已经成功创建了第一个Vue应用!看起来这跟渲染一个字符串模板非常类似， 但是Vue在背后做了大量工作。现在数据和DOM已经被建立了关联， 所有东西都是响应式的。我们在控制台操作对象属性，界面可以实时更新!<br>  我们还可以使用v-bind来绑定元素特性!</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>v-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    鼠标悬停几秒钟查看此处动态绑定的提示信息！  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span> <span class="token string">'页面加载于 '</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你看到的v-bind等被称为指令。指令带有前缀v以表示它们是Vue提供的特殊特性。可能你已经猜到了， 它们会在渲染的DOM上应用特殊的响应式行为在这里，该指令的意思是：“将这个元素节点的title特性和Vue实例的message属性保持一致”。<br>  如果你再次打开浏览器的JavaScript控制台， 输入app， message=‘新消息’，就会再一次看到这个绑定了title特性的HTML已经进行了更新。</p><h2 id="5-2、v-if，-v-else"><a href="#5-2、v-if，-v-else" class="headerlink" title="5.2、v-if， v-else"></a>5.2、v-if， v-else</h2><p>什么是条件判断语句，就不需要我说明了吧，以下两个属性!</p><p>v-if<br>v-else<br>上代码</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>v-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ok<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>No<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            type<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：<br>1.在浏览器上运行，打开控制台!<br>2.在控制台输入vm.ok=false然后回车，你会发现浏览器中显示的内容会直接变成NO<br>  注：使用v-*属性绑定数据是不需要双花括号包裹的</p><p>v-else-if</p><p>v-if<br>v-else-if<br>v-else<br>注：===三个等号在JS中表示绝对等于(就是数据与类型都要相等)上代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>v-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>A<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>B<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>D<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            type<span class="token punctuation">:</span> <span class="token string">'A'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-3、v-for"><a href="#5-3、v-for" class="headerlink" title="5.3、v-for"></a>5.3、v-for</h2><ul><li>v-for</li></ul><p>格式说明</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item,index) in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{item.message}}---{{index}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：<code>items</code>是数组，<code>item</code>是数组元素迭代的别名。我们之后学习的Thymeleaf模板引擎的语法和这个十分的相似！<br>  上代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item,index) in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{item.message}}---{{index}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">/*Model：数据*/</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            items<span class="token punctuation">:</span><span class="token punctuation">[</span>                <span class="token punctuation">{</span>message<span class="token punctuation">:</span><span class="token string">'狂神说Java'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>message<span class="token punctuation">:</span><span class="token string">'狂神说前端'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>message<span class="token punctuation">:</span><span class="token string">'狂神说运维'</span><span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：在控制台输入<code>vm.items.push({message：&#39;狂神说运维&#39;})</code>，尝试追加一条数据，你会发现浏览器中显示的内容会增加一条<code>狂神说运维</code>.</p><h2 id="5-4、v-on"><a href="#5-4、v-on" class="headerlink" title="5.4、v-on"></a>5.4、v-on</h2><p><code>v-on</code>监听事件<br> emsp;事件有Vue的事件、和前端页面本身的一些事件!我们这里的<code>click</code>是vue的事件， 可以绑定到Vue中的<code>methods</code>中的方法事件!<br>  上代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>v-on</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sayHi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span><span class="token string">'Hello World'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span><span class="token punctuation">{</span>            sayHi<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//'this'在方法里面指向当前Vue实例</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击测试<br>  Vue还有一些基本的使用方式， 大家有需要的可以再跟着官方文档看看， 因为这些基本的指令几乎我们都见过了，一通百通!掌握学习的方式!</p><h1 id="六、表单双绑、组件"><a href="#六、表单双绑、组件" class="headerlink" title="六、表单双绑、组件"></a><strong>六、表单双绑、组件</strong></h1><h2 id="6-1、什么是双向数据绑定"><a href="#6-1、什么是双向数据绑定" class="headerlink" title="6.1、什么是双向数据绑定"></a>6.1、什么是双向数据绑定</h2><p>Vue.js是一个MV VM框架， 即数据双向绑定， 即当数据发生变化的时候， 视图也就发生变化， 当视图发生变化的时候，数据也会跟着同步变化。这也算是Vue.js的精髓之处了。<br>  值得注意的是，我们所说的数据双向绑定，一定是对于UI控件来说的非UI控件不会涉及到数据双向绑定。单向数据绑定是使用状态管理工具的前提。如果我们使用vue x那么数据流也是单项的，这时就会和双向数据绑定有冲突。</p><h3 id="（1）为什么要实现数据的双向绑定"><a href="#（1）为什么要实现数据的双向绑定" class="headerlink" title="（1）为什么要实现数据的双向绑定"></a>（1）为什么要实现数据的双向绑定</h3><p>在Vue.js中，如果使用vuex， 实际上数据还是单向的， 之所以说是数据双向绑定，这是用的UI控件来说， 对于我们处理表单， Vue.js的双向数据绑定用起来就特别舒服了。即两者并不互斥，在全局性数据流使用单项，方便跟踪；局部性数据流使用双向，简单易操作。</p><h2 id="6-2、在表单中使用双向数据绑定"><a href="#6-2、在表单中使用双向数据绑定" class="headerlink" title="6.2、在表单中使用双向数据绑定"></a>6.2、在表单中使用双向数据绑定</h2><p>你可以用v-model指令在表单、及元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇， 但v-model本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。<br>  注意：v-model会忽略所有表单元素的value、checked、selected特性的初始值而总是将Vue实例的数据作为数据来源。你应该通过JavaScript在组件的data选项中声明初始值!</p><h3 id="（1）单行文本"><a href="#（1）单行文本" class="headerlink" title="（1）单行文本"></a>（1）单行文本</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    输入的文本：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span><span class="token string">""</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（2）多行文本"><a href="#（2）多行文本" class="headerlink" title="（2）多行文本"></a>（2）多行文本</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   多行文本：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>多行文本是：{{pan}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span><span class="token string">"Hello hello!"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（3）单复选框"><a href="#（3）单复选框" class="headerlink" title="（3）单复选框"></a>（3）单复选框</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    单复选框：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{checked}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            checked<span class="token punctuation">:</span><span class="token boolean">false</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（4）多复选框"><a href="#（4）多复选框" class="headerlink" title="（4）多复选框"></a>（4）多复选框</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    多复选框：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jack<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Jack<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkedNames<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Jack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>join<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Join<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkedNames<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>join<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Jack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mike<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mike<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkedNames<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mike<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Mike<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>选中的值：{{checkedNames}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            checkedNames<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（6）单选按钮"><a href="#（6）单选按钮" class="headerlink" title="（6）单选按钮"></a>（6）单选按钮</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    单选框按钮    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>One<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Two<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>选中的值：{{picked}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            picked<span class="token punctuation">:</span><span class="token string">'Two'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（7）下拉框"><a href="#（7）下拉框" class="headerlink" title="（7）下拉框"></a>（7）下拉框</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--    性别：    &lt;input type="radio" name="sex" value="男" v-model="pan">男    &lt;input type="radio" name="sex" value="女" v-model="pan">女    &lt;p>选中了：{{pan}}&lt;/p>--></span>    下拉框:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>---请选择---<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>value:{{pan}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            pan<span class="token punctuation">:</span><span class="token string">"A"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：<code>v-model</code>表达式的初始值未能匹配任何选项，元系将被渲染为“未选中”状态。 在iOS中， 这会使用户无法选择第一个选项，因为这样的情况下，iOS不会触发<code>change</code>事件。因此，更推荐像上面这样提供一个值为空的禁用选项。</p><h2 id="6-3、什么是组件"><a href="#6-3、什么是组件" class="headerlink" title="6.3、什么是组件"></a>6.3、什么是组件</h2><p>组件是可复用的Vue实例， 说白了就是一组可以重复使用的模板， 跟JSTL的自定义标签、Thymeleal的th:fragment等框架有着异曲同工之妙，通常一个应用会以一棵嵌套的组件树的形式来组织：</p><p> <img src="https://gitee.com/huan122/huan/raw/master/img/202108232215959.png" alt="img"></p><p> <img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416182221939-631708112.png" alt="img"></p><p>例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p><h3 id="（1）第一个Vue组件"><a href="#（1）第一个Vue组件" class="headerlink" title="（1）第一个Vue组件"></a>（1）第一个Vue组件</h3><p>注意：在实际开发中，我们并不会用以下方式开发组件，而是采用<code>vue-cli</code>创建，<code>vue</code>模板文件的方式开发，以下方法只是为了让大家理解什么是组件。<br>  使用<code>Vue.component()</code>方法注册组件，格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>huan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>huan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//先注册组件</span>    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"huan"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>        template<span class="token punctuation">:</span><span class="token string">'&lt;li>Hello&lt;/li>'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//再实例化Vue</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><p>Vue.component()：注册组件<br>pan：自定义组件的名字<br>template：组件的模板<br>（2）使用props属性传递参数<br>像上面那样用组件没有任何意义，所以我们是需要传递参数到组件的，此时就需要使用props属性了！<br>  注意：默认规则下props属性里的值不能为大写；</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--组件：传递给组件中的值：props--></span>    <span class="token comment" spellcheck="true">&lt;!--组件，props传递给组件的值        先遍历出值也就是item        再通过bind将值绑定到xm，        props取出绑定的值        用template（模板）输出        --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>huan</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>xm</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>huan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//定义组件</span>    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"huan"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>        props<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'xm'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        template<span class="token punctuation">:</span><span class="token string">'&lt;li>{{xm}}&lt;/li>'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            items<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span><span class="token string">"Linux"</span><span class="token punctuation">,</span><span class="token string">"前端"</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ul><li>v-for=”item in items”：遍历Vue实例中定义的名为items的数组，并创建同等数量的组件</li><li>v-bind:panh=”item”：将遍历的item项绑定到组件中props定义名为item属性上；= 号左边的panh为props定义的属性名，右边的为item in items 中遍历的item项的值</li></ul><h1 id="七、Axios异步通信"><a href="#七、Axios异步通信" class="headerlink" title="七、Axios异步通信"></a><strong>七、Axios异步通信</strong></h1><h2 id="7-1、什么是Axios"><a href="#7-1、什么是Axios" class="headerlink" title="7.1、什么是Axios"></a>7.1、什么是Axios</h2><p>Axios是一个开源的可以用在浏览器端和Node JS的异步通信框架， 她的主要作用就是实现AJAX异步通信，其功能特点如下：</p><p>从浏览器中创建XMLHttpRequests<br>从node.js创建http请求<br>支持Promise API[JS中链式编程]<br>拦截请求和响应<br>转换请求数据和响应数据<br>取消请求<br>自动转换JSON数据<br>客户端支持防御XSRF(跨站请求伪造)</p><p>GitHub：<a href="https://github.com/axios/axios" target="_blank" rel="noopener">https://github.com/axios/axios</a><br>  中文文档：<a href="http://www.axios-js.com/" target="_blank" rel="noopener">http://www.axios-js.com/</a></p><h2 id="7-2、为什么要使用Axios"><a href="#7-2、为什么要使用Axios" class="headerlink" title="7.2、为什么要使用Axios"></a>7.2、为什么要使用Axios</h2><p>由于Vue.js是一个视图层框架并且作者(尤雨溪) 严格准守SoC(关注度分离原则)所以Vue.js并不包含AJAX的通信功能， 为了解决通信问题， 作者单独开发了一个名为vue-resource的插件， 不过在进入2.0版本以后停止了对该插件的维护并推荐了Axios框架。少用jQuery， 因为它操作Dom太频繁!</p><h2 id="7-3、第一个Axios应用程序"><a href="#7-3、第一个Axios应用程序" class="headerlink" title="7.3、第一个Axios应用程序"></a>7.3、第一个Axios应用程序</h2><p>咱们开发的接口大部分都是采用JSON格式， 可以先在项目里模拟一段JSON数据， 数据内容如下：创建一个名为data.json的文件并填入上面的内容， 放在项目的根目录下</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"CSDN"</span><span class="token punctuation">,</span>  <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blog.csdn.net/"</span><span class="token punctuation">,</span>  <span class="token property">"page"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token property">"isNonProfit"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token property">"address"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"street"</span><span class="token operator">:</span> <span class="token string">"含光门"</span><span class="token punctuation">,</span>    <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"陕西西安"</span><span class="token punctuation">,</span>    <span class="token property">"country"</span><span class="token operator">:</span> <span class="token string">"中国"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bilibili"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://space.bilibili.com/95256449"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Huan博客园"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blog.kuangstudy.com"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"百度"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://www.baidu.com/"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试代码</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>v-binf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--v-cloak 解决闪烁问题--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token attribute">[v-cloak]</span></span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>地名：{{info.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>地址：{{info.address.country}}--{{info.address.city}}--{{info.address.street}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>链接：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-binf:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info.url<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{info.url}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--引入js文件--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#vue"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//data：属性：vm</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">{</span>                info<span class="token punctuation">:</span><span class="token punctuation">{</span>                    name<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span>                    address<span class="token punctuation">:</span><span class="token punctuation">{</span>                        country<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span>                        city<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span>                        street<span class="token punctuation">:</span><span class="token keyword">null</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    url<span class="token punctuation">:</span><span class="token keyword">null</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//钩子函数</span>            axios                <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'data.json'</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token operator">=</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>在这里使用了v-bind将<code>a:href</code>的属性值与Vue实例中的数据进行绑定</li><li>使用axios框架的get方法请求AJAX并自动将数据封装进了Vue实例的数据对象中</li><li>我们在data中的数据结构必须和<code>Ajax</code>响应回来的数据格式匹配！</li></ol><h2 id="7-4、Vue的生命周期"><a href="#7-4、Vue的生命周期" class="headerlink" title="7.4、Vue的生命周期"></a>7.4、Vue的生命周期</h2><p>官方文档：<a href="https://cn.vuejs.org/v2/guide/instance.html#生命周期图示" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/instance.html#生命周期图示</a><br>  Vue实例有一个完整的生命周期，也就是从开始创建初女台化数据、编译模板、挂载DOM、渲染一更新一渲染、卸载等一系列过程，我们称这是Vue的生命周期。通俗说就是Vue实例从创建到销毁的过程，就是生命周期。<br>  在Vue的整个生命周期中，它提供了一系列的事件，可以让我们在事件触发时注册JS方法，可以让我们用自己注册的JS方法控制整个大局，在这些事件响应方法中的this直接指向的是Vue的实例。<br><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215054.png" alt="img"></p><h1 id="八、计算属性、内容分发、自定义事件"><a href="#八、计算属性、内容分发、自定义事件" class="headerlink" title="八、计算属性、内容分发、自定义事件"></a><strong>八、计算属性、内容分发、自定义事件</strong></h1><h2 id="1、什么是计算属性"><a href="#1、什么是计算属性" class="headerlink" title="1、什么是计算属性"></a>1、什么是计算属性</h2><p>计算属性的重点突出在属性两个字上(属性是名词)，首先它是个属性其次这个属性有计算的能力(计算是动词)，这里的计算就是个函数：简单点说，它就是一个能够将计算结果缓存起来的属性(将行为转化成了静态的属性)，仅此而已；可以想象为缓存!</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--view层，模板--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>currentTime1:{{currentTime1()}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>currentTime2:{{currentTime2}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>          message<span class="token punctuation">:</span><span class="token string">"pan"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span><span class="token punctuation">{</span>            currentTime1<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回一个时间戳</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        computed<span class="token punctuation">:</span><span class="token punctuation">{</span>            currentTime2<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//计算属性：methods，computed方法名不能重名，重名之后，只会调用methods的方法</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">;</span>                <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回一个时间戳</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：methods和computed里的东西不能重名<br>说明：</p><ul><li>methods：定义方法， 调用方法使用currentTime1()， 需要带括号</li><li>computed：定义计算属性， 调用属性使用currentTime2， 不需要带括号：this.message是为了能够让currentTime2观察到数据变化而变化</li><li>如何在方法中的值发生了变化，则缓存就会刷新!可以在控制台使用vm.message=”q in jiang”， 改变下数据的值，再次测试观察效果!</li><li>结论：</li><li>调用方法时，每次都需要讲行计算，既然有计算过程则必定产生系统开销，那如果这个结果是不经常变化的呢?此时就可以考虑将这个结果缓存起来，采用计算属性可以很方便的做到这点，计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销；</li></ul><h2 id="8-2、内容分发"><a href="#8-2、内容分发" class="headerlink" title="8.2、内容分发"></a>8.2、内容分发</h2><p>在Vue.js中我们使用<slot>元素作为承载分发内容的出口，作者称其为插槽，可以应用在组合组件的场景中；</slot></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>比如准备制作一个待办事项组件(todo) ， 该组件由待办标题(todo-title) 和待办内容(todo-items)组成，但这三个组件又是相互独立的，该如何操作呢?<br>  第一步定义一个待办事项的组件</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--1.导入Vue.js--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'todo'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>        template<span class="token punctuation">:</span><span class="token string">'&lt;div>\                &lt;div>代办事项&lt;/div>\                &lt;ul>\                    &lt;li>学习狂神说Java&lt;/li>\                &lt;/ul>\            &lt;/div>'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步 我们需要让，代办事项的标题和值实现动态绑定，怎么做呢？我们可以留一个插槽！<br>  1-将上面的代码留出一个插槽，即slot</p><pre class="line-numbers language-html"><code class="language-html"> Vue.component('todo',{        template:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>\                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>\                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2-定义一个名为todo-title的待办标题组件 和 todo-items的待办内容组件</p><pre class="line-numbers language-vue"><code class="language-vue">Vue.component('todo-title',{        props:['title'],        template:'<div>{{title}}</div>'    });12345//这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！    Vue.component("todo-items",{        props:["item","index"],        template:"<li>{{index+1}},{{item}}</li>"    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3-实例化Vue并初始化数据</p><pre class="line-numbers language-vue"><code class="language-vue"> var vm = new Vue({        el:"#vue",        data:{            todoItems:['test1','test2','test3']        }    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4-将这些值，通过插槽插入</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-title</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>秦老师系列课程<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-title</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;todo-items slot="todo-items" v-for="{item,index} in todoItems" v-bind:item="item">&lt;/todo-items>--></span>        <span class="token comment" spellcheck="true">&lt;!--如下为简写--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-items</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in todoItems<span class="token punctuation">"</span></span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;/todo-items    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：我们的todo-title和todo-items组件分别被分发到了todo组件的todo-title和todo-items插槽中<br>  完整代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-title</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-title</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--&lt;todo-items slot="todo-items" v-for="{item,index} in todoItems" v-bind:item="item">&lt;/todo-items>--></span>                <span class="token comment" spellcheck="true">&lt;!--如下为简写--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-items</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in todoItems<span class="token punctuation">"</span></span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-items</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token comment" spellcheck="true">/*Vue.component('todo', {                template: '&lt;div>\                    &lt;div>代办事项&lt;/div>\                    &lt;ul>\                    &lt;li>学习狂神说Java&lt;/li>\                &lt;/ul>\            &lt;/div>'            })            todo为组件，------->组件中有插槽            todo-title            todo-items  为插槽填充数据{{}}            */</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'todo'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                template<span class="token punctuation">:</span> <span class="token string">'&lt;div>\                &lt;slot name="todo-title">&lt;/slot>\                &lt;ul>\                    &lt;slot name="todo-items">&lt;/slot>\                &lt;/ul>\            &lt;/div>'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'todo-title'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">'&lt;div>{{title}}&lt;/div>'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-items"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"item"</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">"&lt;li>{{item}}&lt;/li>"</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>                data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    title<span class="token punctuation">:</span> <span class="token string">"huan老师系列课程"</span><span class="token punctuation">,</span>                    todoItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'test1'</span><span class="token punctuation">,</span> <span class="token string">'test2'</span><span class="token punctuation">,</span> <span class="token string">'test3'</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-3、自定义事件"><a href="#8-3、自定义事件" class="headerlink" title="8.3、自定义事件"></a>8.3、自定义事件</h2><p>通以上代码不难发现，数据项在Vue的实例中， 但删除操作要在组件中完成， 那么组件如何才能删除Vue实例中的数据呢?此时就涉及到参数传递与事件分发了， Vue为我们提供了自定义事件的功能很好的帮助我们解决了这个问题； 使用this.$emit(‘自定义事件名’， 参数) ， 操作过程如下：</p><h3 id="1、增加了methods对象、定义removeTodoltems的方法"><a href="#1、增加了methods对象、定义removeTodoltems的方法" class="headerlink" title="  1、增加了methods对象、定义removeTodoltems的方法"></a>  1、增加了methods对象、定义removeTodoltems的方法</h3><pre class="line-numbers language-html"><code class="language-html">var vm = new Vue({        el:"#vue",        data:{            title_text:"秦老师系列课程",            todoItems:['test1','test2','test3']        },        methods:{            removeItems:function(index){                console.log("删除了"+this.todoItems[index]+"OK");                //splice（） 方法向/从数组中添加/删除项目，然后返回被删除的项目，其中index                this.todoItems.splice(index,1);            }        }    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-修改todo-items待办内容组件的代码，增加一个删除按钮，并且绑定事件！"><a href="#2-修改todo-items待办内容组件的代码，增加一个删除按钮，并且绑定事件！" class="headerlink" title="2-修改todo-items待办内容组件的代码，增加一个删除按钮，并且绑定事件！"></a>2-修改todo-items待办内容组件的代码，增加一个删除按钮，并且绑定事件！</h3><pre class="line-numbers language-html"><code class="language-html"> Vue.component("todo-items",{        props:["item_p","index_p"],        template:"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>{{index_p+1}},{{item_p}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>remove<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>",        methods:{            remove:function (index) {            //这里的remove是自定义事件名称，需要在HTML中使用v-on:remove的方式                //this.$emit 自定义事件分发                this.$emit('remove',index);            }        }    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-修改todo-items待办内容组件的HTML代码，"><a href="#3-修改todo-items待办内容组件的HTML代码，" class="headerlink" title="3-修改todo-items待办内容组件的HTML代码，"></a>3-修改todo-items待办内容组件的HTML代码，</h3><p>增加一个自定义事件，比如叫remove，可以和组件的方法绑定，然后绑定到vue的方法！</p><pre><code>&lt;!--增加了v-on:remove=&quot;removeTodoItems(index)&quot;自定义事件，该组件会调用Vue实例中定义的--&gt;&lt;todo-items slot=&quot;todo-items&quot; v-for=&quot;(item,index) in todoItems&quot;                    :item_p=&quot;item&quot; :index_p=&quot;index&quot; v-on:remove=&quot;removeItems(index)&quot; :key=&quot;index&quot;&gt;&lt;/todo-items&gt;</code></pre><p>对上一个代码进行修改，实现删除功能</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-title</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-title</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--&lt;todo-items slot="todo-items" v-for="{item,index} in todoItems" v-bind:item="item">&lt;/todo-items>--></span>                <span class="token comment" spellcheck="true">&lt;!--如下为简写--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-items</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item,index) in todoItems<span class="token punctuation">"</span></span>                            <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">:index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>remove</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>removeItems(index)<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-items</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token comment" spellcheck="true">/*Vue.component('todo', {                template: '&lt;div>\                    &lt;div>代办事项&lt;/div>\                    &lt;ul>\                    &lt;li>学习狂神说Java&lt;/li>\                &lt;/ul>\            &lt;/div>'            })            todo为组件，------->组件中有插槽            todo-title            todo-items  为插槽填充数据{{}}            */</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'todo'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                template<span class="token punctuation">:</span> <span class="token string">'&lt;div>\                &lt;slot name="todo-title">&lt;/slot>\                &lt;ul>\                    &lt;slot name="todo-items">&lt;/slot>\                &lt;/ul>\            &lt;/div>'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'todo-title'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">'&lt;div>{{title}}&lt;/div>'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！</span>            Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-items"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"item"</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">"&lt;li>{{index+1}},{{item}}&lt;button @click='remove'>删除&lt;/button>&lt;/li>"</span><span class="token punctuation">,</span>                methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    remove<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//这里的remove是自定义事件名称，需要在HTML中使用v-on:remove的方式</span>                        <span class="token comment" spellcheck="true">//this.$emit 自定义事件分发</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'remove'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>                data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    title<span class="token punctuation">:</span> <span class="token string">"huan老师系列课程"</span><span class="token punctuation">,</span>                    todoItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'test1'</span><span class="token punctuation">,</span> <span class="token string">'test2'</span><span class="token punctuation">,</span> <span class="token string">'test3'</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    removeItems<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"删除了"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todoItems<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//splice（） 方法向/从数组中添加/删除项目，然后返回被删除的项目，其中index</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>todoItems<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215655.png" alt="img"></p><h2 id="8-4、Vue入门小结"><a href="#8-4、Vue入门小结" class="headerlink" title="8.4、Vue入门小结"></a>8.4、Vue入门小结</h2><p>核心：数据驱动，组件化</p><p>优点：借鉴了AngularJS的模块化开发和React的虚拟Dom，虚拟Dom就是把Demo操作放到内存中执行；</p><p>常用的属性：</p><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-for</li><li>v-on绑定事件，简写@</li><li>v-model数据双向绑定</li><li>v-bind给组件绑定参数，简写：</li></ul><p>组件化：</p><ul><li>组合组件slot插槽</li><li>组件内部绑定事件需要使用到this.$emit(“事件名”,参数);</li><li>计算属性的特色，缓存计算数据</li></ul><p>遵循SoC关注度分离原则，Vue是纯粹的视图框架，并不包含，比如Ajax之类的通信功能，为了解决通信问题，我们需要使用Axios框架做异步通信；</p><p>说明<br>Vue的开发都是要基于NodeJS，实际开发采用Vue-cli脚手架开发，vue-router路由，vuex做状态管理；Vue UI，界面我们一般使用ElementUI（饿了么出品），或者ICE（阿里巴巴出品）来快速搭建前端项目~~</p><p>官网：</p><ul><li><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">https://element.eleme.cn/#/zh-CN</a></li><li><a href="https://ice.work/" target="_blank" rel="noopener">https://ice.work/</a></li></ul><h1 id="九、第一个vue-cli项目"><a href="#九、第一个vue-cli项目" class="headerlink" title="九、第一个vue-cli项目"></a><strong>九、第一个vue-cli项目</strong></h1><h2 id="9-1、什么是vue-cli"><a href="#9-1、什么是vue-cli" class="headerlink" title="9.1、什么是vue-cli"></a>9.1、什么是vue-cli</h2><p>vue-cli官方提供的一个脚手架，用于快速生成一个vue的项目模板；<br>  预先定义好的目录结构及基础代码，就好比咱们在创建Maven项目时可以选择创建一个骨架项目，这个估计项目就是脚手架，我们的开发更加的快速；<br>  项目的功能</p><p>统一的目录结构<br>本地调试<br>热部署<br>单元测试<br>集成打包上线</p><h2 id="9-2、需要的环境"><a href="#9-2、需要的环境" class="headerlink" title="9.2、需要的环境"></a>9.2、需要的环境</h2><p>Node.js：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a><br>安装就是无脑的下一步就好，安装在自己的环境目录下<br>Git：<a href="https://git-scm.com/doenloads" target="_blank" rel="noopener">https://git-scm.com/doenloads</a><br>镜像：<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/git-for-windows/</a><br>确认nodejs安装成功：</p><p>cmd下输入node -v，查看是否能够正确打印出版本号即可！12.22.5<br>cmd下输入npm -v，查看是否能够正确打印出版本号即可！ 6.14.13<br>这个npm，就是一个软件包管理工具，就和linux下的apt软件安装差不多！</p><pre><code>// npm配置淘宝镜像npm config set registry https://registry.npm.taobao.org// 查看npm镜像是否配置成功npm config get registry// npm回复镜像npm config delete registernpm config edit// npm安装cnpm，使用cnpm来安装js库npm install -g cnpm --registry=https://registry.npm.taobao.orgnpm常用命令// 安装库npm  -g  install  包名  #  全局安装npm  install  #  根据package.json文件安装npm  install  包名  #  本地安装，在npm运行目录下安装npm  install  包名@1.x  #  安装指定版本// 卸载库npm  uninstall  包名// 查看安装库npm  ls</code></pre><p>安装的过程可能有点慢~，耐心等待！虽然安装了cnpm，但是尽量少用！<br>  安装的位置：<code>C:\Users\administrator\AppData\Roaming\npm</code></p><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215085.jpeg" alt="在这里插入图片描述"></p><p> 安装vue-cli</p><pre><code>npm install --global vue-cli-g#测试是否安装成功#查看可以基于哪些模板创建vue应用程序，通常我们选择webpackvue list</code></pre><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215096.png" alt="img"></p><h2 id="9-3、第一个vue-cli应用程序"><a href="#9-3、第一个vue-cli应用程序" class="headerlink" title="9.3、第一个vue-cli应用程序"></a>9.3、第一个vue-cli应用程序</h2><h3 id="1-创建一个Vue项目，"><a href="#1-创建一个Vue项目，" class="headerlink" title="1.创建一个Vue项目，"></a>1.创建一个Vue项目，</h3><p>我们随便建立一个空的文件夹在电脑上，我这里在D盘下新建一个目录</p><pre><code>cd /d F:\IJ\Vue</code></pre><h3 id="2-创建一个基于webpack模板的vue应用程序"><a href="#2-创建一个基于webpack模板的vue应用程序" class="headerlink" title="2.创建一个基于webpack模板的vue应用程序"></a>2.创建一个基于webpack模板的vue应用程序</h3><pre><code>#1、首先需要进入到对应的目录 cd /d F:\IJ\Vue#2、这里的myvue是顶日名称，可以根据自己的需求起名vue init webpack myvue</code></pre><p>一路都选择no即可；<br>  说明：</p><p>Project name：项目名称，默认回车即可<br>Project description：项目描述，默认回车即可<br>Author：项目作者，默认回车即可<br>Install vue-router：是否安装vue-router，选择n不安装（后期需要再手动添加）<br>Use ESLint to lint your code:是否使用ESLint做代码检查，选择n不安装（后期需要再手动添加)<br>Set up unit tests:单元测试相关，选择n不安装（后期需要再手动添加）<br>Setupe2etests with Nightwatch：单元测试相关，选择n不安装（后期需要再手动添加）<br>Should we run npm install for you after the,project has been created:创建完成后直接初始化，选择n，我们手动执行；运行结果！</p><pre><code>Project name myvue? Project description? Author? Vue build (Use arrow keys)? Vue build standalone（编译执行第一个）? Install vue-router? No? Use ESLint to lint your code? No? Set up unit tests No? Setup e2e tests with Nightwatch? No? Should we run `npm install` for you after the project has been created? (recommended) no</code></pre><p>（1） <code>: 初始化并运行 :</code></p><pre><code>:d myvue:npm installnpm run dev</code></pre><p>执行完成后，目录多了很多依赖</p><p>当出现问题时，可以查看提示进行处理如下</p><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417175409074-1773252474.png" alt="img"></p><h3 id="3、idea打开"><a href="#3、idea打开" class="headerlink" title="3、idea打开"></a>3、idea打开</h3><p> <img src="Vue.assets/image-20210819131644186.png" alt="image-20210819131644186"></p><p><img src="Vue.assets/image-20210819131741455.png" alt="image-20210819131741455"></p><blockquote><p><strong>设置npm</strong></p></blockquote><p><img src="Vue.assets/image-20210819131810548.png" alt="image-20210819131810548"></p><p><img src="Vue.assets/image-20210819131847385.png" alt="image-20210819131847385"></p><h1 id="十、webpack使用"><a href="#十、webpack使用" class="headerlink" title="十、webpack使用"></a><strong>十、webpack使用</strong></h1><h2 id="10-1、什么是Webpack"><a href="#10-1、什么是Webpack" class="headerlink" title="10.1、什么是Webpack"></a>10.1、什么是Webpack</h2><p>本质上， webpack是一个现代JavaScript应用程序的静态模块打包器(module bundler) 。当webpack处理应用程序时， 它会递归地构建一个依赖关系图(dependency graph) ， 其中包含应用程序需要的每个模块， 然后将所有这些模块打包成一个或多个bundle.<br>  Webpack是当下最热门的前端资源模块化管理和打包工具， 它可以将许多松散耦合的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分离，等到实际需要时再异步加载。通过loader转换， 任何形式的资源都可以当做模块， 比如Commons JS、AMD、ES 6、CSS、JSON、Coffee Script、LESS等；<br>  伴随着移动互联网的大潮， 当今越来越多的网站已经从网页模式进化到了WebApp模式。它们运行在现代浏览器里， 使用HTML 5、CSS 3、ES 6等新的技术来开发丰富的功能， 网页已经不仅仅是完成浏览器的基本需求； WebApp通常是一个SPA(单页面应用) ， 每一个视图通过异步的方式加载，这导致页面初始化和使用过程中会加载越来越多的JS代码，这给前端的开发流程和资源组织带来了巨大挑战。<br>  前端开发和其他开发工作的主要区别，首先是前端基于多语言、多层次的编码和组织工作，其次前端产品的交付是基于浏览器的，这些资源是通过增量加载的方式运行到浏览器端，如何在开发环境组织好这些碎片化的代码和资源，并且保证他们在浏览器端快速、优雅的加载和更新，就需要一个模块化系统，这个理想中的模块化系统是前端工程师多年来一直探索的难题。</p><h2 id="10-2、模块化的演进"><a href="#10-2、模块化的演进" class="headerlink" title="10.2、模块化的演进"></a>10.2、模块化的演进</h2><h3 id="Script标签"><a href="#Script标签" class="headerlink" title="Script标签"></a>Script标签</h3><pre class="line-numbers language-jsp"><code class="language-jsp">    <script src = "module1.js"></script>    <script src = "module2.js"></script>    <script src = "module3.js"></script><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的调用都是一个作用域。<br>  这种原始的加载方式暴露了一些显而易见的弊端：</p><p>全局作用域下容易造成变量冲突<br>文件只能按照<script>的书写顺序进行加载<br>开发人员必须主观解决模块和代码库的依赖关系<br>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪</p><h3 id="CommonsJS"><a href="#CommonsJS" class="headerlink" title="CommonsJS"></a>CommonsJS</h3><hr><p>服务器端的NodeJS遵循CommonsJS规范，该规范核心思想是允许模块通过require方法来同步加载所需依赖的其它模块，然后通过exports或module.exports来导出需要暴露的接口。</p><pre><code>require(&quot;module&quot;);require(&quot;../module.js&quot;);export.doStuff = function(){};module.exports = someValue;1234</code></pre><p>优点：</p><p>服务器端模块便于重用<br>NPM中已经有超过45万个可以使用的模块包<br>简单易用<br>缺点：</p><p>同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的<br>不能非阻塞的并行加载多个模块<br>实现：</p><p>服务端的NodeJS<br>•Browserify，浏览器端的CommonsJS实现，可以使用NPM的模块，但是编译打包后的文件体积较大<br>modules-webmake，类似Browserify，但不如Browserify灵活<br>wreq，Browserify的前身</p><h3 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a><strong>AMD</strong></h3><p>Asynchronous Module Definition规范其实主要一个主要接口define(id?,dependencies?,factory);它要在声明模块的时候指定所有的依赖dependencies，并且还要当做形参传到factory中，对于依赖的模块提前执行。</p><p>define("module",["dep1","dep2"],functian(d1,d2){<br>return someExportedValue;<br>});<br>require（["module","../file.js"],function(module，file){});</p><p>==优点==</p><p>适合在浏览器环境中异步加载模块<br>可以并行加载多个模块<br>缺点</p><p>提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不畅<br>不符合通用的模块化思维方式，是一种妥协的实现<br>实现</p><h3 id="RequireJS"><a href="#RequireJS" class="headerlink" title="RequireJS"></a><strong>RequireJS</strong></h3><p>curl<br>CMD<br>Commons Module Definition规范和AMD很相似，尽保持简单，并与CommonsJS和NodeJS的Modules规范保持了很大的兼容性。</p><pre><code>define(function(require,exports,module){var $=require(&quot;jquery&quot;);var Spinning = require(&quot;./spinning&quot;);exports.doSomething = ...;module.exports=...;});</code></pre><p>==优点：==</p><p>依赖就近，延迟执行<br>可以很容易在NodeJS中运行缺点<br>依赖SPM打包，模块的加载逻辑偏重<br>实现</p><p>Sea.js<br>coolie</p><h3 id="ES6模块"><a href="#ES6模块" class="headerlink" title="ES6模块"></a><strong>ES6模块</strong></h3><p>EcmaScript 6标准增加了JavaScript语言层面的模块体系定义。ES 6模块的设计思想， 是尽量静态化， 使编译时就能确定模块的依赖关系， 以及输入和输出的变量。Commons JS和AMD模块，都只能在运行时确定这些东西。</p><p>import "jquery"<br>export function doStuff(){}<br>module "localModule"{}</p><p>==优点==</p><p>容易进行静态分析<br>面向未来的Ecma Script标准<br>缺点</p><p>原生浏览器端还没有实现该标准<br>全新的命令，新版的Node JS才支持<br>实现</p><p>Babel<br>大家期望的模块<br>  系统可以兼容多种模块风格， 尽量可以利用已有的代码， 不仅仅只是JavaScript模块化， 还有CSS、图片、字体等资源也需要模块化。</p><h2 id="10-3、安装Webpack"><a href="#10-3、安装Webpack" class="headerlink" title="10.3、安装Webpack"></a>10.3、安装Webpack</h2><p>WebPack是一款模块加载器兼打包工具， 它能把各种资源， 如JS、JSX、ES 6、SASS、LESS、图片等都作为模块来处理和使用。</p><pre><code>npm install webpack -gnpm install webpack-cli -g</code></pre><p>测试安装成功</p><ul><li><blockquote><p>webpack -v</p></blockquote></li><li><blockquote><p>webpack-cli -v</p></blockquote></li></ul><p><img src="Vue.assets/image-20210819152313092.png" alt="image-20210819152313092"></p><p>配置<br>创建 webpack.config.js配置文件</p><ul><li>entry：入口文件， 指定Web Pack用哪个文件作为项目的入口</li><li>output：输出， 指定WebPack把处理完成的文件放置到指定路径</li><li>module：模块， 用于处理各种类型的文件</li><li>plugins：插件， 如：热更新、代码重用等</li><li>resolve：设置路径指向</li><li>watch：监听， 用于设置文件改动后直接打包</li></ul><p>直接运行<code>webpack</code>命令打包</p><h2 id="10-4、使用webpack"><a href="#10-4、使用webpack" class="headerlink" title="10.4、使用webpack"></a>10.4、使用webpack</h2><ol><li>创建项目</li><li>创建一个名为modules的目录，用于放置JS模块等资源文件</li><li>在modules下创建模块文件，如hello.js，用于编写JS模块相关代码</li></ol><pre><code>    //暴露一个方法：sayHi    exports.sayHi = function(){        document.write(&quot;&lt;div&gt;Hello Webpack&lt;/div&gt;&quot;);    }</code></pre><ol><li><p>在modules下创建一个名为main.js的入口文件，用于打包时设置entry属性</p></li><li><pre><code>//require 导入一个模块，就可以调用这个模块中的方法了var hello = require(&quot;./hello&quot;);hello.sayHi();</code></pre><ol><li>在项目目录下创建==webpack.config.js==配置文件，使用webpack命令打包(要不然scr找不到)</li></ol></li></ol><pre><code>module.exports = {    entry:&quot;./modules/main.js&quot;,    output:{        filename:&quot;./js/bundle.js&quot;    }}</code></pre><ol><li>在项目目录下创建HTML页面，如index.html，导入webpack打包后的JS文件</li></ol><pre><code>    &lt;!doctype html&gt;    &lt;html lang=&quot;en&quot;&gt;        &lt;head&gt;            &lt;meta charset=&quot;UTF-8&quot;&gt;            &lt;title&gt;狂神说Java&lt;/title&gt;        &lt;/head&gt;        &lt;body&gt;            &lt;script src=&quot;dist/js/bundle.js&quot;&gt;&lt;/script&gt;        &lt;/body&gt;    &lt;/html&gt;</code></pre><h3 id="执行、报错"><a href="#执行、报错" class="headerlink" title="执行、报错"></a>执行、报错</h3><ol><li><p>在IDEA控制台中直接执行webpack；如果失败的话，就使用管理员权限运行即可！==webpack.config.js==</p></li><li><p>The 'mode' option has not been set, webpack will fallback to 'production' for this value.<br>Set 'mode' option to 'development' or 'production' to enable defaults for each environment.<br>You can also set it to 'none' to disable any default behavior. Learn more: <a href="https://webpack.js.org/configuration/mode/">https://webpack.js.org/configuration/mode/</a></p><pre><code>添加   mode: &#39;none&#39;,</code></pre></li><li><p>运行HTML看效果</p></li></ol><pre><code># 参数--watch 用于监听变化webpack --watch</code></pre><h1 id="十一、vue-router路由"><a href="#十一、vue-router路由" class="headerlink" title="十一、vue-router路由"></a>十一、vue-router路由</h1><p>学习的时候，尽量的打开官方的文档</p><p>Vue Router是Vue.js官方的路由管理器。它和Vue.js的核心深度集成， 让构建单页面应用变得易如反掌。包含的功能有：</p><p>嵌套的路由/视图表<br>模块化的、基于组件的路由配置<br>路由参数、查询、通配符<br>基于Vue js过渡系统的视图过渡效果<br>细粒度的导航控制<br>带有自动激活的CSS class的链接<br>HTML5 历史模式或hash模式， 在IE 9中自动降级<br>自定义的滚动行为</p><h2 id="11-2、安装"><a href="#11-2、安装" class="headerlink" title="11.2、安装"></a>11.2、安装</h2><p>基于第一个<code>vue-cli</code>进行测试学习； 先查看node modules中是否存在vue-router<br>  vue-router是一个插件包， 所以我们还是需要用n pm/cn pm来进行安装的。打开命令行工具，进入你的项目目录，输入下面命令。</p><pre><code>npm install vue-router --save-dev    --save-dev保存到当前文件</code></pre><p>如果在一个模块化工程中使用它，必须要通过Vue.use()明确地安装路由功能：</p><pre><code>import Vue from &#39;vue&#39;import VueRouter from &#39;vue-router&#39;Vue.use(VueRouter);</code></pre><h2 id="11-3、测试"><a href="#11-3、测试" class="headerlink" title="11.3、测试"></a>11.3、测试</h2><p>1、先删除没有用的东西<br>2、<code>components</code> 目录下存放我们自己编写的组件<br>3、定义一个<code>Content.vue</code> 的组件</p><pre><code>&lt;template&gt;    &lt;div&gt;        &lt;h1&gt;内容页&lt;/h1&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {        name:&quot;Content&quot;    }&lt;/script&gt;</code></pre><p><code>Main.vue</code>组件</p><pre><code>    &lt;template&gt;    &lt;div&gt;        &lt;h1&gt;首页&lt;/h1&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {        name:&quot;Main&quot;    }&lt;/script&gt;</code></pre><p>4、安装路由，在src目录下，新建一个文件夹：<code>router</code>，专门存放路由，配置路由index.js，如下</p><pre><code>import Vue from&#39;vue&#39;//导入路由插件import Router from &#39;vue-router&#39;//导入上面定义的组件import Content from &#39;../components/Content&#39;import Main from &#39;../components/Main&#39;//安装路由Vue.use(Router) ;//配置路由export default new Router({    routes:[        {            //路由路径            path:&#39;/content&#39;,            //路由名称            name:&#39;content&#39;,            //跳转到组件            component:Content            },{            //路由路径            path:&#39;/main&#39;,            //路由名称            name:&#39;main&#39;,            //跳转到组件            component:Main            }        ]    });</code></pre><p>5、在<code>main.js</code>中配置路由</p><pre><code>import Vue from &#39;vue&#39;import App from &#39;./App&#39;//导入上面创建的路由配置目录import router from &#39;./router&#39;//自动扫描里面的路由配置//来关闭生产模式下给出的提示Vue.config.productionTip = false;new Vue({    el:&quot;#app&quot;,    //配置路由    router,    components:{App},    template:&#39;&lt;App/&gt;&#39;});</code></pre><p>6、在<code>App.vue</code>中使用路由</p><pre><code>&lt;template&gt;    &lt;div id=&quot;app&quot;&gt;        &lt;!--            router-link：默认会被渲染成一个&lt;a&gt;标签，to属性为指定链接            router-view：用于渲染路由匹配到的组件        --&gt;        &lt;router-link to=&quot;/&quot;&gt;首页&lt;/router-link&gt;        &lt;router-link to=&quot;/content&quot;&gt;内容&lt;/router-link&gt;        &lt;router-view&gt;&lt;/router-view&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default{        name:&#39;App&#39;    }&lt;/script&gt;&lt;style&gt;&lt;/style&gt;</code></pre><h1 id="十二、实战快速上手"><a href="#十二、实战快速上手" class="headerlink" title="十二、实战快速上手"></a>十二、实战快速上手</h1><p>我们采用实战教学模式并结合ElementUI组件库，将所需知识点应用到实际中，以最快速度带领大家掌握Vue的使用；</p><h2 id="12-1、创建工程"><a href="#12-1、创建工程" class="headerlink" title="12.1、创建工程"></a>12.1、创建工程</h2><p>注意：命令行都要使用管理员模式运行<br>1、创建一个名为hello-vue的工程<code>vue init webpack hello-vue</code><br>2、安装依赖， 我们需要安装vue-router、element-ui、sass-loader和node-sass四个插件</p><pre><code>#进入工程目录cd hello-vue#安装vue-routern npm install vue-router --save-dev#安装element-uinpm i element-ui -S#安装依赖npm install# 安装SASS加载器（两个文件）//sass-loader依赖于node-sass  cnpm install sass-loader node-sass --save-dev#启功测试npm run dev</code></pre><p>3、Npm命令解释：</p><p>npm install moduleName：安装模块到项目目录下<br>npm install -g moduleName：-g的意思是将模块安装到全局，具体安装到磁盘哪个位置要看npm config prefix的位置<br>npm install -save moduleName：–save的意思是将模块安装到项目目录下， 并在package文件的dependencies节点写入依赖，-S为该命令的缩写<br>npm install -save-dev moduleName:–save-dev的意思是将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖，-D为该命令的缩写</p><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><blockquote><ol><li><p>v-on:click=onSubmit(loginForm),不要动，不要修改，与el-form ref=loginForm 两个保持一致；</p></li><li><p>methods中添加handleClose: function () { console.log(Handle Close，空函数); }；</p></li><li><p>登陆FORM外嵌套el-card class=box-card/ek-card,样式表这一句就行style scoped.box-card {width: 480px;margin: auto;}/style；</p></li><li><p>因为样式出错，可以改node-sass版本为4.14.1<br> 错误描述：<br> ERROR Failed to compile with 1 errors<br> error in ./src/views/Login.vue<br> Module build failed: Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.<br> 【错误：节点Sass版本5.0.0与^4.0.0不兼容。】</p><p>错误分析：<br>node-sass版本不兼容【当前版本过高/过低】</p><p>错误解决：</p><ol><li><p>卸载当前node-sass版本<br>npm uninstall node-sass</p></li><li><p>安装适合版本【个人推荐4.14.1版本】<br>npm install node-sass@版本号 </p></li><li><p>element-ui没有这个需要重新下载       cnpm i element-ui -S</p></li></ol></li></ol></blockquote><h2 id="12-2、创建登录页面"><a href="#12-2、创建登录页面" class="headerlink" title="12.2、创建登录页面"></a>12.2、创建登录页面</h2><p>把没有用的初始化东西删掉！<br>  在源码目录中创建如下结构：</p><ul><li><ul><li>assets：用于存放资源文件</li><li>components：用于存放Vue功能组件</li><li>views：用于存放Vue视图组件</li><li>router：用于存放vue-router配置</li></ul></li></ul><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223052365-1192170115.png" alt="img"></p><p> 创建首页视图，在views目录下创建一个名为Main.vue的视图组件：</p><pre class="line-numbers language-vue"><code class="language-vue"><template>    <div>首页</div></template><script>    export default {            name:"Main"    }</script><style scoped></style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建登录页视图在views目录下创建名为Login.vue的视图组件，其中el-*的元素为ElementUI组件；</p><pre class="line-numbers language-vue"><code class="language-vue"><template>  <div>    <el-form ref="loginForm" :model="form" :rules="rules" label-width="80px" class="login-box">      <h3 class="login-title">欢迎登录</h3>      <el-form-item label="账号" prop="username">        <el-input type="text" placeholder="请输入账号" v-model="form.username"/>      </el-form-item>      <el-form-item label="密码" prop="password">        <el-input type="password" placeholder="请输入密码" v-model="form.password"/>      </el-form-item>      <el-form-item>          <el-button type="primary" v-on:click="onSubmit('loginForm')">登录</el-button>      </el-form-item>    </el-form>    <el-dialog title="温馨提示" :visible.sync="dialogVisible" width="30%" :before-close="handleClose">      <span>请输入账号和密码</span>      <span slot="footer" class="dialog-footer">          <el-button type="primary" @click="dialogVisible = false">确定</el-button>        </span>    </el-dialog>  </div></template><script>export default {  name: "Login",  data() {    return {      form: {        username: '',        password: ''      },      //表单验证，需要在 el-form-item 元素中增加prop属性      rules: {        username: [          {required: true, message: "账号不可为空", trigger: "blur"}        ],        password: [          {required: true, message: "密码不可为空", trigger: "blur"}        ]      },      //对话框显示和隐藏      dialogVisible: false    }  },  methods: {    handleClose: function () {      console.log("Handle Close，空函数");    },    onSubmit(formName) {      //为表单绑定验证功能        this.$refs [formName].validate((valid) => {          if (valid) {          //使用vue-router路由到指定界面，该方式称为编程式导航          this.$router.push('/main');        } else {          this.dialogVisible = true;          return false;        }      });    }  }}</script><style lang="scss" scoped>.login-box {  border: 1px solid #DCDFE6;  width: 350px;  margin: 180px auto;  padding: 35px 35px 15px 35px;  border-radius: 5px;  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  box-shadow: 0 0 25px #909399;}.login-title {  text-align: center;  margin: 0 auto 40px auto;  color: #303133;}</style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建路由，在router目录下创建一个名为<code>index.js</code>的vue-router路由配置文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//导入vue</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> '<span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">"loginForm"</span> <span class="token punctuation">:</span>model<span class="token operator">=</span><span class="token string">"form"</span> <span class="token punctuation">:</span>rules<span class="token operator">=</span><span class="token string">"rules"</span> label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"80px"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"login-box"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"login-title"</span><span class="token operator">></span>欢迎登录<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"账号"</span> prop<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入账号"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.username"</span><span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">"密码"</span> prop<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>input type<span class="token operator">=</span><span class="token string">"password"</span> placeholder<span class="token operator">=</span><span class="token string">"请输入密码"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"form.password"</span><span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> v<span class="token operator">-</span>on<span class="token punctuation">:</span>click<span class="token operator">=</span><span class="token string">"onSubmit('loginForm')"</span><span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"温馨提示"</span> <span class="token punctuation">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"30%"</span> <span class="token punctuation">:</span>before<span class="token operator">-</span>close<span class="token operator">=</span><span class="token string">"handleClose"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span<span class="token operator">></span>请输入账号和密码<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">></span>确定<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">"Login"</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      form<span class="token punctuation">:</span> <span class="token punctuation">{</span>        username<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        password<span class="token punctuation">:</span> <span class="token string">''</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//表单验证，需要在 el-form-item 元素中增加prop属性</span>      rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>        username<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">"账号不可为空"</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">"blur"</span><span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        password<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">"密码不可为空"</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">"blur"</span><span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//对话框显示和隐藏</span>      dialogVisible<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    handleClose<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Handle Close，空函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">onSubmit</span><span class="token punctuation">(</span>formName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//为表单绑定验证功能</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs <span class="token punctuation">[</span>formName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//使用vue-router路由到指定界面，该方式称为编程式导航</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/main'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>dialogVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span><span class="token punctuation">.</span>login<span class="token operator">-</span>box <span class="token punctuation">{</span>  border<span class="token punctuation">:</span> 1px solid #DCDFE6<span class="token punctuation">;</span>  width<span class="token punctuation">:</span> 350px<span class="token punctuation">;</span>  margin<span class="token punctuation">:</span> 180px auto<span class="token punctuation">;</span>  padding<span class="token punctuation">:</span> 35px 35px 15px 35px<span class="token punctuation">;</span>  border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token operator">-</span>webkit<span class="token operator">-</span>border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token operator">-</span>moz<span class="token operator">-</span>border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  box<span class="token operator">-</span>shadow<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> 25px #<span class="token number">909399</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>login<span class="token operator">-</span>title <span class="token punctuation">{</span>  text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>  margin<span class="token punctuation">:</span> <span class="token number">0</span> auto 40px auto<span class="token punctuation">;</span>  color<span class="token punctuation">:</span> #<span class="token number">303133</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>'<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//导入组件</span><span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">"../views/Main"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">"../views/Login"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//导出</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//登录页</span>      path<span class="token punctuation">:</span> <span class="token string">'/main'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Main    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//首页</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Login    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>APP.vue</p><pre class="line-numbers language-vue"><code class="language-vue"><template>  <div id="app">    <router-view></router-view>  </div></template><script>export default {  name: 'App',}</script><style>#app {  font-family: 'Avenir', Helvetica, Arial, sans-serif;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;  text-align: center;  color: #2c3e50;  margin-top: 60px;}</style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// The Vue build version to load with the `import` command</span><span class="token comment" spellcheck="true">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"./router"</span><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token keyword">import</span> <span class="token string">'element-ui/lib/theme-chalk/index.css'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span><span class="token comment" spellcheck="true">/* eslint-disable no-new */</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  router<span class="token punctuation">,</span>  render<span class="token punctuation">:</span>h<span class="token operator">=</span><span class="token operator">></span><span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：在浏览器打开 <a href="http://localhost:8080/#/login">http://localhost:8080/#/login</a><br>如果出现错误: 可能是因为sass-loader的版本过高导致的编译错误，当前最高版本是8.0.2，需要退回到7.3.1 ；<br>去package.json文件里面的 "sass-loader"的版本更换成7.3.1，然后重新cnpm install就可以了；</p><h2 id="12-3、路由嵌套"><a href="#12-3、路由嵌套" class="headerlink" title="12.3、路由嵌套"></a>12.3、路由嵌套</h2><p>嵌套路由又称子路由，在实际应用中，通常由多层嵌套的组件组合而成。<br>demo<br>1、 创建用户信息组件，在 views/user 目录下创建一个名为 Profile.vue 的视图组件；<br>Profile.vue</p><pre><code>&lt;template&gt;  &lt;h1&gt;个人信息&lt;/h1&gt;&lt;/template&gt;&lt;script&gt;  export default {    name: &quot;UserProfile&quot;  }&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt;</code></pre><p>2、在用户列表组件在 views/user 目录下创建一个名为 List.vue 的视图组件；<br>List.vue</p><pre><code>&lt;template&gt;  &lt;h1&gt;用户列表&lt;/h1&gt;&lt;/template&gt;&lt;script&gt;  export default {    name: &quot;UserList&quot;  }&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt;</code></pre><p>3、 修改首页视图，我们修改 Main.vue 视图组件，此处使用了 ElementUI 布局容器组件，代码如下：<br>Main.vue</p><pre><code>&lt;template&gt;    &lt;div&gt;      &lt;el-container&gt;        &lt;el-aside width=&quot;200px&quot;&gt;          &lt;el-menu :default-openeds=&quot;[&#39;1&#39;]&quot;&gt;            &lt;el-submenu index=&quot;1&quot;&gt;              &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-caret-right&quot;&gt;&lt;/i&gt;用户管理&lt;/template&gt;              &lt;el-menu-item-group&gt;                &lt;el-menu-item index=&quot;1-1&quot;&gt;                &lt;!--插入的地方--&gt;                  &lt;router-link to=&quot;/user/profile&quot;&gt;个人信息&lt;/router-link&gt;                &lt;/el-menu-item&gt;                &lt;el-menu-item index=&quot;1-2&quot;&gt;                &lt;!--插入的地方--&gt;                  &lt;router-link to=&quot;/user/list&quot;&gt;用户列表&lt;/router-link&gt;                &lt;/el-menu-item&gt;              &lt;/el-menu-item-group&gt;            &lt;/el-submenu&gt;            &lt;el-submenu index=&quot;2&quot;&gt;              &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-caret-right&quot;&gt;&lt;/i&gt;内容管理&lt;/template&gt;              &lt;el-menu-item-group&gt;                &lt;el-menu-item index=&quot;2-1&quot;&gt;分类管理&lt;/el-menu-item&gt;                &lt;el-menu-item index=&quot;2-2&quot;&gt;内容列表&lt;/el-menu-item&gt;              &lt;/el-menu-item-group&gt;            &lt;/el-submenu&gt;          &lt;/el-menu&gt;        &lt;/el-aside&gt;        &lt;el-container&gt;          &lt;el-header style=&quot;text-align: right; font-size: 12px&quot;&gt;            &lt;el-dropdown&gt;              &lt;i class=&quot;el-icon-setting&quot; style=&quot;margin-right: 15px&quot;&gt;&lt;/i&gt;              &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;                &lt;el-dropdown-item&gt;个人信息&lt;/el-dropdown-item&gt;                &lt;el-dropdown-item&gt;退出登录&lt;/el-dropdown-item&gt;              &lt;/el-dropdown-menu&gt;            &lt;/el-dropdown&gt;          &lt;/el-header&gt;          &lt;el-main&gt;          &lt;!--在这里展示视图--&gt;            &lt;router-view /&gt;          &lt;/el-main&gt;        &lt;/el-container&gt;      &lt;/el-container&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {        name: &quot;Main&quot;    }&lt;/script&gt;&lt;style scoped lang=&quot;scss&quot;&gt;  .el-header {    background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;  }&lt;/style&gt;</code></pre><p>4、 配置嵌套路由修改 router 目录下的 index.js 路由配置文件，使用children放入main中写入子模块，代码如下<br>index.js</p><pre><code>//导入vueimport Vue from &#39;vue&#39;;import VueRouter from &#39;vue-router&#39;;//导入组件import Main from &quot;../views/Main&quot;;import Login from &quot;../views/Login&quot;;//导入子模块import UserList from &quot;../views/user/List&quot;;import UserProfile from &quot;../views/user/Profile&quot;;//使用Vue.use(VueRouter);//导出export default new VueRouter({  routes: [    {      //登录页      path: &#39;/main&#39;,      component: Main,      //  写入子模块      children: [        {          path: &#39;/user/profile&#39;,          component: UserProfile,        }, {          path: &#39;/user/list&#39;,          component: UserList,        },      ]    },    //首页    {      path: &#39;/login&#39;,      component: Login    },  ]})</code></pre><p>5、 路由嵌套实战效果图</p><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215268.png" alt="img"></p><p>图 路由嵌套效果图</p><h2 id="12-4、参数传递"><a href="#12-4、参数传递" class="headerlink" title="12.4、参数传递"></a>12.4、参数传递</h2><p>这里演示如果请求带有参数该怎么传递</p><p>==前端传-->路由接收-->视图展示==</p><p>demo<br> 用的还是上述例子的代码 修改一些代码 这里不放重复的代码了<br>第一种取值方式<br>1、 修改路由配置, 主要是router下的index.js中的 path 属性中增加了 :id 这样的占位符</p><pre><code>{    path: &#39;/user/profile/:id&#39;,     name:&#39;UserProfile&#39;,     component: UserProfile}</code></pre><p>2、传递参数<br> 此时我们在Main.vue中的route-link位置处 to 改为了 :to，是为了将这一属性当成对象使用，==注意== router-link 中的 name 属性名称 一定要和 路由中的 name 属性名称 匹配，因为这样 Vue 才能找到对应的路由路径;</p><pre><code>无参&lt;router-link to=&quot;/user/profile&quot;&gt;个人信息&lt;/router-link&gt;--&gt;有参&lt;!--name是组件的名字 params是传的参数如果要传参数的话就需要用v:bind:来绑定--&gt;&lt;router-link :to=&quot;{name:&#39;UserProfile&#39;,params:{id:1}}&quot;&gt;个人信息&lt;/router-link&gt;</code></pre><pre><code>&lt;!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--&gt;&lt;router-link :to=&quot;{name:&#39;UserProfile&#39;,params:{id:1}}&quot;&gt;个人信息&lt;/router-link&gt;</code></pre><p>3、在要展示的组件Profile.vue中接收参数 使用 来接收<br>Profile.vue 部分代码</p><pre class="line-numbers language-vue"><code class="language-vue"><template>  <!--  所有的元素必须在根节点下-->  <div>    <h1>个人信息</h1>    {{$route.params.id}}  </div></template><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二种取值方式 使用props 减少耦合<br>1、修改路由配置 , 主要在router下的index.js中的路由属性中增加了 props: true 属性</p><pre><code>{    path: &#39;/user/profile/:id&#39;,     name:&#39;UserProfile&#39;,     component: UserProfile,     props: true}</code></pre><p>2、传递参数和之前一样 在Main.vue中修改route-link地址</p><pre><code>&lt;!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--&gt;&lt;router-link :to=&quot;{name:&#39;UserProfile&#39;,params:{id:1}}&quot;&gt;个人信息&lt;/router-link&gt;</code></pre><p>3、在Profile.vue接收参数为目标组件增加 props 属性<br>Profile.vue</p><pre><code>&lt;template&gt;  &lt;div&gt;    个人信息    {{ id }}  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {      props: [&#39;id&#39;],      name: &quot;UserProfile&quot;    }&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt;</code></pre><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223533421-1238139188.png" alt="img"></p><h2 id="12-5、组件重定向"><a href="#12-5、组件重定向" class="headerlink" title="12.5、组件重定向"></a>12.5、组件重定向</h2><p>重定向的意思大家都明白，但 Vue 中的重定向是作用在路径不同但组件相同的情况下，比如：<br>在router下面index.js的配置</p><pre><code>{  path: &#39;/main&#39;,  name: &#39;Main&#39;,  component: Main},{  path: &#39;/goHome&#39;,  redirect: &#39;/main&#39;}</code></pre><p>说明：这里定义了两个路径，一个是 /main ，一个是 /goHome，其中 /goHome 重定向到了 /main 路径，由此可以看出重定向不需要定义组件；</p><p>使用的话，只需要在Main.vue设置对应路径即可；</p><pre><code>&lt;el-menu-item index=&quot;1-3&quot;&gt;    &lt;router-link to=&quot;/goHome&quot;&gt;回到首页&lt;/router-link&gt;&lt;/el-menu-item&gt;</code></pre><h2 id="12-6、路由模式与-404"><a href="#12-6、路由模式与-404" class="headerlink" title="12.6、路由模式与 404"></a>12.6、路由模式与 404</h2><p>路由模式有两种</p><ul><li>hash：路径带 # 符号，如 <a href="http://localhost/#/login">http://localhost/#/login</a></li><li>history：路径不带 # 符号，如 <a href="http://localhost/login">http://localhost/login</a></li></ul><p>修改路由配置，代码如下：</p><pre><code>export default new Router({  mode: &#39;history&#39;,  routes: [  ]});</code></pre><p>404 demo<br>1.创建一个NotFound.vue视图组件<br>NotFound.vue</p><pre><code>&lt;template&gt;    &lt;div&gt;      &lt;h1&gt;404,你的页面走丢了&lt;/h1&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {        name: &quot;NotFound&quot;    }&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt;</code></pre><p>2.修改路由配置index.js</p><pre><code>import NotFound from &#39;../views/NotFound&#39;{   path: &#39;*&#39;,   component: NotFound}</code></pre><p>3.效果图</p><p><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215074.png" alt="img"></p><p>图 404效果图</p><p>路由钩子与异步请求</p><p>beforeRouteEnter：在进入路由前执行<br>beforeRouteLeave：在离开路由前执行</p><p>在Profile.vue中写</p><pre><code>  export default {    name: &quot;UserProfile&quot;,    beforeRouteEnter: (to, from, next) =&gt; {      console.log(&quot;准备进入个人信息页&quot;);      next();    },    beforeRouteLeave: (to, from, next) =&gt; {      console.log(&quot;准备离开个人信息页&quot;);      next();    }  }</code></pre><p>参数说明：<br>to：路由将要跳转的路径信息<br>from：路径跳转前的路径信息<br>next：路由的控制参数<br>next() 跳入下一个页面<br>next(’/path’) 改变路由的跳转方向，使其跳到另一个路由<br>next(false) 返回原来的页面<br>next((vm)=>{}) 仅在 beforeRouteEnter 中可用，vm 是组件实例</p><p>在钩子函数中使用异步请求</p><p>1、安装 Axios</p><p>cnpm install --save vue-axios</p><p>2、main.js引用 Axios</p><pre><code>import axios from &#39;axios&#39;import VueAxios from &#39;vue-axios&#39;Vue.use(VueAxios, axios)</code></pre><p>3、准备数据 ： 只有我们的 static 目录下的文件是可以被访问到的，所以我们就把静态文件放入该目录下。<br>数据和之前用的json数据一样 需要的去上述axios例子里</p><pre><code>// 静态数据存放的位置static/mock/data.json4.在 beforeRouteEnter 中进行异步请求Profile.vue</code></pre><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//第二种取值方式</span>    <span class="token comment" spellcheck="true">// props:['id'],</span>    name<span class="token punctuation">:</span> <span class="token string">"UserProfile"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//钩子函数 过滤器</span>    beforeRouteEnter<span class="token punctuation">:</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//加载数据</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"进入路由之前"</span><span class="token punctuation">)</span>      <span class="token function">next</span><span class="token punctuation">(</span>vm <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//进入路由之前执行getData方法（本地方法）</span>        vm<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    beforeRouteLeave<span class="token punctuation">:</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"离开路由之前"</span><span class="token punctuation">)</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//axios</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      getData<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          method<span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>          url<span class="token punctuation">:</span> <span class="token string">'http://localhost:8080/static/mock/data.json'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.路由钩子和axios结合图<br><img src="https://gitee.com/huan122/huan/raw/master/img/202108232215338.png" alt="在这里插入图片描述"></p><pre><code>&lt;template&gt;  &lt;!--  所有的元素必须在根节点下--&gt;  &lt;div id=&quot;hh&quot;&gt;    &lt;h1&gt;个人信息&lt;/h1&gt;    {{$route.params.id}}  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default {  name: &quot;UserProfile&quot;,  beforeRouteEnter: (to, from, next) =&gt; {    console.log(&quot;准备进入个人信息页&quot;);    next(vm =&gt; {      //进入路由之前执行getData方法      vm.getDate()    });  },  beforeRouteLeave: (to, from, next) =&gt; {    console.log(&quot;准备离开个人信息页&quot;);    next();  },  methods:{    getDate:function() {      this.axios({        method:&#39;get&#39;,        url:&#39;http://localhost:8080/static/mock/data.json&#39;,      }).then(function (response) {        console.log(response)      })    }  }}&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt;&lt;style&gt;/*左对齐*/#hh{text-align:left;}&lt;/style&gt;</code></pre></script></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 安装 CentOS 8.1 完整教程 </title>
      <link href="/vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng.html"/>
      <url>/vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng.html</url>
      
        <content type="html"><![CDATA[<p>我使用的<font color="red" size="3">VMware</font>版本：<font color="red" size="3">VMware 15 Pro</font></p><p>镜像：<font color="red" size="3">CentOS 8.1</font></p><p><strong>电脑配置需求：</strong></p><ul><li><font color="red" size="3">2 GB</font> 及以上的<font color="red" size="3">RAM</font>（官方推荐至少<font color="red" size="3">4G</font>）</li><li><font color="red" size="3">2 GHz </font>或以上的 <font color="red" size="3">CPU</font></li><li><font color="red" size="3">64 </font>位 <font color="red" size="3">x86</font> 架构</li><li><font color="red" size="3">20 GB </font>及以上硬盘空间</li></ul><p><strong>关于CentOS 8.1</strong></p><ul><li>基于Linux 4.18</li><li>提供 PHP 7.2、Python 3.6、Ansible 2.8、VIM 8.0 和 Squid 4</li><li>使用网络管理器（nmcli 和 nmtui）进行网络配置，移除了网络脚本<br>通过 BaseOS 和应用流(AppStream)仓库发布.</li><li>AppStream 是对传统rpm格式的全新扩展，为一个组件同时提供多个主要版本</li><li>YUM 包管理器基于 DNF 技术，提供模块化内容支持，增强了性能，并且提供了设计良好的API用于与其他工具集成</li><li>RHEL 8提供了版本控制工具: Git 2.18, Mercurial 4.8,和 Subversion 1.10.</li></ul><blockquote><p>内核实时修补；称为 FRR 的新路由协议堆栈（支持多种 IPv4 和 IPv6 路由协议）；伯克利数据包筛选器（eBPF）的扩展版本，可帮助系统管理员解决复杂的网络问题；支持在使用设备时对 LUKS2 中的块设备进行重新加密；此外，还提供了一种用于为容器生成 SELinux 策略的新工具 udica.</p></blockquote><p><font color="red" size="3">CentOS 8</font>系列增加了许多新特性，<font color="red" size="3">CentOS 8.1</font>相当于它的第二个发行版本，我这里就不列出了，具体可以看官方文档：</p><p><a href="https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS8.1905#A.2BbpBO43gB-" target="_blank" rel="noopener">CentOS 官网文档手册</a></p><p><a href="https://www.cnblogs.com/RXDXB/p/11660287.html" target="_blank" rel="noopener">Centos8与Centos7区别参照redhat）</a></p><h1 id="一、准备过程"><a href="#一、准备过程" class="headerlink" title="一、准备过程"></a>一、准备过程</h1><p>目前比较流行的两款虚拟机软件 <font color="red" size="3">VMware</font> 、<font color="red" size="3">VirtualBox</font>，<font color="red" size="3">VirtualBox</font>安装<font color="red" size="3">CentOS 8</font>系列目前还有很多<font color="red" size="3">Bug</font>，推荐使用<font color="red" size="3">VMware</font>。</p><p>1.安装<font color="red" size="3">VMware</font></p><p>如果你还没有安装虚拟机，进入<a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html" title="VMware" target="_blank" rel="noopener">VMware官网</a>下载相应版本安装即可：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/01.png" alt></p><p>官网下载过程可能有点慢，这里安装过程我就不赘述了。</p><p>2.下载<font color="red" size="3">CentOS 8.1</font>镜像资源</p><p>进入<a href="http://mirrors.huaweicloud.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso" title="CentOS" target="_blank" rel="noopener">CentOS官网</a>下载<font color="red" size="3">CentOS 8.1</font>镜像，我这里给的是在华为云的，下载速度还是可以。</p><h1 id="二、创建虚拟机"><a href="#二、创建虚拟机" class="headerlink" title="二、创建虚拟机"></a>二、创建虚拟机</h1><p>1.打开<font color="red" size="3">VMware</font>，点击创建新的虚拟机：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/02.png" alt></p><p>2.点击自定义（高级）：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/03.png" alt></p><p>3.这一步直接默认就可以：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/04.png" alt></p><p>4.选择稍后安装操作系统：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/05.png" alt></p><p>5.选择<font color="red" size="3">Linux</font>，版本选择<font color="red" size="3">Linux 4 ×64位</font>，因为<font color="red" size="3">CentOS 8</font>系列基于<font color="red" size="3"> Linux</font> 内核<font color="red" size="3"> 4.18</font>：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/06.png" alt></p><p>6.虚拟机名称随便，安装位置看自己电脑配置吧，建议安装在<font color="red" size="3">D</font>盘：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/07.png" alt></p><p>7.处理器数量根据自己电脑来配置，反正不够后面可以更改，要安装图形界面的话可以填大一点，新手就这个配置也可以了：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/08.png" alt></p><p>8.内存大小根据自己电脑适当配置，我的电脑内存<font color="red" size="3">16G</font>，所以我给它分配<font color="red" size="3">4G</font>，要安装图形界面的话可以填大一点：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/09.png" alt></p><p>9.设置虚拟机网络连接模式（<font color="red" size="3">NAT</font>）：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/10.png" alt></p><p><strong>关于网络连接模式说明：</strong></p><ul><li><p>桥接：选择桥接模式的话虚拟机和宿主机在网络上就是平级的关系，相当于连接在同一交换机上。</p></li><li><p>NAT：NAT模式就是虚拟机要联网得先通过宿主机才能和外面进行通信。</p></li><li><p>仅主机：虚拟机与宿主机直接连起来</p></li></ul><p>10.选择<font color="red" size="3">I/O</font>控制器类型，然后下一步：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/11.png" alt></p><p>11.选择磁盘类型：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/12.png" alt></p><p>12.选择创建新虚拟磁盘，然后下一步：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/13.png" alt></p><p>13.根据自己的需要分配磁盘容量，勾选将虚拟磁盘拆分成多个文件（方便以后将虚拟机拷贝到设备），然后下一步：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/14.png" alt></p><p>14.根据自己需要指定磁盘文件存储位置，我放在D盘：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/15.png" alt></p><p>15.到这里虚拟机就创建完成了，可以点击自定义硬件更改配置，点击完成创建成功：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/16.png" alt></p><h1 id="三、安装CentOS-8-1"><a href="#三、安装CentOS-8-1" class="headerlink" title="三、安装CentOS 8.1"></a>三、安装CentOS 8.1</h1><p>1.点击编辑虚拟机设置：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/17.png" alt></p><p>2.选择<font color="red" size="3">CD/DVD</font>，勾选启动时连接，再选择使用ISO映像文件，找到下载好的系统镜像文件添加进去，最后确定：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/18.png" alt></p><p>3.开启此虚拟机：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/19.png" alt></p><p>4.开启虚拟机后会出现以下界面，鼠标点进黑窗口，使用键盘方向键选择第一项，安装<font color="red" size="3">CentOS 8</font>，回车，系统开始自动安装</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/20.png" alt></p><p>5.安装完成后选择语言，根据自己情况选择，然后点击继续：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/21.png" alt></p><p>6.首先打开网络和主机名，给虚拟机连上网络：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/22.png" alt></p><p><strong>如果网络连接不上，多半是<font color="red" size="3">DHCP</font>问题，解决办法：</strong></p><p><a href="https://blog.csdn.net/suoyudong/article/details/83037670" target="_blank" rel="noopener">解决安装centos 过程中以太网连接不上网络，不能自动分配ip的问题</a> (By 索渝东)</p><p>7.点击时间和日期，设置系统时间并更改时区(打开网络时间)：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/23.png" alt></p><p>8.选择安装目的地：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/24.png" alt></p><p>9.选择自定义配置，点击完成：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/25.png" alt></p><p>10.添加磁盘分区</p><p><font color="red" size="3">Linux</font>的分区，并不像<font color="red" size="3">Windows</font>一样，分成<font color="red" size="3">C、D、E</font>等盘，介绍几个重要的分区：</p><ul><li>交换分区（swap）：交换分区和Windows的虚拟内存很像。现在内存也便宜，物理服务器的配置也高，以前的说法是一般为物理内存的2倍，现在一般情况下划分为4~8GB备用即可。我们虚拟机的内存是4GB，我们就划8GB吧。</li><li>启动分区（boot）：200MB足够了。</li><li>根分区（/）：剩余空间都给根分区吧。当然我们也可以单独划出/data分区，专门用来存储存数据，不过这里我们先不这样做，直接全部都给根分区。</li></ul><p>按照下图顺序依次进行设置：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/26.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/27.png" alt></p><p>11.点击完成后会弹出更改摘要页面，点击接受更改：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/28.png" alt></p><p>12.点击开始安装：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/29.png" alt></p><p>13.设置<font color="red" size="3">ROOT</font>密码：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/30.png" alt></p><p>14.点击创建用户，可以把用户设为管理员方便操作，如果密码简单就点击两次完成：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/31.png" alt></p><p>15.安装完成后点击重启电脑：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/32.png" alt></p><p>16.重启完成后点击<font color="red" size="3">LICENS INFORMATION</font>,勾选同意许可，然后点击完成：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/33.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/34.png" alt></p><p>17.点击结束配置：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/35.png" alt></p><p>18.来到登录界面，点击未列出，以<font color="red" size="3">root</font>登录，方便后面配置操作：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/36.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/37.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/38.png" alt></p><p>19.选择语言：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/39.png" alt></p><p>选择键盘布局：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/40.png" alt></p><p>是否打开位置服务：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/41.png" alt></p><p>然后按照需要添加账号，然后就可以进入啦：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/42.png" alt></p><p>20.关闭系统使用帮助后，来到我们的<font color="red" size="3">centos8.1</font>桌面，点击活动可以看到系统软件，第一个是内置浏览器，点击最下面可以看到系统所有软件：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/43.png" alt></p><p>21.点击右上角折叠按钮可以连接网络，打开浏览器就可以访问啦，如果不能联网，在上面已经给出解决办法：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/44.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/45.png" alt></p><p>22.右上角有关机按钮，点击就可以关机：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/VMware-%E5%AE%89%E8%A3%85-CentOS-8-1-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/46.png" alt></p><p>到这里，我们的<font color="red" size="3">CentOS 8 Linux</font> 就算安装完成了，其他<font color="red" size="3">CentOS 8 </font>系列发行版本安装过程类似，可作参考。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 搭建个人博客超详细教程</title>
      <link href="/1.html"/>
      <url>/1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/01.png" alt></p><p><font color="magenta" size="4"><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color="red" size="4"> V：wph18092625029，QQ:2074785600</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p></li><li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p></li><li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p></li></ul><p><a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" title="为什么你应该（从现在开始就）写博客" target="_blank" rel="noopener">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p><p><a href="https://www.zhihu.com/question/19916345" title="为什么要自建博客？" target="_blank" rel="noopener">《为什么要自建博客？》</a>   (By 知乎)</p><p><a href="https://www.cnblogs.com/jhzhu/p/3893297.html" title="我为什么写博客" target="_blank" rel="noopener">《我为什么写博客》</a> （By 知明所以）</p><p>我们需要知道搭建博客要用到的框架。<font color="red" size="3">Hexo</font>是高效的静态站点生成框架，它基于<font color="red" size="3">Node.js</font>。我们使用<font color="red" size="3">MarkDown</font>在本地编辑我们的博客文章，通过<font color="red" size="3">Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p><h2 id="本文目录"><a href="#本文目录" class="headerlink" title="本文目录"></a>本文目录</h2><ul><li><strong>快速搭建</strong></li><li>安装<font color="red" size="3">Node.js</font></li><li>添加国内镜像</li><li>安装<font color="red" size="3">Git </font></li><li>注册<font color="red" size="3">Github</font>账号</li><li>创建<font color="red" size="3">Git</font>仓库</li><li>安装<font color="red" size="3">Hexo</font> </li><li>配置本地<font color="red" size="3">Hexo</font></li><li>连接<font color="red" size="3">Github</font>与本地 </li><li>写文章、发布文章 </li><li><font color="red" size="3">MarkDown</font>文章编辑器说明</li><li>配置个性化域名</li><li>更换自己喜欢的<font color="red" size="3">Hexo</font>主题</li><li>我的博客源代码</li><li>结语</li></ul><hr><h1 id="快速搭建"><a href="#快速搭建" class="headerlink" title="快速搭建"></a>快速搭建</h1><p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p><p>在这里以我的博客为例。</p><h2 id="一、下载博客源代码"><a href="#一、下载博客源代码" class="headerlink" title="一、下载博客源代码"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color="red" size="3">Star&amp;Fork</font>我的博客源代码：<a href="https://github.com/MUYIio/hexo-themes-matery" target="_blank" rel="noopener">https://github.com/MUYIio/hexo-themes-matery</a>，这里我给出两种下载方法：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/03.png" alt></p><p><strong>第一种</strong>：直接<font color="red" size="3">DownLoad</font>，下载到本地就可以。（<strong>不推荐</strong>）</p><p><strong>第二种</strong>：如果你已经安装了<a href="https://git-scm.com/download/win" title="Git" target="_blank" rel="noopener">Git</a>，就可以右键单击<font color="red" size="3">Come Bash Here</font>运行</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:MUYIio/hexo-themes-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将所有文件下载到本地，这个复杂一点。</p><h2 id="二、修改博客文档配置"><a href="#二、修改博客文档配置" class="headerlink" title="二、修改博客文档配置"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p><ul><li>根目录配置文件<font color="red" size="3">_config.yml</font>和主题目录配置文件<font color="red" size="3">_config.yml</font>中修改个人信息。</li><li>根目录配置文件中修改<font color="red" size="3">deploy</font>一栏的<font color="red" size="3">repository</font>。</li><li>根目录配置文件中修改<font color="red" size="3">baidu_url_submit</font>一栏的<font color="red" size="3">token</font>。</li><li>主题配置文件中修改<font color="red" size="3">gitalk</font>一栏，修改方法见正文。</li></ul><p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p><p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p><p><strong>本地环境搭建好之后会生成的文件：</strong></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/35.png" alt></p><p>然后直接把<font color="red" size="3">Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/37.png" alt></p><p>然后在<font color="red" size="3">Hexo</font>文件夹下右键单击鼠标，点击 <font color="red" size="3">Git Bash Here</font>点击输入以下命令上传就可以了：</p><pre><code>hexo cleanhexo ghexo d</code></pre><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>了解一下什么是<font color="red" size="3">Node.js</font>：</p><blockquote><p><font color="red" size="3">Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p></blockquote><p>需要用到的命令：</p><pre><code>$ git --version$ node -v$ npm -v</code></pre><p><a href="https://nodejs.org/en/download/" title="Node.js" target="_blank" rel="noopener">点击此处</a>进入<font color="red" size="3">Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color="red" size="3">Next</font>。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/04.png" alt></p><p>检验是否安装成功：<br>按<font color="red" size="3">Win+R</font>打开命令提示符，输入<font color="red" size="3">node -v</font>和<font color="red" size="3">npm -v</font>，如果出现版本号，那么就安装成功了。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png" alt></p><h1 id="添加国内镜像"><a href="#添加国内镜像" class="headerlink" title="添加国内镜像"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p><pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><blockquote><p><font color="red" size="3">Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color="red" size="3">Github</font>。</p></blockquote><p><a href="https://git-scm.com/download/win" title="Git" target="_blank" rel="noopener">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/005.png" alt></p><p>参考资料：<a href="https://www.cnblogs.com/jytx/p/5602927.html" title="如何在windows下安装GIT" target="_blank" rel="noopener">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p><p>检验是否安装成功：</p><p>安装完成后在命令提示符中输入<font color="red" size="3">git –version</font>验证是否安装成功</p><pre><code>git --version</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/06.png" alt></p><h1 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h1><p><font color="red" size="3">Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href="https://github.com/" title="Github" target="_blank" rel="noopener">点击此处</a>进入<font color="red" size="3">Github</font>官网点击 <font color="red" size="3">Sign Up </font>注册账户。</p><h1 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h1><p>登录<font color="red" size="3">Github</font>创建一个仓库</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/07.png" alt></p><p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color="red" size="3">.github.io</font>后缀，<font color="red" size="3">README</font>初始化也要勾上。名称一定要和你的<font color="red" size="3">Github</font>名字完全一样，比如你<font color="red" size="3">github</font>名字叫<font color="red" size="3">A</font>，那么仓库名字一定要是<font color="red" size="3">A.github.io</font>。</strong></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/08.png" alt></p><p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color="red" size="3">Settings</font>（不是头像下面那个<font color="red" size="3">Settings</font>），向下拉到最后有个<font color="red" size="3">GitHub Pages</font>，点击<font color="red" size="3">Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color="red" size="3">GitHub Pages</font>，就可以预览效果啦。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/09.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/10.png" alt></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><blockquote><p><font color="red" size="3">Hexo</font>是一款基于<font color="red" size="3">Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color="red" size="3">GitHub</font>和<font color="red" size="3">Heroku</font>上，是搭建博客的首选框架。</p></blockquote><p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color="red" size="3">（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>，输入以下<font color="red" size="3"> npm </font>命令即可安装</p><pre><code>$ npm install hexo-cli -g</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/11.png" alt></p><p>输入<font color="red" size="3">hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p><h1 id="配置本地hexo"><a href="#配置本地hexo" class="headerlink" title="配置本地hexo"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color="red" size="3">Hexo</font>文件夹，比如我的<font color="red" size="3">（C/panakot Blog/Hexo）</font>，在<font color="red" size="3">Hexo</font>文件夹下右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>，依次输入以下<font color="red" size="3"> npm </font>命令即可初始化。</p><pre><code>hexo initnpm install</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/12.png" alt></p><p>初始化成功生成的文件：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/13.png" alt></p><p>接着我们输入<font color="red" size="3">hexo g</font>生成静态网页，然后输入<font color="red" size="3">hexo s</font>打开本地服务器，然后浏览器打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p><p>显示以下信息说明操作正确：</p><p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/14.png" alt></p><p>按<font color="red" size="3">ctrl+c</font>关闭本地服务器。</p><p><strong>我们以后常用到的<font color="red" size="3">Hexo</font>命令：</strong></p><ul><li><p><font color="red" size="3">hexo s</font>等价于 <font color="red" size="3">hexo server</font>  #<font color="red" size="3">Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p></li><li><p><font color="red" size="3">hexo g</font> 等价于 <font color="red" size="3">hexo generate</font>  #生成静态网页 (执行 $ <font color="red" size="3">hexo g</font>后会在站点根目录下生成<font color="red" size="3">public</font>文件夹,<font color="red" size="3"> hexo</font>会将”<font color="red" size="3">/blog/source/</font>“ 下面的<font color="red" size="3">.md</font>后缀的文件编译为<font color="red" size="3">.html</font>后缀的文件,存放在”<font color="red" size="3">/blog/public/ </font>“ 路径下)</p></li><li><p><font color="red" size="3">hexo d </font>等价于 <font color="red" size="3">hexo deploy</font>  #将本地数据部署到远端服务器(如<font color="red" size="3">github</font>)</p></li><li><p><font color="red" size="3">hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color="red" size="3">public</font>文件夹</p></li></ul><h1 id="连接Github与本地"><a href="#连接Github与本地" class="headerlink" title="连接Github与本地"></a>连接Github与本地</h1><h2 id="一、生成密钥"><a href="#一、生成密钥" class="headerlink" title="一、生成密钥"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color="red" size="3">Git Bash Here</font>输入以下命令：</p><pre><code>git config --global user.name &quot;Name&quot;git config --global user.email &quot;Email&quot;</code></pre><p><strong><font color="red" size="3">Name</font>和<font color="red" size="3">Email</font>是我们注册<font color="red" size="3">Github</font>时的用户名和邮箱。</strong></p><p>然后生成密钥：</p><pre><code>ssh-keygen -t rsa -C &quot;Email&quot;</code></pre><p><strong><font color="red" size="3">Email</font>是我们注册<font color="red" size="3">Github</font>时的邮箱</strong></p><p>然后会出现：</p><pre><code>Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/you/.ssh/id_rsa)://到这里可以直接回车将密钥按默认文件进行存储</code></pre><p>回车之后：</p><pre><code>Enter passphrase (empty for no passphrase)://这里是要你输入密码，其实不需要输什么密码，直接回车就行Enter same passphrase again:</code></pre><p>接下来会有：</p><pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:这里是各种字母数字组成的字符串，结尾是你的邮箱The key&#39;s randomart image is:这里也是各种字母数字符号组成的字符串</code></pre><p>现在密钥已经生成，一般存放在<font color="red" size="3">（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p><pre><code> clip &lt; ~/.ssh/id_rsa.pub</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/15.png" alt></p><h2 id="二、连接Github"><a href="#二、连接Github" class="headerlink" title="二、连接Github"></a>二、连接Github</h2><p>在<font color="red" size="3">Github</font>头像下面点击<font color="red" size="3">Settings</font>，再点击<font color="red" size="3">SSH and GPG keys</font>，新建一个<font color="red" size="3">SSH</font>，名字任意。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/16.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/17.png" alt></p><p>然后将刚才复制的密钥添加就可以了，像这样：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/18.png" alt></p><p><strong>本地连接Github</strong></p><p>右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p><pre><code>ssh -T git@github.com//注意不要做任何修改</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/19.png" alt></p><p>用记事本打开博客根目录下的<font color="red" size="3">_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color="red" size="3">Github</font>。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/20.png" alt></p><p>修改最后一行的配置：</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type:</code></pre><p>改为：</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repository: git@github.com:panakot/panakot.github.io.git  branch: master</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/21.png" alt></p><p>切记：</p><ul><li><strong><font color="red" size="3">repository</font>修改为你自己的<font color="red" size="3">github</font>项目地址</strong>。</li><li><strong>每一个冒号后面都有一个空格。</strong></li></ul><h1 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color="red" size="3">Git Bash Here</font>输入以下命令，安装一个扩展.</p><pre><code>npm i hexo-deployer-git</code></pre><p>然后输入下面的命令，新建一篇文章。</p><pre><code>hexo new post &quot;article title&quot;</code></pre><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/22.png" alt></p><p>然后打开<font color="red" size="3">C:\panakot Blog\Hexo\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color="red" size="3">.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/23.png" alt></p><p>编写完<font color="red" size="3">markdown</font>文件后，根目录下右键打开<font color="red" size="3">Git Bash Here</font>输入<font color="red" size="3">hexo g</font>生成静态网页，然后输入<font color="red" size="3">hexo s</font>可以本地预览效果，最后输入<font color="red" size="3">hexo d</font>上传到<font color="red" size="3">github</font>上。</p><p>你的博客地址：<font color="red" size="3">https://你的用户名.github.io</font>，比如我的是：<a href="https://muyiio.github.io" target="_blank" rel="noopener">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p><h1 id="MarkDown文章编辑器说明"><a href="#MarkDown文章编辑器说明" class="headerlink" title="MarkDown文章编辑器说明"></a>MarkDown文章编辑器说明</h1><blockquote><p>前面我们提到了使用<font color="red" size="3">MarkDown</font>编辑我们的博客文章。<font color="red" size="3"> Markdown</font> 是<font color="red" size="3"> 2004</font> 年由 <font color="red" size="3">John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color="red" size="3"> .md </font>文件可以使用支持 <font color="red" size="3">Markdown </font>语法的编辑器编辑，然后将写好的文章<font color="red" size="3">（.md文件）</font>保存到<font color="red" size="3"> \Hexo\source_posts </font>文件夹下即可。</p></blockquote><p> <font color="red" size="3">Windows </font>上推荐使用 <font color="red" size="3">MarkdownPad2 </font>或者<font color="red" size="3">小书匠</font>编辑器，<font color="red" size="3">macOS </font>上使用<font color="red" size="3"> Mou</font> 编辑器，<font color="red" size="3">Linux </font>上使用 <font color="red" size="3">Remarkable</font> 编辑器，<font color="red" size="3">Web </font>端上使用 简书。</p><p><strong><a href="http://markdownpad.com/download.html" title="MarkDown" target="_blank" rel="noopener">点击此处</a>下载<font color="red" size="3">MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p><p><a href="https://www.jianshu.com/p/q81RER/" title="献给写作者的 Markdown 新手指南" target="_blank" rel="noopener">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p><p><a href="https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app" title="Markdown语法图文全面详解" target="_blank" rel="noopener">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p><p><a href="https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app" title="Markdown 语法手册 （完整整理版）" target="_blank" rel="noopener">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p><p><a href="https://sspai.com/post/25137" title="认识与入门 Markdown" target="_blank" rel="noopener">《认识与入门 Markdown》</a>（By Te_Lee）</p><p>写完文章记得在博客根目录<font color="red" size="3">Bash Here</font>输入<font color="red" size="3">hexo g</font>和<font color="red" size="3">hexo d</font>上传到网站。</p><h1 id="配置个性化域名"><a href="#配置个性化域名" class="headerlink" title="配置个性化域名"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color="red" size="3"><a href="http://www.xxx.github.io" target="_blank" rel="noopener">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color="red" size="3"><a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> </font>。</p><p><a href="https://www.aliyun.com/" title="阿里云" target="_blank" rel="noopener">阿里云</a>和<a href="https://cloud.tencent.com/" title="腾讯云" target="_blank" rel="noopener">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/24.png" alt></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/25.png" alt></p><p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color="red" size="3">CNAME </font>，第一个主机记录为<font color="red" size="3"> @ </font>，第二个主机记录为<font color="red" size="3"> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color="red" size="3">muyiio.github.io</font>），保存之后域名解析就完成了！</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/27.png" alt></p><p><strong>方法二：</strong>两个记录类型为<font color="red" size="3"> A </font>，第一个主机记录为<font color="red" size="3"> @ </font>，第二个主机记录为<font color="red" size="3"> www</font>，记录值都为博客的<font color="red" size="3"> IP</font> 地址，<font color="red" size="3">IP </font>地址可以<font color="red" size="3"> cmd</font> 中输入<font color="red" size="3"> ping</font> 你的博客地址 获得（比如我的：<font color="red" size="3">ping muyiio.github.io</font>），保存之后域名解析就完成了！</p><p>参考资料：</p><p><a href="https://blog.csdn.net/it_man/article/details/9017307" title="域名解析中A记录、CNAME、MX记录、NS记录的区别和联系" target="_blank" rel="noopener">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/26.png" alt></p><p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p><blockquote><p>如果你填写的是没有<font color="red" size="3">www</font>的，比如 <font color="red" size="3">muyio.com</font>，那么无论是访问<font color="red" size="3"> <a href="https://www.muyiio.com" target="_blank" rel="noopener">https://www.muyiio.com</a> </font>还是<font color="red" size="3"> <a href="https://muyiio.com" target="_blank" rel="noopener">https://muyiio.com</a></font> ，都会自动跳转到<font color="red" size="3"> <a href="https://muyiio.com" target="_blank" rel="noopener">https://muyiio.com</a></font>。</p></blockquote><blockquote><p>如果你填写的是带<font color="red" size="3">www</font>的，比如 <font color="red" size="3"><a href="http://www.muyiio.com" target="_blank" rel="noopener">www.muyiio.com</a> </font>，那么无论是访问 <font color="red" size="3"><a href="https://www.muyiio.com" target="_blank" rel="noopener">https://www.muyiio.com</a></font> 还是 <font color="red" size="3"><a href="https://muyiio.com" target="_blank" rel="noopener">https://muyiio.com</a> </font>，都会自动跳转到 <font color="red" size="3"><a href="http://www.imuyiio.com" target="_blank" rel="noopener">http://www.imuyiio.com</a></font>。</p></blockquote><p>然后打开你的<font color="red" size="3">github</font>博客项目，点击settings，拉到下面<font color="red" size="3">Custom domain</font>处，填上你自己的域名，保存就可以了。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/28.png" alt></p><p>现在我们的项目根目录应该会出现一个名为<font color="red" size="3">CNAME</font>的文件了。如果没有的话，打开你本地博客<font color="red" size="3">/source</font>目录，我的是<font color="red" size="3">C:\Blog\Hexo\source</font>，新建<font color="red" size="3">CNAME</font>文件，<font color="red" size="3">（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color="red" size="3">hexo g、hexo d</font>上传到<font color="red" size="3">github</font>。</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/29.png" alt></p><p>现在就可以通过我们的个性化域名：<font color="red" size="3"><a href="http://www.xxx.com、xxx.com" target="_blank" rel="noopener">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p><h1 id="更换自己喜欢的Hexo主题"><a href="#更换自己喜欢的Hexo主题" class="headerlink" title="更换自己喜欢的Hexo主题"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href="https://hexo.io/themes/" title="Hexo主题专栏" target="_blank" rel="noopener">Hexo主题专栏</a>可以看到很多<font color="red" size="3">Hexo</font>主题：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/30.png" alt></p><p>推荐：</p><p><a href="https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app" title="几个好用的hexo主题" target="_blank" rel="noopener">几个好用的hexo主题</a> (By fail_perfectly)</p><p>这里我们以<a href="http://huangxuan.me/" title="Bean Tech" target="_blank" rel="noopener">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color="red" size="3">GitHub</font>（<font color="red" size="3">有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/31.png" alt></p><p>点击进入主题的<font color="red" size="3">GitHub</font>地址：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/32.png" alt></p><p>复制该项目地址：</p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/33.png" alt></p><p>然后打开<font color="red" size="3"> Hexo </font>文件夹下的<font color="red" size="3"> themes</font> 目录（如：<font color="red" size="3">C:\MUYIio Blog\Hexo\themes</font>），右键<font color="red" size="3"> Git Bash Here</font>，输入以下命令：</p><pre><code>$ git clone 此处填写你刚才复制的主题地址</code></pre><p>以我们刚才复制的为例：</p><pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io</code></pre><p>下载完成后即可在<font color="red" size="3"> themes </font>目录下生成 <font color="red" size="3">hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color="red" size="3">Hexo</font> 文件夹下的配置文件 <font color="red" size="3">_config.yml </font>，找到关键字 <font color="red" size="3">theme</font>，修改参数为：<font color="red" size="3">theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p><p><img src="https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/34.png" alt></p><p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color="red" size="3"> Git Bash Here</font>，输入以下命令：</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color="red" size="3">_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color="red" size="3">C:\MUYIio Blog\Hexo_config.yml</font>），主要包含<font color="red" size="3"> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color="red" size="3">C:\MUYIio Blog\Hexo\themes\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color="red" size="3"> _config.yml </font>文件里都有相关注释，按需修改即可。</p><h1 id="我的博客源代码"><a href="#我的博客源代码" class="headerlink" title="我的博客源代码"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href="https://github.com/MUYIio/hexo-themes-matery" target="_blank" rel="noopener">https://github.com/MUYIio/hexo-themes-matery</a>，有心的话可以给个<font color="red" size="3">Star&amp;Fork</font>。</strong></p><p>下载源代码：git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:MUYIio/hexo-themes-matery.git</p><p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color="red" size="3">Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p><p>主题的原地址在这里：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p><p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p><table><tr><td bgcolor="orange">-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            </td></tr></table><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p><p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
